   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f10x_adc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.ADC_DeInit,"ax",%progbits
  19              		.align	2
  20              		.global	ADC_DeInit
  21              		.thumb
  22              		.thumb_func
  24              	ADC_DeInit:
  25              	.LFB29:
  26              		.file 1 "/home/virusv/usart/Libraries/src/stm32f10x_adc.c"
   1:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
   2:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   ******************************************************************************
   3:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @file    stm32f10x_adc.c
   4:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @author  MCD Application Team
   5:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @version V3.5.0
   6:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @date    11-March-2011
   7:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @brief   This file provides all the ADC firmware functions.
   8:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   ******************************************************************************
   9:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @attention
  10:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *
  11:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *
  18:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   ******************************************************************************
  20:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
  21:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
  22:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /* Includes ------------------------------------------------------------------*/
  23:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #include "stm32f10x_adc.h"
  24:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #include "stm32f10x_rcc.h"
  25:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
  26:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @{
  28:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
  29:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
  30:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /** @defgroup ADC 
  31:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @brief ADC driver modules
  32:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @{
  33:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
  34:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
  35:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_TypesDefinitions
  36:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @{
  37:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
  38:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
  39:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
  40:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @}
  41:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
  42:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
  43:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_Defines
  44:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @{
  45:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
  46:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
  47:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /* ADC DISCNUM mask */
  48:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define CR1_DISCNUM_Reset           ((uint32_t)0xFFFF1FFF)
  49:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
  50:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /* ADC DISCEN mask */
  51:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define CR1_DISCEN_Set              ((uint32_t)0x00000800)
  52:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define CR1_DISCEN_Reset            ((uint32_t)0xFFFFF7FF)
  53:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
  54:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /* ADC JAUTO mask */
  55:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define CR1_JAUTO_Set               ((uint32_t)0x00000400)
  56:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define CR1_JAUTO_Reset             ((uint32_t)0xFFFFFBFF)
  57:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
  58:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /* ADC JDISCEN mask */
  59:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define CR1_JDISCEN_Set             ((uint32_t)0x00001000)
  60:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define CR1_JDISCEN_Reset           ((uint32_t)0xFFFFEFFF)
  61:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
  62:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /* ADC AWDCH mask */
  63:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define CR1_AWDCH_Reset             ((uint32_t)0xFFFFFFE0)
  64:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
  65:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /* ADC Analog watchdog enable mode mask */
  66:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define CR1_AWDMode_Reset           ((uint32_t)0xFF3FFDFF)
  67:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
  68:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /* CR1 register Mask */
  69:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define CR1_CLEAR_Mask              ((uint32_t)0xFFF0FEFF)
  70:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
  71:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /* ADC ADON mask */
  72:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define CR2_ADON_Set                ((uint32_t)0x00000001)
  73:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define CR2_ADON_Reset              ((uint32_t)0xFFFFFFFE)
  74:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
  75:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /* ADC DMA mask */
  76:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define CR2_DMA_Set                 ((uint32_t)0x00000100)
  77:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define CR2_DMA_Reset               ((uint32_t)0xFFFFFEFF)
  78:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
  79:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /* ADC RSTCAL mask */
  80:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define CR2_RSTCAL_Set              ((uint32_t)0x00000008)
  81:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
  82:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /* ADC CAL mask */
  83:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define CR2_CAL_Set                 ((uint32_t)0x00000004)
  84:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
  85:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /* ADC SWSTART mask */
  86:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define CR2_SWSTART_Set             ((uint32_t)0x00400000)
  87:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
  88:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /* ADC EXTTRIG mask */
  89:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define CR2_EXTTRIG_Set             ((uint32_t)0x00100000)
  90:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define CR2_EXTTRIG_Reset           ((uint32_t)0xFFEFFFFF)
  91:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
  92:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /* ADC Software start mask */
  93:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define CR2_EXTTRIG_SWSTART_Set     ((uint32_t)0x00500000)
  94:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define CR2_EXTTRIG_SWSTART_Reset   ((uint32_t)0xFFAFFFFF)
  95:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
  96:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /* ADC JEXTSEL mask */
  97:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define CR2_JEXTSEL_Reset           ((uint32_t)0xFFFF8FFF)
  98:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
  99:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /* ADC JEXTTRIG mask */
 100:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define CR2_JEXTTRIG_Set            ((uint32_t)0x00008000)
 101:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define CR2_JEXTTRIG_Reset          ((uint32_t)0xFFFF7FFF)
 102:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 103:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /* ADC JSWSTART mask */
 104:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define CR2_JSWSTART_Set            ((uint32_t)0x00200000)
 105:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 106:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /* ADC injected software start mask */
 107:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define CR2_JEXTTRIG_JSWSTART_Set   ((uint32_t)0x00208000)
 108:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define CR2_JEXTTRIG_JSWSTART_Reset ((uint32_t)0xFFDF7FFF)
 109:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 110:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /* ADC TSPD mask */
 111:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define CR2_TSVREFE_Set             ((uint32_t)0x00800000)
 112:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define CR2_TSVREFE_Reset           ((uint32_t)0xFF7FFFFF)
 113:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 114:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /* CR2 register Mask */
 115:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define CR2_CLEAR_Mask              ((uint32_t)0xFFF1F7FD)
 116:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 117:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /* ADC SQx mask */
 118:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define SQR3_SQ_Set                 ((uint32_t)0x0000001F)
 119:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define SQR2_SQ_Set                 ((uint32_t)0x0000001F)
 120:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define SQR1_SQ_Set                 ((uint32_t)0x0000001F)
 121:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 122:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /* SQR1 register Mask */
 123:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define SQR1_CLEAR_Mask             ((uint32_t)0xFF0FFFFF)
 124:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 125:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /* ADC JSQx mask */
 126:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define JSQR_JSQ_Set                ((uint32_t)0x0000001F)
 127:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 128:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /* ADC JL mask */
 129:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define JSQR_JL_Set                 ((uint32_t)0x00300000)
 130:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define JSQR_JL_Reset               ((uint32_t)0xFFCFFFFF)
 131:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 132:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /* ADC SMPx mask */
 133:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define SMPR1_SMP_Set               ((uint32_t)0x00000007)
 134:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define SMPR2_SMP_Set               ((uint32_t)0x00000007)
 135:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 136:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /* ADC JDRx registers offset */
 137:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define JDR_Offset                  ((uint8_t)0x28)
 138:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 139:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /* ADC1 DR register base address */
 140:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** #define DR_ADDRESS                  ((uint32_t)0x4001244C)
 141:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 142:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
 143:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @}
 144:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
 145:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 146:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_Macros
 147:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @{
 148:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
 149:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 150:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
 151:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @}
 152:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
 153:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 154:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_Variables
 155:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @{
 156:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
 157:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 158:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
 159:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @}
 160:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
 161:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 162:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_FunctionPrototypes
 163:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @{
 164:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
 165:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 166:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
 167:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @}
 168:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
 169:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 170:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_Functions
 171:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @{
 172:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
 173:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 174:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
 175:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @brief  Deinitializes the ADCx peripheral registers to their default reset values.
 176:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 177:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @retval None
 178:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
 179:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** void ADC_DeInit(ADC_TypeDef* ADCx)
 180:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** {
  27              		.loc 1 180 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 82B0     		sub	sp, sp, #8
  36              		.cfi_def_cfa_offset 16
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 7860     		str	r0, [r7, #4]
 181:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the parameters */
 182:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 183:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   
 184:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   if (ADCx == ADC1)
  40              		.loc 1 184 0
  41 0008 7B68     		ldr	r3, [r7, #4]
  42 000a 174A     		ldr	r2, .L5
  43 000c 9342     		cmp	r3, r2
  44 000e 0AD1     		bne	.L2
 185:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
 186:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Enable ADC1 reset state */
 187:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC1, ENABLE);
  45              		.loc 1 187 0
  46 0010 4FF40070 		mov	r0, #512
  47 0014 0121     		movs	r1, #1
  48 0016 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 188:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Release ADC1 from reset state */
 189:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC1, DISABLE);
  49              		.loc 1 189 0
  50 001a 4FF40070 		mov	r0, #512
  51 001e 0021     		movs	r1, #0
  52 0020 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  53 0024 1CE0     		b	.L1
  54              	.L2:
 190:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
 191:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   else if (ADCx == ADC2)
  55              		.loc 1 191 0
  56 0026 7B68     		ldr	r3, [r7, #4]
  57 0028 104A     		ldr	r2, .L5+4
  58 002a 9342     		cmp	r3, r2
  59 002c 0AD1     		bne	.L4
 192:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
 193:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Enable ADC2 reset state */
 194:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC2, ENABLE);
  60              		.loc 1 194 0
  61 002e 4FF48060 		mov	r0, #1024
  62 0032 0121     		movs	r1, #1
  63 0034 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 195:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Release ADC2 from reset state */
 196:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC2, DISABLE);
  64              		.loc 1 196 0
  65 0038 4FF48060 		mov	r0, #1024
  66 003c 0021     		movs	r1, #0
  67 003e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  68 0042 0DE0     		b	.L1
  69              	.L4:
 197:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
 198:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   else
 199:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
 200:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     if (ADCx == ADC3)
  70              		.loc 1 200 0
  71 0044 7B68     		ldr	r3, [r7, #4]
  72 0046 0A4A     		ldr	r2, .L5+8
  73 0048 9342     		cmp	r3, r2
  74 004a 09D1     		bne	.L1
 201:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     {
 202:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****       /* Enable ADC3 reset state */
 203:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC3, ENABLE);
  75              		.loc 1 203 0
  76 004c 4FF40040 		mov	r0, #32768
  77 0050 0121     		movs	r1, #1
  78 0052 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 204:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****       /* Release ADC3 from reset state */
 205:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC3, DISABLE);
  79              		.loc 1 205 0
  80 0056 4FF40040 		mov	r0, #32768
  81 005a 0021     		movs	r1, #0
  82 005c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  83              	.L1:
 206:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     }
 207:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
 208:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** }
  84              		.loc 1 208 0
  85 0060 0837     		adds	r7, r7, #8
  86              		.cfi_def_cfa_offset 8
  87 0062 BD46     		mov	sp, r7
  88              		.cfi_def_cfa_register 13
  89              		@ sp needed
  90 0064 80BD     		pop	{r7, pc}
  91              	.L6:
  92 0066 00BF     		.align	2
  93              	.L5:
  94 0068 00240140 		.word	1073816576
  95 006c 00280140 		.word	1073817600
  96 0070 003C0140 		.word	1073822720
  97              		.cfi_endproc
  98              	.LFE29:
 100              		.section	.text.ADC_Init,"ax",%progbits
 101              		.align	2
 102              		.global	ADC_Init
 103              		.thumb
 104              		.thumb_func
 106              	ADC_Init:
 107              	.LFB30:
 209:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 210:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
 211:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @brief  Initializes the ADCx peripheral according to the specified parameters
 212:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *         in the ADC_InitStruct.
 213:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 214:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADC_InitStruct: pointer to an ADC_InitTypeDef structure that contains
 215:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *         the configuration information for the specified ADC peripheral.
 216:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @retval None
 217:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
 218:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** void ADC_Init(ADC_TypeDef* ADCx, ADC_InitTypeDef* ADC_InitStruct)
 219:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** {
 108              		.loc 1 219 0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 16
 111              		@ frame_needed = 1, uses_anonymous_args = 0
 112              		@ link register save eliminated.
 113 0000 80B4     		push	{r7}
 114              		.cfi_def_cfa_offset 4
 115              		.cfi_offset 7, -4
 116 0002 85B0     		sub	sp, sp, #20
 117              		.cfi_def_cfa_offset 24
 118 0004 00AF     		add	r7, sp, #0
 119              		.cfi_def_cfa_register 7
 120 0006 7860     		str	r0, [r7, #4]
 121 0008 3960     		str	r1, [r7]
 220:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0;
 122              		.loc 1 220 0
 123 000a 0023     		movs	r3, #0
 124 000c FB60     		str	r3, [r7, #12]
 221:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   uint8_t tmpreg2 = 0;
 125              		.loc 1 221 0
 126 000e 0023     		movs	r3, #0
 127 0010 FB72     		strb	r3, [r7, #11]
 222:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the parameters */
 223:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 224:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_MODE(ADC_InitStruct->ADC_Mode));
 225:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(ADC_InitStruct->ADC_ScanConvMode));
 226:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(ADC_InitStruct->ADC_ContinuousConvMode));
 227:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_EXT_TRIG(ADC_InitStruct->ADC_ExternalTrigConv));   
 228:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(ADC_InitStruct->ADC_DataAlign)); 
 229:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_REGULAR_LENGTH(ADC_InitStruct->ADC_NbrOfChannel));
 230:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 231:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /*---------------------------- ADCx CR1 Configuration -----------------*/
 232:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Get the ADCx CR1 value */
 233:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->CR1;
 128              		.loc 1 233 0
 129 0012 7B68     		ldr	r3, [r7, #4]
 130 0014 5B68     		ldr	r3, [r3, #4]
 131 0016 FB60     		str	r3, [r7, #12]
 234:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Clear DUALMOD and SCAN bits */
 235:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   tmpreg1 &= CR1_CLEAR_Mask;
 132              		.loc 1 235 0
 133 0018 FB68     		ldr	r3, [r7, #12]
 134 001a 23F47023 		bic	r3, r3, #983040
 135 001e 23F48073 		bic	r3, r3, #256
 136 0022 FB60     		str	r3, [r7, #12]
 236:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Configure ADCx: Dual mode and scan conversion mode */
 237:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Set DUALMOD bits according to ADC_Mode value */
 238:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Set SCAN bit according to ADC_ScanConvMode value */
 239:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_Mode | ((uint32_t)ADC_InitStruct->ADC_ScanConvMode << 8
 137              		.loc 1 239 0
 138 0024 3B68     		ldr	r3, [r7]
 139 0026 1A68     		ldr	r2, [r3]
 140 0028 3B68     		ldr	r3, [r7]
 141 002a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 142 002c 1B02     		lsls	r3, r3, #8
 143 002e 1343     		orrs	r3, r3, r2
 144 0030 FA68     		ldr	r2, [r7, #12]
 145 0032 1343     		orrs	r3, r3, r2
 146 0034 FB60     		str	r3, [r7, #12]
 240:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Write to ADCx CR1 */
 241:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   ADCx->CR1 = tmpreg1;
 147              		.loc 1 241 0
 148 0036 7B68     		ldr	r3, [r7, #4]
 149 0038 FA68     		ldr	r2, [r7, #12]
 150 003a 5A60     		str	r2, [r3, #4]
 242:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 243:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /*---------------------------- ADCx CR2 Configuration -----------------*/
 244:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Get the ADCx CR2 value */
 245:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->CR2;
 151              		.loc 1 245 0
 152 003c 7B68     		ldr	r3, [r7, #4]
 153 003e 9B68     		ldr	r3, [r3, #8]
 154 0040 FB60     		str	r3, [r7, #12]
 246:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Clear CONT, ALIGN and EXTSEL bits */
 247:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   tmpreg1 &= CR2_CLEAR_Mask;
 155              		.loc 1 247 0
 156 0042 FA68     		ldr	r2, [r7, #12]
 157 0044 164B     		ldr	r3, .L8
 158 0046 1340     		ands	r3, r3, r2
 159 0048 FB60     		str	r3, [r7, #12]
 248:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Configure ADCx: external trigger event and continuous conversion mode */
 249:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Set ALIGN bit according to ADC_DataAlign value */
 250:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Set EXTSEL bits according to ADC_ExternalTrigConv value */
 251:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Set CONT bit according to ADC_ContinuousConvMode value */
 252:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_DataAlign | ADC_InitStruct->ADC_ExternalTrigConv |
 160              		.loc 1 252 0
 161 004a 3B68     		ldr	r3, [r7]
 162 004c DA68     		ldr	r2, [r3, #12]
 163 004e 3B68     		ldr	r3, [r7]
 164 0050 9B68     		ldr	r3, [r3, #8]
 165 0052 1A43     		orrs	r2, r2, r3
 253:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****             ((uint32_t)ADC_InitStruct->ADC_ContinuousConvMode << 1));
 166              		.loc 1 253 0
 167 0054 3B68     		ldr	r3, [r7]
 168 0056 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 169 0058 5B00     		lsls	r3, r3, #1
 252:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****             ((uint32_t)ADC_InitStruct->ADC_ContinuousConvMode << 1));
 170              		.loc 1 252 0
 171 005a 1343     		orrs	r3, r3, r2
 172 005c FA68     		ldr	r2, [r7, #12]
 173 005e 1343     		orrs	r3, r3, r2
 174 0060 FB60     		str	r3, [r7, #12]
 254:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Write to ADCx CR2 */
 255:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   ADCx->CR2 = tmpreg1;
 175              		.loc 1 255 0
 176 0062 7B68     		ldr	r3, [r7, #4]
 177 0064 FA68     		ldr	r2, [r7, #12]
 178 0066 9A60     		str	r2, [r3, #8]
 256:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 257:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /*---------------------------- ADCx SQR1 Configuration -----------------*/
 258:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Get the ADCx SQR1 value */
 259:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->SQR1;
 179              		.loc 1 259 0
 180 0068 7B68     		ldr	r3, [r7, #4]
 181 006a DB6A     		ldr	r3, [r3, #44]
 182 006c FB60     		str	r3, [r7, #12]
 260:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Clear L bits */
 261:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   tmpreg1 &= SQR1_CLEAR_Mask;
 183              		.loc 1 261 0
 184 006e FB68     		ldr	r3, [r7, #12]
 185 0070 23F47003 		bic	r3, r3, #15728640
 186 0074 FB60     		str	r3, [r7, #12]
 262:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Configure ADCx: regular channel sequence length */
 263:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Set L bits according to ADC_NbrOfChannel value */
 264:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   tmpreg2 |= (uint8_t) (ADC_InitStruct->ADC_NbrOfChannel - (uint8_t)1);
 187              		.loc 1 264 0
 188 0076 3B68     		ldr	r3, [r7]
 189 0078 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 190 007a 013B     		subs	r3, r3, #1
 191 007c DAB2     		uxtb	r2, r3
 192 007e FB7A     		ldrb	r3, [r7, #11]
 193 0080 1343     		orrs	r3, r3, r2
 194 0082 FB72     		strb	r3, [r7, #11]
 265:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   tmpreg1 |= (uint32_t)tmpreg2 << 20;
 195              		.loc 1 265 0
 196 0084 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 197 0086 1B05     		lsls	r3, r3, #20
 198 0088 FA68     		ldr	r2, [r7, #12]
 199 008a 1343     		orrs	r3, r3, r2
 200 008c FB60     		str	r3, [r7, #12]
 266:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Write to ADCx SQR1 */
 267:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   ADCx->SQR1 = tmpreg1;
 201              		.loc 1 267 0
 202 008e 7B68     		ldr	r3, [r7, #4]
 203 0090 FA68     		ldr	r2, [r7, #12]
 204 0092 DA62     		str	r2, [r3, #44]
 268:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** }
 205              		.loc 1 268 0
 206 0094 1437     		adds	r7, r7, #20
 207              		.cfi_def_cfa_offset 4
 208 0096 BD46     		mov	sp, r7
 209              		.cfi_def_cfa_register 13
 210              		@ sp needed
 211 0098 5DF8047B 		ldr	r7, [sp], #4
 212              		.cfi_restore 7
 213              		.cfi_def_cfa_offset 0
 214 009c 7047     		bx	lr
 215              	.L9:
 216 009e 00BF     		.align	2
 217              	.L8:
 218 00a0 FDF7F1FF 		.word	-919555
 219              		.cfi_endproc
 220              	.LFE30:
 222              		.section	.text.ADC_StructInit,"ax",%progbits
 223              		.align	2
 224              		.global	ADC_StructInit
 225              		.thumb
 226              		.thumb_func
 228              	ADC_StructInit:
 229              	.LFB31:
 269:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 270:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
 271:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @brief  Fills each ADC_InitStruct member with its default value.
 272:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADC_InitStruct : pointer to an ADC_InitTypeDef structure which will be initialized.
 273:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @retval None
 274:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
 275:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** void ADC_StructInit(ADC_InitTypeDef* ADC_InitStruct)
 276:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** {
 230              		.loc 1 276 0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 8
 233              		@ frame_needed = 1, uses_anonymous_args = 0
 234              		@ link register save eliminated.
 235 0000 80B4     		push	{r7}
 236              		.cfi_def_cfa_offset 4
 237              		.cfi_offset 7, -4
 238 0002 83B0     		sub	sp, sp, #12
 239              		.cfi_def_cfa_offset 16
 240 0004 00AF     		add	r7, sp, #0
 241              		.cfi_def_cfa_register 7
 242 0006 7860     		str	r0, [r7, #4]
 277:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Reset ADC init structure parameters values */
 278:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Initialize the ADC_Mode member */
 279:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_Mode = ADC_Mode_Independent;
 243              		.loc 1 279 0
 244 0008 7B68     		ldr	r3, [r7, #4]
 245 000a 0022     		movs	r2, #0
 246 000c 1A60     		str	r2, [r3]
 280:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* initialize the ADC_ScanConvMode member */
 281:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_ScanConvMode = DISABLE;
 247              		.loc 1 281 0
 248 000e 7B68     		ldr	r3, [r7, #4]
 249 0010 0022     		movs	r2, #0
 250 0012 1A71     		strb	r2, [r3, #4]
 282:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Initialize the ADC_ContinuousConvMode member */
 283:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_ContinuousConvMode = DISABLE;
 251              		.loc 1 283 0
 252 0014 7B68     		ldr	r3, [r7, #4]
 253 0016 0022     		movs	r2, #0
 254 0018 5A71     		strb	r2, [r3, #5]
 284:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Initialize the ADC_ExternalTrigConv member */
 285:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_ExternalTrigConv = ADC_ExternalTrigConv_T1_CC1;
 255              		.loc 1 285 0
 256 001a 7B68     		ldr	r3, [r7, #4]
 257 001c 0022     		movs	r2, #0
 258 001e 9A60     		str	r2, [r3, #8]
 286:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Initialize the ADC_DataAlign member */
 287:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_DataAlign = ADC_DataAlign_Right;
 259              		.loc 1 287 0
 260 0020 7B68     		ldr	r3, [r7, #4]
 261 0022 0022     		movs	r2, #0
 262 0024 DA60     		str	r2, [r3, #12]
 288:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Initialize the ADC_NbrOfChannel member */
 289:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_NbrOfChannel = 1;
 263              		.loc 1 289 0
 264 0026 7B68     		ldr	r3, [r7, #4]
 265 0028 0122     		movs	r2, #1
 266 002a 1A74     		strb	r2, [r3, #16]
 290:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** }
 267              		.loc 1 290 0
 268 002c 0C37     		adds	r7, r7, #12
 269              		.cfi_def_cfa_offset 4
 270 002e BD46     		mov	sp, r7
 271              		.cfi_def_cfa_register 13
 272              		@ sp needed
 273 0030 5DF8047B 		ldr	r7, [sp], #4
 274              		.cfi_restore 7
 275              		.cfi_def_cfa_offset 0
 276 0034 7047     		bx	lr
 277              		.cfi_endproc
 278              	.LFE31:
 280 0036 00BF     		.section	.text.ADC_Cmd,"ax",%progbits
 281              		.align	2
 282              		.global	ADC_Cmd
 283              		.thumb
 284              		.thumb_func
 286              	ADC_Cmd:
 287              	.LFB32:
 291:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 292:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
 293:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @brief  Enables or disables the specified ADC peripheral.
 294:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 295:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  NewState: new state of the ADCx peripheral.
 296:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 297:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @retval None
 298:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
 299:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** void ADC_Cmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 300:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** {
 288              		.loc 1 300 0
 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 8
 291              		@ frame_needed = 1, uses_anonymous_args = 0
 292              		@ link register save eliminated.
 293 0000 80B4     		push	{r7}
 294              		.cfi_def_cfa_offset 4
 295              		.cfi_offset 7, -4
 296 0002 83B0     		sub	sp, sp, #12
 297              		.cfi_def_cfa_offset 16
 298 0004 00AF     		add	r7, sp, #0
 299              		.cfi_def_cfa_register 7
 300 0006 7860     		str	r0, [r7, #4]
 301 0008 0B46     		mov	r3, r1
 302 000a FB70     		strb	r3, [r7, #3]
 301:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the parameters */
 302:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 303:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 304:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 303              		.loc 1 304 0
 304 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 305 000e 002B     		cmp	r3, #0
 306 0010 06D0     		beq	.L12
 305:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
 306:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Set the ADON bit to wake up the ADC from power down mode */
 307:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_ADON_Set;
 307              		.loc 1 307 0
 308 0012 7B68     		ldr	r3, [r7, #4]
 309 0014 9B68     		ldr	r3, [r3, #8]
 310 0016 43F00102 		orr	r2, r3, #1
 311 001a 7B68     		ldr	r3, [r7, #4]
 312 001c 9A60     		str	r2, [r3, #8]
 313 001e 05E0     		b	.L11
 314              	.L12:
 308:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
 309:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   else
 310:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
 311:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Disable the selected ADC peripheral */
 312:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_ADON_Reset;
 315              		.loc 1 312 0
 316 0020 7B68     		ldr	r3, [r7, #4]
 317 0022 9B68     		ldr	r3, [r3, #8]
 318 0024 23F00102 		bic	r2, r3, #1
 319 0028 7B68     		ldr	r3, [r7, #4]
 320 002a 9A60     		str	r2, [r3, #8]
 321              	.L11:
 313:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
 314:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** }
 322              		.loc 1 314 0
 323 002c 0C37     		adds	r7, r7, #12
 324              		.cfi_def_cfa_offset 4
 325 002e BD46     		mov	sp, r7
 326              		.cfi_def_cfa_register 13
 327              		@ sp needed
 328 0030 5DF8047B 		ldr	r7, [sp], #4
 329              		.cfi_restore 7
 330              		.cfi_def_cfa_offset 0
 331 0034 7047     		bx	lr
 332              		.cfi_endproc
 333              	.LFE32:
 335 0036 00BF     		.section	.text.ADC_DMACmd,"ax",%progbits
 336              		.align	2
 337              		.global	ADC_DMACmd
 338              		.thumb
 339              		.thumb_func
 341              	ADC_DMACmd:
 342              	.LFB33:
 315:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 316:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
 317:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @brief  Enables or disables the specified ADC DMA request.
 318:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1 or 3 to select the ADC peripheral.
 319:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *   Note: ADC2 hasn't a DMA capability.
 320:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC DMA transfer.
 321:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 322:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @retval None
 323:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
 324:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** void ADC_DMACmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 325:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** {
 343              		.loc 1 325 0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 8
 346              		@ frame_needed = 1, uses_anonymous_args = 0
 347              		@ link register save eliminated.
 348 0000 80B4     		push	{r7}
 349              		.cfi_def_cfa_offset 4
 350              		.cfi_offset 7, -4
 351 0002 83B0     		sub	sp, sp, #12
 352              		.cfi_def_cfa_offset 16
 353 0004 00AF     		add	r7, sp, #0
 354              		.cfi_def_cfa_register 7
 355 0006 7860     		str	r0, [r7, #4]
 356 0008 0B46     		mov	r3, r1
 357 000a FB70     		strb	r3, [r7, #3]
 326:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the parameters */
 327:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_DMA_PERIPH(ADCx));
 328:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 329:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 358              		.loc 1 329 0
 359 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 360 000e 002B     		cmp	r3, #0
 361 0010 06D0     		beq	.L15
 330:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
 331:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Enable the selected ADC DMA request */
 332:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_DMA_Set;
 362              		.loc 1 332 0
 363 0012 7B68     		ldr	r3, [r7, #4]
 364 0014 9B68     		ldr	r3, [r3, #8]
 365 0016 43F48072 		orr	r2, r3, #256
 366 001a 7B68     		ldr	r3, [r7, #4]
 367 001c 9A60     		str	r2, [r3, #8]
 368 001e 05E0     		b	.L14
 369              	.L15:
 333:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
 334:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   else
 335:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
 336:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Disable the selected ADC DMA request */
 337:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_DMA_Reset;
 370              		.loc 1 337 0
 371 0020 7B68     		ldr	r3, [r7, #4]
 372 0022 9B68     		ldr	r3, [r3, #8]
 373 0024 23F48072 		bic	r2, r3, #256
 374 0028 7B68     		ldr	r3, [r7, #4]
 375 002a 9A60     		str	r2, [r3, #8]
 376              	.L14:
 338:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
 339:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** }
 377              		.loc 1 339 0
 378 002c 0C37     		adds	r7, r7, #12
 379              		.cfi_def_cfa_offset 4
 380 002e BD46     		mov	sp, r7
 381              		.cfi_def_cfa_register 13
 382              		@ sp needed
 383 0030 5DF8047B 		ldr	r7, [sp], #4
 384              		.cfi_restore 7
 385              		.cfi_def_cfa_offset 0
 386 0034 7047     		bx	lr
 387              		.cfi_endproc
 388              	.LFE33:
 390 0036 00BF     		.section	.text.ADC_ITConfig,"ax",%progbits
 391              		.align	2
 392              		.global	ADC_ITConfig
 393              		.thumb
 394              		.thumb_func
 396              	ADC_ITConfig:
 397              	.LFB34:
 340:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 341:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
 342:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @brief  Enables or disables the specified ADC interrupts.
 343:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 344:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt sources to be enabled or disabled. 
 345:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *   This parameter can be any combination of the following values:
 346:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_IT_EOC: End of conversion interrupt mask
 347:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_IT_AWD: Analog watchdog interrupt mask
 348:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_IT_JEOC: End of injected conversion interrupt mask
 349:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  NewState: new state of the specified ADC interrupts.
 350:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 351:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @retval None
 352:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
 353:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** void ADC_ITConfig(ADC_TypeDef* ADCx, uint16_t ADC_IT, FunctionalState NewState)
 354:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** {
 398              		.loc 1 354 0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 16
 401              		@ frame_needed = 1, uses_anonymous_args = 0
 402              		@ link register save eliminated.
 403 0000 80B4     		push	{r7}
 404              		.cfi_def_cfa_offset 4
 405              		.cfi_offset 7, -4
 406 0002 85B0     		sub	sp, sp, #20
 407              		.cfi_def_cfa_offset 24
 408 0004 00AF     		add	r7, sp, #0
 409              		.cfi_def_cfa_register 7
 410 0006 7860     		str	r0, [r7, #4]
 411 0008 0B46     		mov	r3, r1
 412 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 413 000c 1346     		mov	r3, r2
 414 000e 7B70     		strb	r3, [r7, #1]
 355:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   uint8_t itmask = 0;
 415              		.loc 1 355 0
 416 0010 0023     		movs	r3, #0
 417 0012 FB73     		strb	r3, [r7, #15]
 356:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the parameters */
 357:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 358:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 359:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_IT(ADC_IT));
 360:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Get the ADC IT index */
 361:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   itmask = (uint8_t)ADC_IT;
 418              		.loc 1 361 0
 419 0014 7B88     		ldrh	r3, [r7, #2]	@ movhi
 420 0016 FB73     		strb	r3, [r7, #15]
 362:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 421              		.loc 1 362 0
 422 0018 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 423 001a 002B     		cmp	r3, #0
 424 001c 06D0     		beq	.L18
 363:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
 364:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Enable the selected ADC interrupts */
 365:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     ADCx->CR1 |= itmask;
 425              		.loc 1 365 0
 426 001e 7B68     		ldr	r3, [r7, #4]
 427 0020 5A68     		ldr	r2, [r3, #4]
 428 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 429 0024 1A43     		orrs	r2, r2, r3
 430 0026 7B68     		ldr	r3, [r7, #4]
 431 0028 5A60     		str	r2, [r3, #4]
 432 002a 06E0     		b	.L17
 433              	.L18:
 366:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
 367:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   else
 368:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
 369:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Disable the selected ADC interrupts */
 370:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     ADCx->CR1 &= (~(uint32_t)itmask);
 434              		.loc 1 370 0
 435 002c 7B68     		ldr	r3, [r7, #4]
 436 002e 5A68     		ldr	r2, [r3, #4]
 437 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 438 0032 DB43     		mvns	r3, r3
 439 0034 1A40     		ands	r2, r2, r3
 440 0036 7B68     		ldr	r3, [r7, #4]
 441 0038 5A60     		str	r2, [r3, #4]
 442              	.L17:
 371:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
 372:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** }
 443              		.loc 1 372 0
 444 003a 1437     		adds	r7, r7, #20
 445              		.cfi_def_cfa_offset 4
 446 003c BD46     		mov	sp, r7
 447              		.cfi_def_cfa_register 13
 448              		@ sp needed
 449 003e 5DF8047B 		ldr	r7, [sp], #4
 450              		.cfi_restore 7
 451              		.cfi_def_cfa_offset 0
 452 0042 7047     		bx	lr
 453              		.cfi_endproc
 454              	.LFE34:
 456              		.section	.text.ADC_ResetCalibration,"ax",%progbits
 457              		.align	2
 458              		.global	ADC_ResetCalibration
 459              		.thumb
 460              		.thumb_func
 462              	ADC_ResetCalibration:
 463              	.LFB35:
 373:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 374:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
 375:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @brief  Resets the selected ADC calibration registers.
 376:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 377:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @retval None
 378:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
 379:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** void ADC_ResetCalibration(ADC_TypeDef* ADCx)
 380:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** {
 464              		.loc 1 380 0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 8
 467              		@ frame_needed = 1, uses_anonymous_args = 0
 468              		@ link register save eliminated.
 469 0000 80B4     		push	{r7}
 470              		.cfi_def_cfa_offset 4
 471              		.cfi_offset 7, -4
 472 0002 83B0     		sub	sp, sp, #12
 473              		.cfi_def_cfa_offset 16
 474 0004 00AF     		add	r7, sp, #0
 475              		.cfi_def_cfa_register 7
 476 0006 7860     		str	r0, [r7, #4]
 381:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the parameters */
 382:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 383:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Resets the selected ADC calibration registers */  
 384:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   ADCx->CR2 |= CR2_RSTCAL_Set;
 477              		.loc 1 384 0
 478 0008 7B68     		ldr	r3, [r7, #4]
 479 000a 9B68     		ldr	r3, [r3, #8]
 480 000c 43F00802 		orr	r2, r3, #8
 481 0010 7B68     		ldr	r3, [r7, #4]
 482 0012 9A60     		str	r2, [r3, #8]
 385:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** }
 483              		.loc 1 385 0
 484 0014 0C37     		adds	r7, r7, #12
 485              		.cfi_def_cfa_offset 4
 486 0016 BD46     		mov	sp, r7
 487              		.cfi_def_cfa_register 13
 488              		@ sp needed
 489 0018 5DF8047B 		ldr	r7, [sp], #4
 490              		.cfi_restore 7
 491              		.cfi_def_cfa_offset 0
 492 001c 7047     		bx	lr
 493              		.cfi_endproc
 494              	.LFE35:
 496 001e 00BF     		.section	.text.ADC_GetResetCalibrationStatus,"ax",%progbits
 497              		.align	2
 498              		.global	ADC_GetResetCalibrationStatus
 499              		.thumb
 500              		.thumb_func
 502              	ADC_GetResetCalibrationStatus:
 503              	.LFB36:
 386:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 387:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
 388:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @brief  Gets the selected ADC reset calibration registers status.
 389:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 390:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @retval The new state of ADC reset calibration registers (SET or RESET).
 391:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
 392:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** FlagStatus ADC_GetResetCalibrationStatus(ADC_TypeDef* ADCx)
 393:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** {
 504              		.loc 1 393 0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 16
 507              		@ frame_needed = 1, uses_anonymous_args = 0
 508              		@ link register save eliminated.
 509 0000 80B4     		push	{r7}
 510              		.cfi_def_cfa_offset 4
 511              		.cfi_offset 7, -4
 512 0002 85B0     		sub	sp, sp, #20
 513              		.cfi_def_cfa_offset 24
 514 0004 00AF     		add	r7, sp, #0
 515              		.cfi_def_cfa_register 7
 516 0006 7860     		str	r0, [r7, #4]
 394:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 517              		.loc 1 394 0
 518 0008 0023     		movs	r3, #0
 519 000a FB73     		strb	r3, [r7, #15]
 395:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the parameters */
 396:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 397:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the status of RSTCAL bit */
 398:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   if ((ADCx->CR2 & CR2_RSTCAL_Set) != (uint32_t)RESET)
 520              		.loc 1 398 0
 521 000c 7B68     		ldr	r3, [r7, #4]
 522 000e 9B68     		ldr	r3, [r3, #8]
 523 0010 03F00803 		and	r3, r3, #8
 524 0014 002B     		cmp	r3, #0
 525 0016 02D0     		beq	.L22
 399:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
 400:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* RSTCAL bit is set */
 401:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     bitstatus = SET;
 526              		.loc 1 401 0
 527 0018 0123     		movs	r3, #1
 528 001a FB73     		strb	r3, [r7, #15]
 529 001c 01E0     		b	.L23
 530              	.L22:
 402:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
 403:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   else
 404:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
 405:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* RSTCAL bit is reset */
 406:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     bitstatus = RESET;
 531              		.loc 1 406 0
 532 001e 0023     		movs	r3, #0
 533 0020 FB73     		strb	r3, [r7, #15]
 534              	.L23:
 407:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
 408:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Return the RSTCAL bit status */
 409:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   return  bitstatus;
 535              		.loc 1 409 0
 536 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 410:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** }
 537              		.loc 1 410 0
 538 0024 1846     		mov	r0, r3
 539 0026 1437     		adds	r7, r7, #20
 540              		.cfi_def_cfa_offset 4
 541 0028 BD46     		mov	sp, r7
 542              		.cfi_def_cfa_register 13
 543              		@ sp needed
 544 002a 5DF8047B 		ldr	r7, [sp], #4
 545              		.cfi_restore 7
 546              		.cfi_def_cfa_offset 0
 547 002e 7047     		bx	lr
 548              		.cfi_endproc
 549              	.LFE36:
 551              		.section	.text.ADC_StartCalibration,"ax",%progbits
 552              		.align	2
 553              		.global	ADC_StartCalibration
 554              		.thumb
 555              		.thumb_func
 557              	ADC_StartCalibration:
 558              	.LFB37:
 411:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 412:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
 413:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @brief  Starts the selected ADC calibration process.
 414:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 415:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @retval None
 416:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
 417:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** void ADC_StartCalibration(ADC_TypeDef* ADCx)
 418:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** {
 559              		.loc 1 418 0
 560              		.cfi_startproc
 561              		@ args = 0, pretend = 0, frame = 8
 562              		@ frame_needed = 1, uses_anonymous_args = 0
 563              		@ link register save eliminated.
 564 0000 80B4     		push	{r7}
 565              		.cfi_def_cfa_offset 4
 566              		.cfi_offset 7, -4
 567 0002 83B0     		sub	sp, sp, #12
 568              		.cfi_def_cfa_offset 16
 569 0004 00AF     		add	r7, sp, #0
 570              		.cfi_def_cfa_register 7
 571 0006 7860     		str	r0, [r7, #4]
 419:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the parameters */
 420:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 421:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Enable the selected ADC calibration process */  
 422:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   ADCx->CR2 |= CR2_CAL_Set;
 572              		.loc 1 422 0
 573 0008 7B68     		ldr	r3, [r7, #4]
 574 000a 9B68     		ldr	r3, [r3, #8]
 575 000c 43F00402 		orr	r2, r3, #4
 576 0010 7B68     		ldr	r3, [r7, #4]
 577 0012 9A60     		str	r2, [r3, #8]
 423:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** }
 578              		.loc 1 423 0
 579 0014 0C37     		adds	r7, r7, #12
 580              		.cfi_def_cfa_offset 4
 581 0016 BD46     		mov	sp, r7
 582              		.cfi_def_cfa_register 13
 583              		@ sp needed
 584 0018 5DF8047B 		ldr	r7, [sp], #4
 585              		.cfi_restore 7
 586              		.cfi_def_cfa_offset 0
 587 001c 7047     		bx	lr
 588              		.cfi_endproc
 589              	.LFE37:
 591 001e 00BF     		.section	.text.ADC_GetCalibrationStatus,"ax",%progbits
 592              		.align	2
 593              		.global	ADC_GetCalibrationStatus
 594              		.thumb
 595              		.thumb_func
 597              	ADC_GetCalibrationStatus:
 598              	.LFB38:
 424:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 425:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
 426:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @brief  Gets the selected ADC calibration status.
 427:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 428:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @retval The new state of ADC calibration (SET or RESET).
 429:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
 430:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** FlagStatus ADC_GetCalibrationStatus(ADC_TypeDef* ADCx)
 431:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** {
 599              		.loc 1 431 0
 600              		.cfi_startproc
 601              		@ args = 0, pretend = 0, frame = 16
 602              		@ frame_needed = 1, uses_anonymous_args = 0
 603              		@ link register save eliminated.
 604 0000 80B4     		push	{r7}
 605              		.cfi_def_cfa_offset 4
 606              		.cfi_offset 7, -4
 607 0002 85B0     		sub	sp, sp, #20
 608              		.cfi_def_cfa_offset 24
 609 0004 00AF     		add	r7, sp, #0
 610              		.cfi_def_cfa_register 7
 611 0006 7860     		str	r0, [r7, #4]
 432:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 612              		.loc 1 432 0
 613 0008 0023     		movs	r3, #0
 614 000a FB73     		strb	r3, [r7, #15]
 433:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the parameters */
 434:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 435:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the status of CAL bit */
 436:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   if ((ADCx->CR2 & CR2_CAL_Set) != (uint32_t)RESET)
 615              		.loc 1 436 0
 616 000c 7B68     		ldr	r3, [r7, #4]
 617 000e 9B68     		ldr	r3, [r3, #8]
 618 0010 03F00403 		and	r3, r3, #4
 619 0014 002B     		cmp	r3, #0
 620 0016 02D0     		beq	.L27
 437:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
 438:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* CAL bit is set: calibration on going */
 439:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     bitstatus = SET;
 621              		.loc 1 439 0
 622 0018 0123     		movs	r3, #1
 623 001a FB73     		strb	r3, [r7, #15]
 624 001c 01E0     		b	.L28
 625              	.L27:
 440:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
 441:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   else
 442:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
 443:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* CAL bit is reset: end of calibration */
 444:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     bitstatus = RESET;
 626              		.loc 1 444 0
 627 001e 0023     		movs	r3, #0
 628 0020 FB73     		strb	r3, [r7, #15]
 629              	.L28:
 445:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
 446:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Return the CAL bit status */
 447:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   return  bitstatus;
 630              		.loc 1 447 0
 631 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 448:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** }
 632              		.loc 1 448 0
 633 0024 1846     		mov	r0, r3
 634 0026 1437     		adds	r7, r7, #20
 635              		.cfi_def_cfa_offset 4
 636 0028 BD46     		mov	sp, r7
 637              		.cfi_def_cfa_register 13
 638              		@ sp needed
 639 002a 5DF8047B 		ldr	r7, [sp], #4
 640              		.cfi_restore 7
 641              		.cfi_def_cfa_offset 0
 642 002e 7047     		bx	lr
 643              		.cfi_endproc
 644              	.LFE38:
 646              		.section	.text.ADC_SoftwareStartConvCmd,"ax",%progbits
 647              		.align	2
 648              		.global	ADC_SoftwareStartConvCmd
 649              		.thumb
 650              		.thumb_func
 652              	ADC_SoftwareStartConvCmd:
 653              	.LFB39:
 449:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 450:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
 451:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @brief  Enables or disables the selected ADC software start conversion .
 452:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 453:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC software start conversion.
 454:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 455:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @retval None
 456:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
 457:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** void ADC_SoftwareStartConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 458:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** {
 654              		.loc 1 458 0
 655              		.cfi_startproc
 656              		@ args = 0, pretend = 0, frame = 8
 657              		@ frame_needed = 1, uses_anonymous_args = 0
 658              		@ link register save eliminated.
 659 0000 80B4     		push	{r7}
 660              		.cfi_def_cfa_offset 4
 661              		.cfi_offset 7, -4
 662 0002 83B0     		sub	sp, sp, #12
 663              		.cfi_def_cfa_offset 16
 664 0004 00AF     		add	r7, sp, #0
 665              		.cfi_def_cfa_register 7
 666 0006 7860     		str	r0, [r7, #4]
 667 0008 0B46     		mov	r3, r1
 668 000a FB70     		strb	r3, [r7, #3]
 459:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the parameters */
 460:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 461:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 462:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 669              		.loc 1 462 0
 670 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 671 000e 002B     		cmp	r3, #0
 672 0010 06D0     		beq	.L31
 463:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
 464:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Enable the selected ADC conversion on external event and start the selected
 465:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****        ADC conversion */
 466:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_EXTTRIG_SWSTART_Set;
 673              		.loc 1 466 0
 674 0012 7B68     		ldr	r3, [r7, #4]
 675 0014 9B68     		ldr	r3, [r3, #8]
 676 0016 43F4A002 		orr	r2, r3, #5242880
 677 001a 7B68     		ldr	r3, [r7, #4]
 678 001c 9A60     		str	r2, [r3, #8]
 679 001e 05E0     		b	.L30
 680              	.L31:
 467:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
 468:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   else
 469:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
 470:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Disable the selected ADC conversion on external event and stop the selected
 471:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****        ADC conversion */
 472:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_EXTTRIG_SWSTART_Reset;
 681              		.loc 1 472 0
 682 0020 7B68     		ldr	r3, [r7, #4]
 683 0022 9B68     		ldr	r3, [r3, #8]
 684 0024 23F4A002 		bic	r2, r3, #5242880
 685 0028 7B68     		ldr	r3, [r7, #4]
 686 002a 9A60     		str	r2, [r3, #8]
 687              	.L30:
 473:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
 474:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** }
 688              		.loc 1 474 0
 689 002c 0C37     		adds	r7, r7, #12
 690              		.cfi_def_cfa_offset 4
 691 002e BD46     		mov	sp, r7
 692              		.cfi_def_cfa_register 13
 693              		@ sp needed
 694 0030 5DF8047B 		ldr	r7, [sp], #4
 695              		.cfi_restore 7
 696              		.cfi_def_cfa_offset 0
 697 0034 7047     		bx	lr
 698              		.cfi_endproc
 699              	.LFE39:
 701 0036 00BF     		.section	.text.ADC_GetSoftwareStartConvStatus,"ax",%progbits
 702              		.align	2
 703              		.global	ADC_GetSoftwareStartConvStatus
 704              		.thumb
 705              		.thumb_func
 707              	ADC_GetSoftwareStartConvStatus:
 708              	.LFB40:
 475:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 476:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
 477:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @brief  Gets the selected ADC Software start conversion Status.
 478:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 479:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @retval The new state of ADC software start conversion (SET or RESET).
 480:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
 481:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** FlagStatus ADC_GetSoftwareStartConvStatus(ADC_TypeDef* ADCx)
 482:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** {
 709              		.loc 1 482 0
 710              		.cfi_startproc
 711              		@ args = 0, pretend = 0, frame = 16
 712              		@ frame_needed = 1, uses_anonymous_args = 0
 713              		@ link register save eliminated.
 714 0000 80B4     		push	{r7}
 715              		.cfi_def_cfa_offset 4
 716              		.cfi_offset 7, -4
 717 0002 85B0     		sub	sp, sp, #20
 718              		.cfi_def_cfa_offset 24
 719 0004 00AF     		add	r7, sp, #0
 720              		.cfi_def_cfa_register 7
 721 0006 7860     		str	r0, [r7, #4]
 483:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 722              		.loc 1 483 0
 723 0008 0023     		movs	r3, #0
 724 000a FB73     		strb	r3, [r7, #15]
 484:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the parameters */
 485:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 486:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the status of SWSTART bit */
 487:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   if ((ADCx->CR2 & CR2_SWSTART_Set) != (uint32_t)RESET)
 725              		.loc 1 487 0
 726 000c 7B68     		ldr	r3, [r7, #4]
 727 000e 9B68     		ldr	r3, [r3, #8]
 728 0010 03F48003 		and	r3, r3, #4194304
 729 0014 002B     		cmp	r3, #0
 730 0016 02D0     		beq	.L34
 488:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
 489:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* SWSTART bit is set */
 490:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     bitstatus = SET;
 731              		.loc 1 490 0
 732 0018 0123     		movs	r3, #1
 733 001a FB73     		strb	r3, [r7, #15]
 734 001c 01E0     		b	.L35
 735              	.L34:
 491:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
 492:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   else
 493:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
 494:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* SWSTART bit is reset */
 495:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     bitstatus = RESET;
 736              		.loc 1 495 0
 737 001e 0023     		movs	r3, #0
 738 0020 FB73     		strb	r3, [r7, #15]
 739              	.L35:
 496:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
 497:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Return the SWSTART bit status */
 498:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   return  bitstatus;
 740              		.loc 1 498 0
 741 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 499:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** }
 742              		.loc 1 499 0
 743 0024 1846     		mov	r0, r3
 744 0026 1437     		adds	r7, r7, #20
 745              		.cfi_def_cfa_offset 4
 746 0028 BD46     		mov	sp, r7
 747              		.cfi_def_cfa_register 13
 748              		@ sp needed
 749 002a 5DF8047B 		ldr	r7, [sp], #4
 750              		.cfi_restore 7
 751              		.cfi_def_cfa_offset 0
 752 002e 7047     		bx	lr
 753              		.cfi_endproc
 754              	.LFE40:
 756              		.section	.text.ADC_DiscModeChannelCountConfig,"ax",%progbits
 757              		.align	2
 758              		.global	ADC_DiscModeChannelCountConfig
 759              		.thumb
 760              		.thumb_func
 762              	ADC_DiscModeChannelCountConfig:
 763              	.LFB41:
 500:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 501:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
 502:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @brief  Configures the discontinuous mode for the selected ADC regular
 503:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *         group channel.
 504:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 505:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  Number: specifies the discontinuous mode regular channel
 506:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *         count value. This number must be between 1 and 8.
 507:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @retval None
 508:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
 509:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** void ADC_DiscModeChannelCountConfig(ADC_TypeDef* ADCx, uint8_t Number)
 510:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** {
 764              		.loc 1 510 0
 765              		.cfi_startproc
 766              		@ args = 0, pretend = 0, frame = 16
 767              		@ frame_needed = 1, uses_anonymous_args = 0
 768              		@ link register save eliminated.
 769 0000 80B4     		push	{r7}
 770              		.cfi_def_cfa_offset 4
 771              		.cfi_offset 7, -4
 772 0002 85B0     		sub	sp, sp, #20
 773              		.cfi_def_cfa_offset 24
 774 0004 00AF     		add	r7, sp, #0
 775              		.cfi_def_cfa_register 7
 776 0006 7860     		str	r0, [r7, #4]
 777 0008 0B46     		mov	r3, r1
 778 000a FB70     		strb	r3, [r7, #3]
 511:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0;
 779              		.loc 1 511 0
 780 000c 0023     		movs	r3, #0
 781 000e FB60     		str	r3, [r7, #12]
 512:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   uint32_t tmpreg2 = 0;
 782              		.loc 1 512 0
 783 0010 0023     		movs	r3, #0
 784 0012 BB60     		str	r3, [r7, #8]
 513:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the parameters */
 514:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 515:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_REGULAR_DISC_NUMBER(Number));
 516:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Get the old register value */
 517:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->CR1;
 785              		.loc 1 517 0
 786 0014 7B68     		ldr	r3, [r7, #4]
 787 0016 5B68     		ldr	r3, [r3, #4]
 788 0018 FB60     		str	r3, [r7, #12]
 518:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Clear the old discontinuous mode channel count */
 519:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   tmpreg1 &= CR1_DISCNUM_Reset;
 789              		.loc 1 519 0
 790 001a FB68     		ldr	r3, [r7, #12]
 791 001c 23F46043 		bic	r3, r3, #57344
 792 0020 FB60     		str	r3, [r7, #12]
 520:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Set the discontinuous mode channel count */
 521:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   tmpreg2 = Number - 1;
 793              		.loc 1 521 0
 794 0022 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 795 0024 013B     		subs	r3, r3, #1
 796 0026 BB60     		str	r3, [r7, #8]
 522:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   tmpreg1 |= tmpreg2 << 13;
 797              		.loc 1 522 0
 798 0028 BB68     		ldr	r3, [r7, #8]
 799 002a 5B03     		lsls	r3, r3, #13
 800 002c FA68     		ldr	r2, [r7, #12]
 801 002e 1343     		orrs	r3, r3, r2
 802 0030 FB60     		str	r3, [r7, #12]
 523:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Store the new register value */
 524:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   ADCx->CR1 = tmpreg1;
 803              		.loc 1 524 0
 804 0032 7B68     		ldr	r3, [r7, #4]
 805 0034 FA68     		ldr	r2, [r7, #12]
 806 0036 5A60     		str	r2, [r3, #4]
 525:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** }
 807              		.loc 1 525 0
 808 0038 1437     		adds	r7, r7, #20
 809              		.cfi_def_cfa_offset 4
 810 003a BD46     		mov	sp, r7
 811              		.cfi_def_cfa_register 13
 812              		@ sp needed
 813 003c 5DF8047B 		ldr	r7, [sp], #4
 814              		.cfi_restore 7
 815              		.cfi_def_cfa_offset 0
 816 0040 7047     		bx	lr
 817              		.cfi_endproc
 818              	.LFE41:
 820 0042 00BF     		.section	.text.ADC_DiscModeCmd,"ax",%progbits
 821              		.align	2
 822              		.global	ADC_DiscModeCmd
 823              		.thumb
 824              		.thumb_func
 826              	ADC_DiscModeCmd:
 827              	.LFB42:
 526:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 527:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
 528:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @brief  Enables or disables the discontinuous mode on regular group
 529:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *         channel for the specified ADC
 530:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 531:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC discontinuous mode
 532:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *         on regular group channel.
 533:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *         This parameter can be: ENABLE or DISABLE.
 534:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @retval None
 535:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
 536:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** void ADC_DiscModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 537:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** {
 828              		.loc 1 537 0
 829              		.cfi_startproc
 830              		@ args = 0, pretend = 0, frame = 8
 831              		@ frame_needed = 1, uses_anonymous_args = 0
 832              		@ link register save eliminated.
 833 0000 80B4     		push	{r7}
 834              		.cfi_def_cfa_offset 4
 835              		.cfi_offset 7, -4
 836 0002 83B0     		sub	sp, sp, #12
 837              		.cfi_def_cfa_offset 16
 838 0004 00AF     		add	r7, sp, #0
 839              		.cfi_def_cfa_register 7
 840 0006 7860     		str	r0, [r7, #4]
 841 0008 0B46     		mov	r3, r1
 842 000a FB70     		strb	r3, [r7, #3]
 538:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the parameters */
 539:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 540:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 541:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 843              		.loc 1 541 0
 844 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 845 000e 002B     		cmp	r3, #0
 846 0010 06D0     		beq	.L39
 542:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
 543:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Enable the selected ADC regular discontinuous mode */
 544:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     ADCx->CR1 |= CR1_DISCEN_Set;
 847              		.loc 1 544 0
 848 0012 7B68     		ldr	r3, [r7, #4]
 849 0014 5B68     		ldr	r3, [r3, #4]
 850 0016 43F40062 		orr	r2, r3, #2048
 851 001a 7B68     		ldr	r3, [r7, #4]
 852 001c 5A60     		str	r2, [r3, #4]
 853 001e 05E0     		b	.L38
 854              	.L39:
 545:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
 546:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   else
 547:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
 548:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Disable the selected ADC regular discontinuous mode */
 549:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     ADCx->CR1 &= CR1_DISCEN_Reset;
 855              		.loc 1 549 0
 856 0020 7B68     		ldr	r3, [r7, #4]
 857 0022 5B68     		ldr	r3, [r3, #4]
 858 0024 23F40062 		bic	r2, r3, #2048
 859 0028 7B68     		ldr	r3, [r7, #4]
 860 002a 5A60     		str	r2, [r3, #4]
 861              	.L38:
 550:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
 551:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** }
 862              		.loc 1 551 0
 863 002c 0C37     		adds	r7, r7, #12
 864              		.cfi_def_cfa_offset 4
 865 002e BD46     		mov	sp, r7
 866              		.cfi_def_cfa_register 13
 867              		@ sp needed
 868 0030 5DF8047B 		ldr	r7, [sp], #4
 869              		.cfi_restore 7
 870              		.cfi_def_cfa_offset 0
 871 0034 7047     		bx	lr
 872              		.cfi_endproc
 873              	.LFE42:
 875 0036 00BF     		.section	.text.ADC_RegularChannelConfig,"ax",%progbits
 876              		.align	2
 877              		.global	ADC_RegularChannelConfig
 878              		.thumb
 879              		.thumb_func
 881              	ADC_RegularChannelConfig:
 882              	.LFB43:
 552:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 553:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
 554:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @brief  Configures for the selected ADC regular channel its corresponding
 555:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *         rank in the sequencer and its sample time.
 556:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 557:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADC_Channel: the ADC channel to configure. 
 558:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 559:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_0: ADC Channel0 selected
 560:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_1: ADC Channel1 selected
 561:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_2: ADC Channel2 selected
 562:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_3: ADC Channel3 selected
 563:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_4: ADC Channel4 selected
 564:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_5: ADC Channel5 selected
 565:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_6: ADC Channel6 selected
 566:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_7: ADC Channel7 selected
 567:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_8: ADC Channel8 selected
 568:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_9: ADC Channel9 selected
 569:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_10: ADC Channel10 selected
 570:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_11: ADC Channel11 selected
 571:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_12: ADC Channel12 selected
 572:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_13: ADC Channel13 selected
 573:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_14: ADC Channel14 selected
 574:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_15: ADC Channel15 selected
 575:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_16: ADC Channel16 selected
 576:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_17: ADC Channel17 selected
 577:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  Rank: The rank in the regular group sequencer. This parameter must be between 1 to 16.
 578:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADC_SampleTime: The sample time value to be set for the selected channel. 
 579:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 580:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_1Cycles5: Sample time equal to 1.5 cycles
 581:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_7Cycles5: Sample time equal to 7.5 cycles
 582:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_13Cycles5: Sample time equal to 13.5 cycles
 583:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_28Cycles5: Sample time equal to 28.5 cycles	
 584:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_41Cycles5: Sample time equal to 41.5 cycles	
 585:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_55Cycles5: Sample time equal to 55.5 cycles	
 586:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_71Cycles5: Sample time equal to 71.5 cycles	
 587:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_239Cycles5: Sample time equal to 239.5 cycles	
 588:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @retval None
 589:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
 590:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** void ADC_RegularChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_Sam
 591:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** {
 883              		.loc 1 591 0
 884              		.cfi_startproc
 885              		@ args = 0, pretend = 0, frame = 16
 886              		@ frame_needed = 1, uses_anonymous_args = 0
 887              		@ link register save eliminated.
 888 0000 80B4     		push	{r7}
 889              		.cfi_def_cfa_offset 4
 890              		.cfi_offset 7, -4
 891 0002 85B0     		sub	sp, sp, #20
 892              		.cfi_def_cfa_offset 24
 893 0004 00AF     		add	r7, sp, #0
 894              		.cfi_def_cfa_register 7
 895 0006 7860     		str	r0, [r7, #4]
 896 0008 0846     		mov	r0, r1
 897 000a 1146     		mov	r1, r2
 898 000c 1A46     		mov	r2, r3
 899 000e 0346     		mov	r3, r0
 900 0010 FB70     		strb	r3, [r7, #3]
 901 0012 0B46     		mov	r3, r1
 902 0014 BB70     		strb	r3, [r7, #2]
 903 0016 1346     		mov	r3, r2
 904 0018 7B70     		strb	r3, [r7, #1]
 592:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0;
 905              		.loc 1 592 0
 906 001a 0023     		movs	r3, #0
 907 001c FB60     		str	r3, [r7, #12]
 908 001e 0023     		movs	r3, #0
 909 0020 BB60     		str	r3, [r7, #8]
 593:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the parameters */
 594:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 595:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
 596:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(Rank));
 597:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(ADC_SampleTime));
 598:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* if ADC_Channel_10 ... ADC_Channel_17 is selected */
 599:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   if (ADC_Channel > ADC_Channel_9)
 910              		.loc 1 599 0
 911 0022 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 912 0024 092B     		cmp	r3, #9
 913 0026 23D9     		bls	.L42
 600:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
 601:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Get the old register value */
 602:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR1;
 914              		.loc 1 602 0
 915 0028 7B68     		ldr	r3, [r7, #4]
 916 002a DB68     		ldr	r3, [r3, #12]
 917 002c FB60     		str	r3, [r7, #12]
 603:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 604:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     tmpreg2 = SMPR1_SMP_Set << (3 * (ADC_Channel - 10));
 918              		.loc 1 604 0
 919 002e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 920 0030 A3F10A02 		sub	r2, r3, #10
 921 0034 1346     		mov	r3, r2
 922 0036 5B00     		lsls	r3, r3, #1
 923 0038 1344     		add	r3, r3, r2
 924 003a 0722     		movs	r2, #7
 925 003c 02FA03F3 		lsl	r3, r2, r3
 926 0040 BB60     		str	r3, [r7, #8]
 605:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Clear the old channel sample time */
 606:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 927              		.loc 1 606 0
 928 0042 BB68     		ldr	r3, [r7, #8]
 929 0044 DB43     		mvns	r3, r3
 930 0046 FA68     		ldr	r2, [r7, #12]
 931 0048 1340     		ands	r3, r3, r2
 932 004a FB60     		str	r3, [r7, #12]
 607:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 608:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * (ADC_Channel - 10));
 933              		.loc 1 608 0
 934 004c 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 935 004e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 936 0050 A3F10A02 		sub	r2, r3, #10
 937 0054 1346     		mov	r3, r2
 938 0056 5B00     		lsls	r3, r3, #1
 939 0058 1344     		add	r3, r3, r2
 940 005a 01FA03F3 		lsl	r3, r1, r3
 941 005e BB60     		str	r3, [r7, #8]
 609:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Set the new channel sample time */
 610:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 942              		.loc 1 610 0
 943 0060 FA68     		ldr	r2, [r7, #12]
 944 0062 BB68     		ldr	r3, [r7, #8]
 945 0064 1343     		orrs	r3, r3, r2
 946 0066 FB60     		str	r3, [r7, #12]
 611:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Store the new register value */
 612:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     ADCx->SMPR1 = tmpreg1;
 947              		.loc 1 612 0
 948 0068 7B68     		ldr	r3, [r7, #4]
 949 006a FA68     		ldr	r2, [r7, #12]
 950 006c DA60     		str	r2, [r3, #12]
 951 006e 1EE0     		b	.L43
 952              	.L42:
 613:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
 614:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   else /* ADC_Channel include in ADC_Channel_[0..9] */
 615:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
 616:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Get the old register value */
 617:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR2;
 953              		.loc 1 617 0
 954 0070 7B68     		ldr	r3, [r7, #4]
 955 0072 1B69     		ldr	r3, [r3, #16]
 956 0074 FB60     		str	r3, [r7, #12]
 618:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 619:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     tmpreg2 = SMPR2_SMP_Set << (3 * ADC_Channel);
 957              		.loc 1 619 0
 958 0076 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 959 0078 1346     		mov	r3, r2
 960 007a 5B00     		lsls	r3, r3, #1
 961 007c 1344     		add	r3, r3, r2
 962 007e 0722     		movs	r2, #7
 963 0080 02FA03F3 		lsl	r3, r2, r3
 964 0084 BB60     		str	r3, [r7, #8]
 620:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Clear the old channel sample time */
 621:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 965              		.loc 1 621 0
 966 0086 BB68     		ldr	r3, [r7, #8]
 967 0088 DB43     		mvns	r3, r3
 968 008a FA68     		ldr	r2, [r7, #12]
 969 008c 1340     		ands	r3, r3, r2
 970 008e FB60     		str	r3, [r7, #12]
 622:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 623:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * ADC_Channel);
 971              		.loc 1 623 0
 972 0090 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 973 0092 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 974 0094 1346     		mov	r3, r2
 975 0096 5B00     		lsls	r3, r3, #1
 976 0098 1344     		add	r3, r3, r2
 977 009a 01FA03F3 		lsl	r3, r1, r3
 978 009e BB60     		str	r3, [r7, #8]
 624:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Set the new channel sample time */
 625:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 979              		.loc 1 625 0
 980 00a0 FA68     		ldr	r2, [r7, #12]
 981 00a2 BB68     		ldr	r3, [r7, #8]
 982 00a4 1343     		orrs	r3, r3, r2
 983 00a6 FB60     		str	r3, [r7, #12]
 626:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Store the new register value */
 627:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     ADCx->SMPR2 = tmpreg1;
 984              		.loc 1 627 0
 985 00a8 7B68     		ldr	r3, [r7, #4]
 986 00aa FA68     		ldr	r2, [r7, #12]
 987 00ac 1A61     		str	r2, [r3, #16]
 988              	.L43:
 628:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
 629:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* For Rank 1 to 6 */
 630:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   if (Rank < 7)
 989              		.loc 1 630 0
 990 00ae BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 991 00b0 062B     		cmp	r3, #6
 992 00b2 21D8     		bhi	.L44
 631:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
 632:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Get the old register value */
 633:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SQR3;
 993              		.loc 1 633 0
 994 00b4 7B68     		ldr	r3, [r7, #4]
 995 00b6 5B6B     		ldr	r3, [r3, #52]
 996 00b8 FB60     		str	r3, [r7, #12]
 634:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 635:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     tmpreg2 = SQR3_SQ_Set << (5 * (Rank - 1));
 997              		.loc 1 635 0
 998 00ba BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 999 00bc 5A1E     		subs	r2, r3, #1
 1000 00be 1346     		mov	r3, r2
 1001 00c0 9B00     		lsls	r3, r3, #2
 1002 00c2 1344     		add	r3, r3, r2
 1003 00c4 1F22     		movs	r2, #31
 1004 00c6 02FA03F3 		lsl	r3, r2, r3
 1005 00ca BB60     		str	r3, [r7, #8]
 636:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Clear the old SQx bits for the selected rank */
 637:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 1006              		.loc 1 637 0
 1007 00cc BB68     		ldr	r3, [r7, #8]
 1008 00ce DB43     		mvns	r3, r3
 1009 00d0 FA68     		ldr	r2, [r7, #12]
 1010 00d2 1340     		ands	r3, r3, r2
 1011 00d4 FB60     		str	r3, [r7, #12]
 638:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 639:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 1));
 1012              		.loc 1 639 0
 1013 00d6 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 1014 00d8 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1015 00da 5A1E     		subs	r2, r3, #1
 1016 00dc 1346     		mov	r3, r2
 1017 00de 9B00     		lsls	r3, r3, #2
 1018 00e0 1344     		add	r3, r3, r2
 1019 00e2 01FA03F3 		lsl	r3, r1, r3
 1020 00e6 BB60     		str	r3, [r7, #8]
 640:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Set the SQx bits for the selected rank */
 641:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 1021              		.loc 1 641 0
 1022 00e8 FA68     		ldr	r2, [r7, #12]
 1023 00ea BB68     		ldr	r3, [r7, #8]
 1024 00ec 1343     		orrs	r3, r3, r2
 1025 00ee FB60     		str	r3, [r7, #12]
 642:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Store the new register value */
 643:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     ADCx->SQR3 = tmpreg1;
 1026              		.loc 1 643 0
 1027 00f0 7B68     		ldr	r3, [r7, #4]
 1028 00f2 FA68     		ldr	r2, [r7, #12]
 1029 00f4 5A63     		str	r2, [r3, #52]
 1030 00f6 47E0     		b	.L41
 1031              	.L44:
 644:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
 645:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* For Rank 7 to 12 */
 646:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   else if (Rank < 13)
 1032              		.loc 1 646 0
 1033 00f8 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1034 00fa 0C2B     		cmp	r3, #12
 1035 00fc 21D8     		bhi	.L46
 647:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
 648:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Get the old register value */
 649:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SQR2;
 1036              		.loc 1 649 0
 1037 00fe 7B68     		ldr	r3, [r7, #4]
 1038 0100 1B6B     		ldr	r3, [r3, #48]
 1039 0102 FB60     		str	r3, [r7, #12]
 650:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 651:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     tmpreg2 = SQR2_SQ_Set << (5 * (Rank - 7));
 1040              		.loc 1 651 0
 1041 0104 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1042 0106 DA1F     		subs	r2, r3, #7
 1043 0108 1346     		mov	r3, r2
 1044 010a 9B00     		lsls	r3, r3, #2
 1045 010c 1344     		add	r3, r3, r2
 1046 010e 1F22     		movs	r2, #31
 1047 0110 02FA03F3 		lsl	r3, r2, r3
 1048 0114 BB60     		str	r3, [r7, #8]
 652:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Clear the old SQx bits for the selected rank */
 653:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 1049              		.loc 1 653 0
 1050 0116 BB68     		ldr	r3, [r7, #8]
 1051 0118 DB43     		mvns	r3, r3
 1052 011a FA68     		ldr	r2, [r7, #12]
 1053 011c 1340     		ands	r3, r3, r2
 1054 011e FB60     		str	r3, [r7, #12]
 654:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 655:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 7));
 1055              		.loc 1 655 0
 1056 0120 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 1057 0122 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1058 0124 DA1F     		subs	r2, r3, #7
 1059 0126 1346     		mov	r3, r2
 1060 0128 9B00     		lsls	r3, r3, #2
 1061 012a 1344     		add	r3, r3, r2
 1062 012c 01FA03F3 		lsl	r3, r1, r3
 1063 0130 BB60     		str	r3, [r7, #8]
 656:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Set the SQx bits for the selected rank */
 657:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 1064              		.loc 1 657 0
 1065 0132 FA68     		ldr	r2, [r7, #12]
 1066 0134 BB68     		ldr	r3, [r7, #8]
 1067 0136 1343     		orrs	r3, r3, r2
 1068 0138 FB60     		str	r3, [r7, #12]
 658:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Store the new register value */
 659:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     ADCx->SQR2 = tmpreg1;
 1069              		.loc 1 659 0
 1070 013a 7B68     		ldr	r3, [r7, #4]
 1071 013c FA68     		ldr	r2, [r7, #12]
 1072 013e 1A63     		str	r2, [r3, #48]
 1073 0140 22E0     		b	.L41
 1074              	.L46:
 660:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
 661:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* For Rank 13 to 16 */
 662:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   else
 663:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
 664:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Get the old register value */
 665:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SQR1;
 1075              		.loc 1 665 0
 1076 0142 7B68     		ldr	r3, [r7, #4]
 1077 0144 DB6A     		ldr	r3, [r3, #44]
 1078 0146 FB60     		str	r3, [r7, #12]
 666:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 667:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     tmpreg2 = SQR1_SQ_Set << (5 * (Rank - 13));
 1079              		.loc 1 667 0
 1080 0148 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1081 014a A3F10D02 		sub	r2, r3, #13
 1082 014e 1346     		mov	r3, r2
 1083 0150 9B00     		lsls	r3, r3, #2
 1084 0152 1344     		add	r3, r3, r2
 1085 0154 1F22     		movs	r2, #31
 1086 0156 02FA03F3 		lsl	r3, r2, r3
 1087 015a BB60     		str	r3, [r7, #8]
 668:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Clear the old SQx bits for the selected rank */
 669:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 1088              		.loc 1 669 0
 1089 015c BB68     		ldr	r3, [r7, #8]
 1090 015e DB43     		mvns	r3, r3
 1091 0160 FA68     		ldr	r2, [r7, #12]
 1092 0162 1340     		ands	r3, r3, r2
 1093 0164 FB60     		str	r3, [r7, #12]
 670:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 671:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 13));
 1094              		.loc 1 671 0
 1095 0166 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 1096 0168 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1097 016a A3F10D02 		sub	r2, r3, #13
 1098 016e 1346     		mov	r3, r2
 1099 0170 9B00     		lsls	r3, r3, #2
 1100 0172 1344     		add	r3, r3, r2
 1101 0174 01FA03F3 		lsl	r3, r1, r3
 1102 0178 BB60     		str	r3, [r7, #8]
 672:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Set the SQx bits for the selected rank */
 673:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 1103              		.loc 1 673 0
 1104 017a FA68     		ldr	r2, [r7, #12]
 1105 017c BB68     		ldr	r3, [r7, #8]
 1106 017e 1343     		orrs	r3, r3, r2
 1107 0180 FB60     		str	r3, [r7, #12]
 674:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Store the new register value */
 675:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     ADCx->SQR1 = tmpreg1;
 1108              		.loc 1 675 0
 1109 0182 7B68     		ldr	r3, [r7, #4]
 1110 0184 FA68     		ldr	r2, [r7, #12]
 1111 0186 DA62     		str	r2, [r3, #44]
 1112              	.L41:
 676:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
 677:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** }
 1113              		.loc 1 677 0
 1114 0188 1437     		adds	r7, r7, #20
 1115              		.cfi_def_cfa_offset 4
 1116 018a BD46     		mov	sp, r7
 1117              		.cfi_def_cfa_register 13
 1118              		@ sp needed
 1119 018c 5DF8047B 		ldr	r7, [sp], #4
 1120              		.cfi_restore 7
 1121              		.cfi_def_cfa_offset 0
 1122 0190 7047     		bx	lr
 1123              		.cfi_endproc
 1124              	.LFE43:
 1126 0192 00BF     		.section	.text.ADC_ExternalTrigConvCmd,"ax",%progbits
 1127              		.align	2
 1128              		.global	ADC_ExternalTrigConvCmd
 1129              		.thumb
 1130              		.thumb_func
 1132              	ADC_ExternalTrigConvCmd:
 1133              	.LFB44:
 678:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 679:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
 680:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @brief  Enables or disables the ADCx conversion through external trigger.
 681:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 682:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC external trigger start of conversion.
 683:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 684:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @retval None
 685:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
 686:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** void ADC_ExternalTrigConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 687:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** {
 1134              		.loc 1 687 0
 1135              		.cfi_startproc
 1136              		@ args = 0, pretend = 0, frame = 8
 1137              		@ frame_needed = 1, uses_anonymous_args = 0
 1138              		@ link register save eliminated.
 1139 0000 80B4     		push	{r7}
 1140              		.cfi_def_cfa_offset 4
 1141              		.cfi_offset 7, -4
 1142 0002 83B0     		sub	sp, sp, #12
 1143              		.cfi_def_cfa_offset 16
 1144 0004 00AF     		add	r7, sp, #0
 1145              		.cfi_def_cfa_register 7
 1146 0006 7860     		str	r0, [r7, #4]
 1147 0008 0B46     		mov	r3, r1
 1148 000a FB70     		strb	r3, [r7, #3]
 688:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the parameters */
 689:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 690:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 691:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 1149              		.loc 1 691 0
 1150 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1151 000e 002B     		cmp	r3, #0
 1152 0010 06D0     		beq	.L48
 692:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
 693:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Enable the selected ADC conversion on external event */
 694:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_EXTTRIG_Set;
 1153              		.loc 1 694 0
 1154 0012 7B68     		ldr	r3, [r7, #4]
 1155 0014 9B68     		ldr	r3, [r3, #8]
 1156 0016 43F48012 		orr	r2, r3, #1048576
 1157 001a 7B68     		ldr	r3, [r7, #4]
 1158 001c 9A60     		str	r2, [r3, #8]
 1159 001e 05E0     		b	.L47
 1160              	.L48:
 695:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
 696:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   else
 697:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
 698:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Disable the selected ADC conversion on external event */
 699:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_EXTTRIG_Reset;
 1161              		.loc 1 699 0
 1162 0020 7B68     		ldr	r3, [r7, #4]
 1163 0022 9B68     		ldr	r3, [r3, #8]
 1164 0024 23F48012 		bic	r2, r3, #1048576
 1165 0028 7B68     		ldr	r3, [r7, #4]
 1166 002a 9A60     		str	r2, [r3, #8]
 1167              	.L47:
 700:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
 701:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** }
 1168              		.loc 1 701 0
 1169 002c 0C37     		adds	r7, r7, #12
 1170              		.cfi_def_cfa_offset 4
 1171 002e BD46     		mov	sp, r7
 1172              		.cfi_def_cfa_register 13
 1173              		@ sp needed
 1174 0030 5DF8047B 		ldr	r7, [sp], #4
 1175              		.cfi_restore 7
 1176              		.cfi_def_cfa_offset 0
 1177 0034 7047     		bx	lr
 1178              		.cfi_endproc
 1179              	.LFE44:
 1181 0036 00BF     		.section	.text.ADC_GetConversionValue,"ax",%progbits
 1182              		.align	2
 1183              		.global	ADC_GetConversionValue
 1184              		.thumb
 1185              		.thumb_func
 1187              	ADC_GetConversionValue:
 1188              	.LFB45:
 702:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 703:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
 704:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @brief  Returns the last ADCx conversion result data for regular channel.
 705:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 706:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @retval The Data conversion value.
 707:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
 708:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** uint16_t ADC_GetConversionValue(ADC_TypeDef* ADCx)
 709:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** {
 1189              		.loc 1 709 0
 1190              		.cfi_startproc
 1191              		@ args = 0, pretend = 0, frame = 8
 1192              		@ frame_needed = 1, uses_anonymous_args = 0
 1193              		@ link register save eliminated.
 1194 0000 80B4     		push	{r7}
 1195              		.cfi_def_cfa_offset 4
 1196              		.cfi_offset 7, -4
 1197 0002 83B0     		sub	sp, sp, #12
 1198              		.cfi_def_cfa_offset 16
 1199 0004 00AF     		add	r7, sp, #0
 1200              		.cfi_def_cfa_register 7
 1201 0006 7860     		str	r0, [r7, #4]
 710:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the parameters */
 711:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 712:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Return the selected ADC conversion value */
 713:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   return (uint16_t) ADCx->DR;
 1202              		.loc 1 713 0
 1203 0008 7B68     		ldr	r3, [r7, #4]
 1204 000a DB6C     		ldr	r3, [r3, #76]
 1205 000c 9BB2     		uxth	r3, r3
 714:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** }
 1206              		.loc 1 714 0
 1207 000e 1846     		mov	r0, r3
 1208 0010 0C37     		adds	r7, r7, #12
 1209              		.cfi_def_cfa_offset 4
 1210 0012 BD46     		mov	sp, r7
 1211              		.cfi_def_cfa_register 13
 1212              		@ sp needed
 1213 0014 5DF8047B 		ldr	r7, [sp], #4
 1214              		.cfi_restore 7
 1215              		.cfi_def_cfa_offset 0
 1216 0018 7047     		bx	lr
 1217              		.cfi_endproc
 1218              	.LFE45:
 1220 001a 00BF     		.section	.text.ADC_GetDualModeConversionValue,"ax",%progbits
 1221              		.align	2
 1222              		.global	ADC_GetDualModeConversionValue
 1223              		.thumb
 1224              		.thumb_func
 1226              	ADC_GetDualModeConversionValue:
 1227              	.LFB46:
 715:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 716:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
 717:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @brief  Returns the last ADC1 and ADC2 conversion result data in dual mode.
 718:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @retval The Data conversion value.
 719:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
 720:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** uint32_t ADC_GetDualModeConversionValue(void)
 721:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** {
 1228              		.loc 1 721 0
 1229              		.cfi_startproc
 1230              		@ args = 0, pretend = 0, frame = 0
 1231              		@ frame_needed = 1, uses_anonymous_args = 0
 1232              		@ link register save eliminated.
 1233 0000 80B4     		push	{r7}
 1234              		.cfi_def_cfa_offset 4
 1235              		.cfi_offset 7, -4
 1236 0002 00AF     		add	r7, sp, #0
 1237              		.cfi_def_cfa_register 7
 722:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Return the dual mode conversion value */
 723:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   return (*(__IO uint32_t *) DR_ADDRESS);
 1238              		.loc 1 723 0
 1239 0004 034B     		ldr	r3, .L54
 1240 0006 1B68     		ldr	r3, [r3]
 724:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** }
 1241              		.loc 1 724 0
 1242 0008 1846     		mov	r0, r3
 1243 000a BD46     		mov	sp, r7
 1244              		.cfi_def_cfa_register 13
 1245              		@ sp needed
 1246 000c 5DF8047B 		ldr	r7, [sp], #4
 1247              		.cfi_restore 7
 1248              		.cfi_def_cfa_offset 0
 1249 0010 7047     		bx	lr
 1250              	.L55:
 1251 0012 00BF     		.align	2
 1252              	.L54:
 1253 0014 4C240140 		.word	1073816652
 1254              		.cfi_endproc
 1255              	.LFE46:
 1257              		.section	.text.ADC_AutoInjectedConvCmd,"ax",%progbits
 1258              		.align	2
 1259              		.global	ADC_AutoInjectedConvCmd
 1260              		.thumb
 1261              		.thumb_func
 1263              	ADC_AutoInjectedConvCmd:
 1264              	.LFB47:
 725:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 726:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
 727:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @brief  Enables or disables the selected ADC automatic injected group
 728:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *         conversion after regular one.
 729:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 730:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC auto injected conversion
 731:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 732:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @retval None
 733:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
 734:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** void ADC_AutoInjectedConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 735:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** {
 1265              		.loc 1 735 0
 1266              		.cfi_startproc
 1267              		@ args = 0, pretend = 0, frame = 8
 1268              		@ frame_needed = 1, uses_anonymous_args = 0
 1269              		@ link register save eliminated.
 1270 0000 80B4     		push	{r7}
 1271              		.cfi_def_cfa_offset 4
 1272              		.cfi_offset 7, -4
 1273 0002 83B0     		sub	sp, sp, #12
 1274              		.cfi_def_cfa_offset 16
 1275 0004 00AF     		add	r7, sp, #0
 1276              		.cfi_def_cfa_register 7
 1277 0006 7860     		str	r0, [r7, #4]
 1278 0008 0B46     		mov	r3, r1
 1279 000a FB70     		strb	r3, [r7, #3]
 736:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the parameters */
 737:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 738:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 739:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 1280              		.loc 1 739 0
 1281 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1282 000e 002B     		cmp	r3, #0
 1283 0010 06D0     		beq	.L57
 740:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
 741:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Enable the selected ADC automatic injected group conversion */
 742:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     ADCx->CR1 |= CR1_JAUTO_Set;
 1284              		.loc 1 742 0
 1285 0012 7B68     		ldr	r3, [r7, #4]
 1286 0014 5B68     		ldr	r3, [r3, #4]
 1287 0016 43F48062 		orr	r2, r3, #1024
 1288 001a 7B68     		ldr	r3, [r7, #4]
 1289 001c 5A60     		str	r2, [r3, #4]
 1290 001e 05E0     		b	.L56
 1291              	.L57:
 743:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
 744:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   else
 745:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
 746:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Disable the selected ADC automatic injected group conversion */
 747:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     ADCx->CR1 &= CR1_JAUTO_Reset;
 1292              		.loc 1 747 0
 1293 0020 7B68     		ldr	r3, [r7, #4]
 1294 0022 5B68     		ldr	r3, [r3, #4]
 1295 0024 23F48062 		bic	r2, r3, #1024
 1296 0028 7B68     		ldr	r3, [r7, #4]
 1297 002a 5A60     		str	r2, [r3, #4]
 1298              	.L56:
 748:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
 749:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** }
 1299              		.loc 1 749 0
 1300 002c 0C37     		adds	r7, r7, #12
 1301              		.cfi_def_cfa_offset 4
 1302 002e BD46     		mov	sp, r7
 1303              		.cfi_def_cfa_register 13
 1304              		@ sp needed
 1305 0030 5DF8047B 		ldr	r7, [sp], #4
 1306              		.cfi_restore 7
 1307              		.cfi_def_cfa_offset 0
 1308 0034 7047     		bx	lr
 1309              		.cfi_endproc
 1310              	.LFE47:
 1312 0036 00BF     		.section	.text.ADC_InjectedDiscModeCmd,"ax",%progbits
 1313              		.align	2
 1314              		.global	ADC_InjectedDiscModeCmd
 1315              		.thumb
 1316              		.thumb_func
 1318              	ADC_InjectedDiscModeCmd:
 1319              	.LFB48:
 750:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 751:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
 752:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @brief  Enables or disables the discontinuous mode for injected group
 753:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *         channel for the specified ADC
 754:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 755:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC discontinuous mode
 756:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *         on injected group channel.
 757:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 758:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @retval None
 759:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
 760:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** void ADC_InjectedDiscModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 761:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** {
 1320              		.loc 1 761 0
 1321              		.cfi_startproc
 1322              		@ args = 0, pretend = 0, frame = 8
 1323              		@ frame_needed = 1, uses_anonymous_args = 0
 1324              		@ link register save eliminated.
 1325 0000 80B4     		push	{r7}
 1326              		.cfi_def_cfa_offset 4
 1327              		.cfi_offset 7, -4
 1328 0002 83B0     		sub	sp, sp, #12
 1329              		.cfi_def_cfa_offset 16
 1330 0004 00AF     		add	r7, sp, #0
 1331              		.cfi_def_cfa_register 7
 1332 0006 7860     		str	r0, [r7, #4]
 1333 0008 0B46     		mov	r3, r1
 1334 000a FB70     		strb	r3, [r7, #3]
 762:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the parameters */
 763:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 764:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 765:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 1335              		.loc 1 765 0
 1336 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1337 000e 002B     		cmp	r3, #0
 1338 0010 06D0     		beq	.L60
 766:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
 767:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Enable the selected ADC injected discontinuous mode */
 768:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     ADCx->CR1 |= CR1_JDISCEN_Set;
 1339              		.loc 1 768 0
 1340 0012 7B68     		ldr	r3, [r7, #4]
 1341 0014 5B68     		ldr	r3, [r3, #4]
 1342 0016 43F48052 		orr	r2, r3, #4096
 1343 001a 7B68     		ldr	r3, [r7, #4]
 1344 001c 5A60     		str	r2, [r3, #4]
 1345 001e 05E0     		b	.L59
 1346              	.L60:
 769:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
 770:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   else
 771:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
 772:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Disable the selected ADC injected discontinuous mode */
 773:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     ADCx->CR1 &= CR1_JDISCEN_Reset;
 1347              		.loc 1 773 0
 1348 0020 7B68     		ldr	r3, [r7, #4]
 1349 0022 5B68     		ldr	r3, [r3, #4]
 1350 0024 23F48052 		bic	r2, r3, #4096
 1351 0028 7B68     		ldr	r3, [r7, #4]
 1352 002a 5A60     		str	r2, [r3, #4]
 1353              	.L59:
 774:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
 775:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** }
 1354              		.loc 1 775 0
 1355 002c 0C37     		adds	r7, r7, #12
 1356              		.cfi_def_cfa_offset 4
 1357 002e BD46     		mov	sp, r7
 1358              		.cfi_def_cfa_register 13
 1359              		@ sp needed
 1360 0030 5DF8047B 		ldr	r7, [sp], #4
 1361              		.cfi_restore 7
 1362              		.cfi_def_cfa_offset 0
 1363 0034 7047     		bx	lr
 1364              		.cfi_endproc
 1365              	.LFE48:
 1367 0036 00BF     		.section	.text.ADC_ExternalTrigInjectedConvConfig,"ax",%progbits
 1368              		.align	2
 1369              		.global	ADC_ExternalTrigInjectedConvConfig
 1370              		.thumb
 1371              		.thumb_func
 1373              	ADC_ExternalTrigInjectedConvConfig:
 1374              	.LFB49:
 776:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 777:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
 778:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @brief  Configures the ADCx external trigger for injected channels conversion.
 779:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 780:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADC_ExternalTrigInjecConv: specifies the ADC trigger to start injected conversion. 
 781:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 782:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T1_TRGO: Timer1 TRGO event selected (for ADC1, ADC2 and ADC3
 783:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T1_CC4: Timer1 capture compare4 selected (for ADC1, ADC2 and
 784:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T2_TRGO: Timer2 TRGO event selected (for ADC1 and ADC2)
 785:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T2_CC1: Timer2 capture compare1 selected (for ADC1 and ADC2)
 786:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T3_CC4: Timer3 capture compare4 selected (for ADC1 and ADC2)
 787:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T4_TRGO: Timer4 TRGO event selected (for ADC1 and ADC2)
 788:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_Ext_IT15_TIM8_CC4: External interrupt line 15 or Timer8
 789:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *                                                       capture compare4 event selected (for ADC1
 790:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T4_CC3: Timer4 capture compare3 selected (for ADC3 only)
 791:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T8_CC2: Timer8 capture compare2 selected (for ADC3 only)    
 792:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T8_CC4: Timer8 capture compare4 selected (for ADC3 only)
 793:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T5_TRGO: Timer5 TRGO event selected (for ADC3 only)         
 794:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T5_CC4: Timer5 capture compare4 selected (for ADC3 only)    
 795:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_None: Injected conversion started by software and not
 796:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *                                          by external trigger (for ADC1, ADC2 and ADC3)
 797:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @retval None
 798:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
 799:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** void ADC_ExternalTrigInjectedConvConfig(ADC_TypeDef* ADCx, uint32_t ADC_ExternalTrigInjecConv)
 800:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** {
 1375              		.loc 1 800 0
 1376              		.cfi_startproc
 1377              		@ args = 0, pretend = 0, frame = 16
 1378              		@ frame_needed = 1, uses_anonymous_args = 0
 1379              		@ link register save eliminated.
 1380 0000 80B4     		push	{r7}
 1381              		.cfi_def_cfa_offset 4
 1382              		.cfi_offset 7, -4
 1383 0002 85B0     		sub	sp, sp, #20
 1384              		.cfi_def_cfa_offset 24
 1385 0004 00AF     		add	r7, sp, #0
 1386              		.cfi_def_cfa_register 7
 1387 0006 7860     		str	r0, [r7, #4]
 1388 0008 3960     		str	r1, [r7]
 801:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   uint32_t tmpreg = 0;
 1389              		.loc 1 801 0
 1390 000a 0023     		movs	r3, #0
 1391 000c FB60     		str	r3, [r7, #12]
 802:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the parameters */
 803:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 804:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_EXT_INJEC_TRIG(ADC_ExternalTrigInjecConv));
 805:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Get the old register value */
 806:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   tmpreg = ADCx->CR2;
 1392              		.loc 1 806 0
 1393 000e 7B68     		ldr	r3, [r7, #4]
 1394 0010 9B68     		ldr	r3, [r3, #8]
 1395 0012 FB60     		str	r3, [r7, #12]
 807:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Clear the old external event selection for injected group */
 808:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   tmpreg &= CR2_JEXTSEL_Reset;
 1396              		.loc 1 808 0
 1397 0014 FB68     		ldr	r3, [r7, #12]
 1398 0016 23F4E043 		bic	r3, r3, #28672
 1399 001a FB60     		str	r3, [r7, #12]
 809:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Set the external event selection for injected group */
 810:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   tmpreg |= ADC_ExternalTrigInjecConv;
 1400              		.loc 1 810 0
 1401 001c FA68     		ldr	r2, [r7, #12]
 1402 001e 3B68     		ldr	r3, [r7]
 1403 0020 1343     		orrs	r3, r3, r2
 1404 0022 FB60     		str	r3, [r7, #12]
 811:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Store the new register value */
 812:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   ADCx->CR2 = tmpreg;
 1405              		.loc 1 812 0
 1406 0024 7B68     		ldr	r3, [r7, #4]
 1407 0026 FA68     		ldr	r2, [r7, #12]
 1408 0028 9A60     		str	r2, [r3, #8]
 813:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** }
 1409              		.loc 1 813 0
 1410 002a 1437     		adds	r7, r7, #20
 1411              		.cfi_def_cfa_offset 4
 1412 002c BD46     		mov	sp, r7
 1413              		.cfi_def_cfa_register 13
 1414              		@ sp needed
 1415 002e 5DF8047B 		ldr	r7, [sp], #4
 1416              		.cfi_restore 7
 1417              		.cfi_def_cfa_offset 0
 1418 0032 7047     		bx	lr
 1419              		.cfi_endproc
 1420              	.LFE49:
 1422              		.section	.text.ADC_ExternalTrigInjectedConvCmd,"ax",%progbits
 1423              		.align	2
 1424              		.global	ADC_ExternalTrigInjectedConvCmd
 1425              		.thumb
 1426              		.thumb_func
 1428              	ADC_ExternalTrigInjectedConvCmd:
 1429              	.LFB50:
 814:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 815:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
 816:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @brief  Enables or disables the ADCx injected channels conversion through
 817:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *         external trigger
 818:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 819:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC external trigger start of
 820:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *         injected conversion.
 821:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 822:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @retval None
 823:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
 824:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** void ADC_ExternalTrigInjectedConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 825:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** {
 1430              		.loc 1 825 0
 1431              		.cfi_startproc
 1432              		@ args = 0, pretend = 0, frame = 8
 1433              		@ frame_needed = 1, uses_anonymous_args = 0
 1434              		@ link register save eliminated.
 1435 0000 80B4     		push	{r7}
 1436              		.cfi_def_cfa_offset 4
 1437              		.cfi_offset 7, -4
 1438 0002 83B0     		sub	sp, sp, #12
 1439              		.cfi_def_cfa_offset 16
 1440 0004 00AF     		add	r7, sp, #0
 1441              		.cfi_def_cfa_register 7
 1442 0006 7860     		str	r0, [r7, #4]
 1443 0008 0B46     		mov	r3, r1
 1444 000a FB70     		strb	r3, [r7, #3]
 826:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the parameters */
 827:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 828:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 829:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 1445              		.loc 1 829 0
 1446 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1447 000e 002B     		cmp	r3, #0
 1448 0010 06D0     		beq	.L64
 830:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
 831:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Enable the selected ADC external event selection for injected group */
 832:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_JEXTTRIG_Set;
 1449              		.loc 1 832 0
 1450 0012 7B68     		ldr	r3, [r7, #4]
 1451 0014 9B68     		ldr	r3, [r3, #8]
 1452 0016 43F40042 		orr	r2, r3, #32768
 1453 001a 7B68     		ldr	r3, [r7, #4]
 1454 001c 9A60     		str	r2, [r3, #8]
 1455 001e 05E0     		b	.L63
 1456              	.L64:
 833:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
 834:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   else
 835:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
 836:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Disable the selected ADC external event selection for injected group */
 837:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_JEXTTRIG_Reset;
 1457              		.loc 1 837 0
 1458 0020 7B68     		ldr	r3, [r7, #4]
 1459 0022 9B68     		ldr	r3, [r3, #8]
 1460 0024 23F40042 		bic	r2, r3, #32768
 1461 0028 7B68     		ldr	r3, [r7, #4]
 1462 002a 9A60     		str	r2, [r3, #8]
 1463              	.L63:
 838:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
 839:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** }
 1464              		.loc 1 839 0
 1465 002c 0C37     		adds	r7, r7, #12
 1466              		.cfi_def_cfa_offset 4
 1467 002e BD46     		mov	sp, r7
 1468              		.cfi_def_cfa_register 13
 1469              		@ sp needed
 1470 0030 5DF8047B 		ldr	r7, [sp], #4
 1471              		.cfi_restore 7
 1472              		.cfi_def_cfa_offset 0
 1473 0034 7047     		bx	lr
 1474              		.cfi_endproc
 1475              	.LFE50:
 1477 0036 00BF     		.section	.text.ADC_SoftwareStartInjectedConvCmd,"ax",%progbits
 1478              		.align	2
 1479              		.global	ADC_SoftwareStartInjectedConvCmd
 1480              		.thumb
 1481              		.thumb_func
 1483              	ADC_SoftwareStartInjectedConvCmd:
 1484              	.LFB51:
 840:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 841:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
 842:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @brief  Enables or disables the selected ADC start of the injected 
 843:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *         channels conversion.
 844:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 845:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC software start injected conversion.
 846:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 847:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @retval None
 848:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
 849:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** void ADC_SoftwareStartInjectedConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 850:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** {
 1485              		.loc 1 850 0
 1486              		.cfi_startproc
 1487              		@ args = 0, pretend = 0, frame = 8
 1488              		@ frame_needed = 1, uses_anonymous_args = 0
 1489              		@ link register save eliminated.
 1490 0000 80B4     		push	{r7}
 1491              		.cfi_def_cfa_offset 4
 1492              		.cfi_offset 7, -4
 1493 0002 83B0     		sub	sp, sp, #12
 1494              		.cfi_def_cfa_offset 16
 1495 0004 00AF     		add	r7, sp, #0
 1496              		.cfi_def_cfa_register 7
 1497 0006 7860     		str	r0, [r7, #4]
 1498 0008 0B46     		mov	r3, r1
 1499 000a FB70     		strb	r3, [r7, #3]
 851:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the parameters */
 852:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 853:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 854:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 1500              		.loc 1 854 0
 1501 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1502 000e 002B     		cmp	r3, #0
 1503 0010 06D0     		beq	.L67
 855:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
 856:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Enable the selected ADC conversion for injected group on external event and start the select
 857:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****        ADC injected conversion */
 858:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_JEXTTRIG_JSWSTART_Set;
 1504              		.loc 1 858 0
 1505 0012 7B68     		ldr	r3, [r7, #4]
 1506 0014 9B68     		ldr	r3, [r3, #8]
 1507 0016 43F40212 		orr	r2, r3, #2129920
 1508 001a 7B68     		ldr	r3, [r7, #4]
 1509 001c 9A60     		str	r2, [r3, #8]
 1510 001e 05E0     		b	.L66
 1511              	.L67:
 859:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
 860:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   else
 861:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
 862:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Disable the selected ADC conversion on external event for injected group and stop the select
 863:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****        ADC injected conversion */
 864:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_JEXTTRIG_JSWSTART_Reset;
 1512              		.loc 1 864 0
 1513 0020 7B68     		ldr	r3, [r7, #4]
 1514 0022 9B68     		ldr	r3, [r3, #8]
 1515 0024 23F40212 		bic	r2, r3, #2129920
 1516 0028 7B68     		ldr	r3, [r7, #4]
 1517 002a 9A60     		str	r2, [r3, #8]
 1518              	.L66:
 865:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
 866:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** }
 1519              		.loc 1 866 0
 1520 002c 0C37     		adds	r7, r7, #12
 1521              		.cfi_def_cfa_offset 4
 1522 002e BD46     		mov	sp, r7
 1523              		.cfi_def_cfa_register 13
 1524              		@ sp needed
 1525 0030 5DF8047B 		ldr	r7, [sp], #4
 1526              		.cfi_restore 7
 1527              		.cfi_def_cfa_offset 0
 1528 0034 7047     		bx	lr
 1529              		.cfi_endproc
 1530              	.LFE51:
 1532 0036 00BF     		.section	.text.ADC_GetSoftwareStartInjectedConvCmdStatus,"ax",%progbits
 1533              		.align	2
 1534              		.global	ADC_GetSoftwareStartInjectedConvCmdStatus
 1535              		.thumb
 1536              		.thumb_func
 1538              	ADC_GetSoftwareStartInjectedConvCmdStatus:
 1539              	.LFB52:
 867:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 868:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
 869:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @brief  Gets the selected ADC Software start injected conversion Status.
 870:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 871:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @retval The new state of ADC software start injected conversion (SET or RESET).
 872:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
 873:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** FlagStatus ADC_GetSoftwareStartInjectedConvCmdStatus(ADC_TypeDef* ADCx)
 874:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** {
 1540              		.loc 1 874 0
 1541              		.cfi_startproc
 1542              		@ args = 0, pretend = 0, frame = 16
 1543              		@ frame_needed = 1, uses_anonymous_args = 0
 1544              		@ link register save eliminated.
 1545 0000 80B4     		push	{r7}
 1546              		.cfi_def_cfa_offset 4
 1547              		.cfi_offset 7, -4
 1548 0002 85B0     		sub	sp, sp, #20
 1549              		.cfi_def_cfa_offset 24
 1550 0004 00AF     		add	r7, sp, #0
 1551              		.cfi_def_cfa_register 7
 1552 0006 7860     		str	r0, [r7, #4]
 875:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 1553              		.loc 1 875 0
 1554 0008 0023     		movs	r3, #0
 1555 000a FB73     		strb	r3, [r7, #15]
 876:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the parameters */
 877:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 878:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the status of JSWSTART bit */
 879:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   if ((ADCx->CR2 & CR2_JSWSTART_Set) != (uint32_t)RESET)
 1556              		.loc 1 879 0
 1557 000c 7B68     		ldr	r3, [r7, #4]
 1558 000e 9B68     		ldr	r3, [r3, #8]
 1559 0010 03F40013 		and	r3, r3, #2097152
 1560 0014 002B     		cmp	r3, #0
 1561 0016 02D0     		beq	.L70
 880:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
 881:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* JSWSTART bit is set */
 882:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     bitstatus = SET;
 1562              		.loc 1 882 0
 1563 0018 0123     		movs	r3, #1
 1564 001a FB73     		strb	r3, [r7, #15]
 1565 001c 01E0     		b	.L71
 1566              	.L70:
 883:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
 884:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   else
 885:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
 886:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* JSWSTART bit is reset */
 887:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     bitstatus = RESET;
 1567              		.loc 1 887 0
 1568 001e 0023     		movs	r3, #0
 1569 0020 FB73     		strb	r3, [r7, #15]
 1570              	.L71:
 888:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
 889:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Return the JSWSTART bit status */
 890:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   return  bitstatus;
 1571              		.loc 1 890 0
 1572 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 891:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** }
 1573              		.loc 1 891 0
 1574 0024 1846     		mov	r0, r3
 1575 0026 1437     		adds	r7, r7, #20
 1576              		.cfi_def_cfa_offset 4
 1577 0028 BD46     		mov	sp, r7
 1578              		.cfi_def_cfa_register 13
 1579              		@ sp needed
 1580 002a 5DF8047B 		ldr	r7, [sp], #4
 1581              		.cfi_restore 7
 1582              		.cfi_def_cfa_offset 0
 1583 002e 7047     		bx	lr
 1584              		.cfi_endproc
 1585              	.LFE52:
 1587              		.section	.text.ADC_InjectedChannelConfig,"ax",%progbits
 1588              		.align	2
 1589              		.global	ADC_InjectedChannelConfig
 1590              		.thumb
 1591              		.thumb_func
 1593              	ADC_InjectedChannelConfig:
 1594              	.LFB53:
 892:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 893:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
 894:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @brief  Configures for the selected ADC injected channel its corresponding
 895:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *         rank in the sequencer and its sample time.
 896:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 897:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADC_Channel: the ADC channel to configure. 
 898:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 899:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_0: ADC Channel0 selected
 900:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_1: ADC Channel1 selected
 901:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_2: ADC Channel2 selected
 902:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_3: ADC Channel3 selected
 903:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_4: ADC Channel4 selected
 904:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_5: ADC Channel5 selected
 905:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_6: ADC Channel6 selected
 906:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_7: ADC Channel7 selected
 907:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_8: ADC Channel8 selected
 908:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_9: ADC Channel9 selected
 909:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_10: ADC Channel10 selected
 910:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_11: ADC Channel11 selected
 911:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_12: ADC Channel12 selected
 912:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_13: ADC Channel13 selected
 913:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_14: ADC Channel14 selected
 914:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_15: ADC Channel15 selected
 915:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_16: ADC Channel16 selected
 916:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_17: ADC Channel17 selected
 917:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  Rank: The rank in the injected group sequencer. This parameter must be between 1 and 4.
 918:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADC_SampleTime: The sample time value to be set for the selected channel. 
 919:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 920:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_1Cycles5: Sample time equal to 1.5 cycles
 921:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_7Cycles5: Sample time equal to 7.5 cycles
 922:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_13Cycles5: Sample time equal to 13.5 cycles
 923:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_28Cycles5: Sample time equal to 28.5 cycles	
 924:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_41Cycles5: Sample time equal to 41.5 cycles	
 925:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_55Cycles5: Sample time equal to 55.5 cycles	
 926:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_71Cycles5: Sample time equal to 71.5 cycles	
 927:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_239Cycles5: Sample time equal to 239.5 cycles	
 928:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @retval None
 929:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
 930:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** void ADC_InjectedChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_Sa
 931:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** {
 1595              		.loc 1 931 0
 1596              		.cfi_startproc
 1597              		@ args = 0, pretend = 0, frame = 24
 1598              		@ frame_needed = 1, uses_anonymous_args = 0
 1599              		@ link register save eliminated.
 1600 0000 80B4     		push	{r7}
 1601              		.cfi_def_cfa_offset 4
 1602              		.cfi_offset 7, -4
 1603 0002 87B0     		sub	sp, sp, #28
 1604              		.cfi_def_cfa_offset 32
 1605 0004 00AF     		add	r7, sp, #0
 1606              		.cfi_def_cfa_register 7
 1607 0006 7860     		str	r0, [r7, #4]
 1608 0008 0846     		mov	r0, r1
 1609 000a 1146     		mov	r1, r2
 1610 000c 1A46     		mov	r2, r3
 1611 000e 0346     		mov	r3, r0
 1612 0010 FB70     		strb	r3, [r7, #3]
 1613 0012 0B46     		mov	r3, r1
 1614 0014 BB70     		strb	r3, [r7, #2]
 1615 0016 1346     		mov	r3, r2
 1616 0018 7B70     		strb	r3, [r7, #1]
 932:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0, tmpreg3 = 0;
 1617              		.loc 1 932 0
 1618 001a 0023     		movs	r3, #0
 1619 001c 7B61     		str	r3, [r7, #20]
 1620 001e 0023     		movs	r3, #0
 1621 0020 3B61     		str	r3, [r7, #16]
 1622 0022 0023     		movs	r3, #0
 1623 0024 FB60     		str	r3, [r7, #12]
 933:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the parameters */
 934:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 935:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
 936:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_INJECTED_RANK(Rank));
 937:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(ADC_SampleTime));
 938:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* if ADC_Channel_10 ... ADC_Channel_17 is selected */
 939:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   if (ADC_Channel > ADC_Channel_9)
 1624              		.loc 1 939 0
 1625 0026 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1626 0028 092B     		cmp	r3, #9
 1627 002a 23D9     		bls	.L74
 940:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
 941:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Get the old register value */
 942:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR1;
 1628              		.loc 1 942 0
 1629 002c 7B68     		ldr	r3, [r7, #4]
 1630 002e DB68     		ldr	r3, [r3, #12]
 1631 0030 7B61     		str	r3, [r7, #20]
 943:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 944:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     tmpreg2 = SMPR1_SMP_Set << (3*(ADC_Channel - 10));
 1632              		.loc 1 944 0
 1633 0032 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1634 0034 A3F10A02 		sub	r2, r3, #10
 1635 0038 1346     		mov	r3, r2
 1636 003a 5B00     		lsls	r3, r3, #1
 1637 003c 1344     		add	r3, r3, r2
 1638 003e 0722     		movs	r2, #7
 1639 0040 02FA03F3 		lsl	r3, r2, r3
 1640 0044 3B61     		str	r3, [r7, #16]
 945:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Clear the old channel sample time */
 946:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 1641              		.loc 1 946 0
 1642 0046 3B69     		ldr	r3, [r7, #16]
 1643 0048 DB43     		mvns	r3, r3
 1644 004a 7A69     		ldr	r2, [r7, #20]
 1645 004c 1340     		ands	r3, r3, r2
 1646 004e 7B61     		str	r3, [r7, #20]
 947:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 948:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3*(ADC_Channel - 10));
 1647              		.loc 1 948 0
 1648 0050 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 1649 0052 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1650 0054 A3F10A02 		sub	r2, r3, #10
 1651 0058 1346     		mov	r3, r2
 1652 005a 5B00     		lsls	r3, r3, #1
 1653 005c 1344     		add	r3, r3, r2
 1654 005e 01FA03F3 		lsl	r3, r1, r3
 1655 0062 3B61     		str	r3, [r7, #16]
 949:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Set the new channel sample time */
 950:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 1656              		.loc 1 950 0
 1657 0064 7A69     		ldr	r2, [r7, #20]
 1658 0066 3B69     		ldr	r3, [r7, #16]
 1659 0068 1343     		orrs	r3, r3, r2
 1660 006a 7B61     		str	r3, [r7, #20]
 951:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Store the new register value */
 952:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     ADCx->SMPR1 = tmpreg1;
 1661              		.loc 1 952 0
 1662 006c 7B68     		ldr	r3, [r7, #4]
 1663 006e 7A69     		ldr	r2, [r7, #20]
 1664 0070 DA60     		str	r2, [r3, #12]
 1665 0072 1EE0     		b	.L75
 1666              	.L74:
 953:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
 954:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   else /* ADC_Channel include in ADC_Channel_[0..9] */
 955:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
 956:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Get the old register value */
 957:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR2;
 1667              		.loc 1 957 0
 1668 0074 7B68     		ldr	r3, [r7, #4]
 1669 0076 1B69     		ldr	r3, [r3, #16]
 1670 0078 7B61     		str	r3, [r7, #20]
 958:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 959:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     tmpreg2 = SMPR2_SMP_Set << (3 * ADC_Channel);
 1671              		.loc 1 959 0
 1672 007a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1673 007c 1346     		mov	r3, r2
 1674 007e 5B00     		lsls	r3, r3, #1
 1675 0080 1344     		add	r3, r3, r2
 1676 0082 0722     		movs	r2, #7
 1677 0084 02FA03F3 		lsl	r3, r2, r3
 1678 0088 3B61     		str	r3, [r7, #16]
 960:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Clear the old channel sample time */
 961:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 1679              		.loc 1 961 0
 1680 008a 3B69     		ldr	r3, [r7, #16]
 1681 008c DB43     		mvns	r3, r3
 1682 008e 7A69     		ldr	r2, [r7, #20]
 1683 0090 1340     		ands	r3, r3, r2
 1684 0092 7B61     		str	r3, [r7, #20]
 962:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 963:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * ADC_Channel);
 1685              		.loc 1 963 0
 1686 0094 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 1687 0096 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1688 0098 1346     		mov	r3, r2
 1689 009a 5B00     		lsls	r3, r3, #1
 1690 009c 1344     		add	r3, r3, r2
 1691 009e 01FA03F3 		lsl	r3, r1, r3
 1692 00a2 3B61     		str	r3, [r7, #16]
 964:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Set the new channel sample time */
 965:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 1693              		.loc 1 965 0
 1694 00a4 7A69     		ldr	r2, [r7, #20]
 1695 00a6 3B69     		ldr	r3, [r7, #16]
 1696 00a8 1343     		orrs	r3, r3, r2
 1697 00aa 7B61     		str	r3, [r7, #20]
 966:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Store the new register value */
 967:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     ADCx->SMPR2 = tmpreg1;
 1698              		.loc 1 967 0
 1699 00ac 7B68     		ldr	r3, [r7, #4]
 1700 00ae 7A69     		ldr	r2, [r7, #20]
 1701 00b0 1A61     		str	r2, [r3, #16]
 1702              	.L75:
 968:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
 969:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Rank configuration */
 970:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Get the old register value */
 971:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->JSQR;
 1703              		.loc 1 971 0
 1704 00b2 7B68     		ldr	r3, [r7, #4]
 1705 00b4 9B6B     		ldr	r3, [r3, #56]
 1706 00b6 7B61     		str	r3, [r7, #20]
 972:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Get JL value: Number = JL+1 */
 973:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   tmpreg3 =  (tmpreg1 & JSQR_JL_Set)>> 20;
 1707              		.loc 1 973 0
 1708 00b8 7B69     		ldr	r3, [r7, #20]
 1709 00ba 03F44013 		and	r3, r3, #3145728
 1710 00be 1B0D     		lsrs	r3, r3, #20
 1711 00c0 FB60     		str	r3, [r7, #12]
 974:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Calculate the mask to clear: ((Rank-1)+(4-JL-1)) */
 975:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   tmpreg2 = JSQR_JSQ_Set << (5 * (uint8_t)((Rank + 3) - (tmpreg3 + 1)));
 1712              		.loc 1 975 0
 1713 00c2 FB68     		ldr	r3, [r7, #12]
 1714 00c4 DBB2     		uxtb	r3, r3
 1715 00c6 BA78     		ldrb	r2, [r7, #2]
 1716 00c8 D31A     		subs	r3, r2, r3
 1717 00ca DBB2     		uxtb	r3, r3
 1718 00cc 0233     		adds	r3, r3, #2
 1719 00ce DBB2     		uxtb	r3, r3
 1720 00d0 1A46     		mov	r2, r3
 1721 00d2 1346     		mov	r3, r2
 1722 00d4 9B00     		lsls	r3, r3, #2
 1723 00d6 1344     		add	r3, r3, r2
 1724 00d8 1F22     		movs	r2, #31
 1725 00da 02FA03F3 		lsl	r3, r2, r3
 1726 00de 3B61     		str	r3, [r7, #16]
 976:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Clear the old JSQx bits for the selected rank */
 977:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   tmpreg1 &= ~tmpreg2;
 1727              		.loc 1 977 0
 1728 00e0 3B69     		ldr	r3, [r7, #16]
 1729 00e2 DB43     		mvns	r3, r3
 1730 00e4 7A69     		ldr	r2, [r7, #20]
 1731 00e6 1340     		ands	r3, r3, r2
 1732 00e8 7B61     		str	r3, [r7, #20]
 978:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Calculate the mask to set: ((Rank-1)+(4-JL-1)) */
 979:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   tmpreg2 = (uint32_t)ADC_Channel << (5 * (uint8_t)((Rank + 3) - (tmpreg3 + 1)));
 1733              		.loc 1 979 0
 1734 00ea FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1735 00ec FB68     		ldr	r3, [r7, #12]
 1736 00ee DBB2     		uxtb	r3, r3
 1737 00f0 B978     		ldrb	r1, [r7, #2]
 1738 00f2 CB1A     		subs	r3, r1, r3
 1739 00f4 DBB2     		uxtb	r3, r3
 1740 00f6 0233     		adds	r3, r3, #2
 1741 00f8 DBB2     		uxtb	r3, r3
 1742 00fa 1946     		mov	r1, r3
 1743 00fc 0B46     		mov	r3, r1
 1744 00fe 9B00     		lsls	r3, r3, #2
 1745 0100 0B44     		add	r3, r3, r1
 1746 0102 02FA03F3 		lsl	r3, r2, r3
 1747 0106 3B61     		str	r3, [r7, #16]
 980:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Set the JSQx bits for the selected rank */
 981:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   tmpreg1 |= tmpreg2;
 1748              		.loc 1 981 0
 1749 0108 7A69     		ldr	r2, [r7, #20]
 1750 010a 3B69     		ldr	r3, [r7, #16]
 1751 010c 1343     		orrs	r3, r3, r2
 1752 010e 7B61     		str	r3, [r7, #20]
 982:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Store the new register value */
 983:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   ADCx->JSQR = tmpreg1;
 1753              		.loc 1 983 0
 1754 0110 7B68     		ldr	r3, [r7, #4]
 1755 0112 7A69     		ldr	r2, [r7, #20]
 1756 0114 9A63     		str	r2, [r3, #56]
 984:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** }
 1757              		.loc 1 984 0
 1758 0116 1C37     		adds	r7, r7, #28
 1759              		.cfi_def_cfa_offset 4
 1760 0118 BD46     		mov	sp, r7
 1761              		.cfi_def_cfa_register 13
 1762              		@ sp needed
 1763 011a 5DF8047B 		ldr	r7, [sp], #4
 1764              		.cfi_restore 7
 1765              		.cfi_def_cfa_offset 0
 1766 011e 7047     		bx	lr
 1767              		.cfi_endproc
 1768              	.LFE53:
 1770              		.section	.text.ADC_InjectedSequencerLengthConfig,"ax",%progbits
 1771              		.align	2
 1772              		.global	ADC_InjectedSequencerLengthConfig
 1773              		.thumb
 1774              		.thumb_func
 1776              	ADC_InjectedSequencerLengthConfig:
 1777              	.LFB54:
 985:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
 986:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
 987:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @brief  Configures the sequencer length for injected channels
 988:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 989:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  Length: The sequencer length. 
 990:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *   This parameter must be a number between 1 to 4.
 991:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @retval None
 992:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
 993:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** void ADC_InjectedSequencerLengthConfig(ADC_TypeDef* ADCx, uint8_t Length)
 994:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** {
 1778              		.loc 1 994 0
 1779              		.cfi_startproc
 1780              		@ args = 0, pretend = 0, frame = 16
 1781              		@ frame_needed = 1, uses_anonymous_args = 0
 1782              		@ link register save eliminated.
 1783 0000 80B4     		push	{r7}
 1784              		.cfi_def_cfa_offset 4
 1785              		.cfi_offset 7, -4
 1786 0002 85B0     		sub	sp, sp, #20
 1787              		.cfi_def_cfa_offset 24
 1788 0004 00AF     		add	r7, sp, #0
 1789              		.cfi_def_cfa_register 7
 1790 0006 7860     		str	r0, [r7, #4]
 1791 0008 0B46     		mov	r3, r1
 1792 000a FB70     		strb	r3, [r7, #3]
 995:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0;
 1793              		.loc 1 995 0
 1794 000c 0023     		movs	r3, #0
 1795 000e FB60     		str	r3, [r7, #12]
 996:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   uint32_t tmpreg2 = 0;
 1796              		.loc 1 996 0
 1797 0010 0023     		movs	r3, #0
 1798 0012 BB60     		str	r3, [r7, #8]
 997:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the parameters */
 998:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 999:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_INJECTED_LENGTH(Length));
1000:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   
1001:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Get the old register value */
1002:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->JSQR;
 1799              		.loc 1 1002 0
 1800 0014 7B68     		ldr	r3, [r7, #4]
 1801 0016 9B6B     		ldr	r3, [r3, #56]
 1802 0018 FB60     		str	r3, [r7, #12]
1003:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Clear the old injected sequnence lenght JL bits */
1004:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   tmpreg1 &= JSQR_JL_Reset;
 1803              		.loc 1 1004 0
 1804 001a FB68     		ldr	r3, [r7, #12]
 1805 001c 23F44013 		bic	r3, r3, #3145728
 1806 0020 FB60     		str	r3, [r7, #12]
1005:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Set the injected sequnence lenght JL bits */
1006:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   tmpreg2 = Length - 1; 
 1807              		.loc 1 1006 0
 1808 0022 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1809 0024 013B     		subs	r3, r3, #1
 1810 0026 BB60     		str	r3, [r7, #8]
1007:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   tmpreg1 |= tmpreg2 << 20;
 1811              		.loc 1 1007 0
 1812 0028 BB68     		ldr	r3, [r7, #8]
 1813 002a 1B05     		lsls	r3, r3, #20
 1814 002c FA68     		ldr	r2, [r7, #12]
 1815 002e 1343     		orrs	r3, r3, r2
 1816 0030 FB60     		str	r3, [r7, #12]
1008:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Store the new register value */
1009:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   ADCx->JSQR = tmpreg1;
 1817              		.loc 1 1009 0
 1818 0032 7B68     		ldr	r3, [r7, #4]
 1819 0034 FA68     		ldr	r2, [r7, #12]
 1820 0036 9A63     		str	r2, [r3, #56]
1010:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** }
 1821              		.loc 1 1010 0
 1822 0038 1437     		adds	r7, r7, #20
 1823              		.cfi_def_cfa_offset 4
 1824 003a BD46     		mov	sp, r7
 1825              		.cfi_def_cfa_register 13
 1826              		@ sp needed
 1827 003c 5DF8047B 		ldr	r7, [sp], #4
 1828              		.cfi_restore 7
 1829              		.cfi_def_cfa_offset 0
 1830 0040 7047     		bx	lr
 1831              		.cfi_endproc
 1832              	.LFE54:
 1834 0042 00BF     		.section	.text.ADC_SetInjectedOffset,"ax",%progbits
 1835              		.align	2
 1836              		.global	ADC_SetInjectedOffset
 1837              		.thumb
 1838              		.thumb_func
 1840              	ADC_SetInjectedOffset:
 1841              	.LFB55:
1011:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
1012:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
1013:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @brief  Set the injected channels conversion value offset
1014:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1015:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADC_InjectedChannel: the ADC injected channel to set its offset. 
1016:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1017:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_1: Injected Channel1 selected
1018:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_2: Injected Channel2 selected
1019:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_3: Injected Channel3 selected
1020:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_4: Injected Channel4 selected
1021:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  Offset: the offset value for the selected ADC injected channel
1022:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *   This parameter must be a 12bit value.
1023:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @retval None
1024:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
1025:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** void ADC_SetInjectedOffset(ADC_TypeDef* ADCx, uint8_t ADC_InjectedChannel, uint16_t Offset)
1026:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** {
 1842              		.loc 1 1026 0
 1843              		.cfi_startproc
 1844              		@ args = 0, pretend = 0, frame = 16
 1845              		@ frame_needed = 1, uses_anonymous_args = 0
 1846              		@ link register save eliminated.
 1847 0000 80B4     		push	{r7}
 1848              		.cfi_def_cfa_offset 4
 1849              		.cfi_offset 7, -4
 1850 0002 85B0     		sub	sp, sp, #20
 1851              		.cfi_def_cfa_offset 24
 1852 0004 00AF     		add	r7, sp, #0
 1853              		.cfi_def_cfa_register 7
 1854 0006 7860     		str	r0, [r7, #4]
 1855 0008 0B46     		mov	r3, r1
 1856 000a FB70     		strb	r3, [r7, #3]
 1857 000c 1346     		mov	r3, r2	@ movhi
 1858 000e 3B80     		strh	r3, [r7]	@ movhi
1027:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   __IO uint32_t tmp = 0;
 1859              		.loc 1 1027 0
 1860 0010 0023     		movs	r3, #0
 1861 0012 FB60     		str	r3, [r7, #12]
1028:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   
1029:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the parameters */
1030:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1031:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_INJECTED_CHANNEL(ADC_InjectedChannel));
1032:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_OFFSET(Offset));  
1033:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   
1034:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   tmp = (uint32_t)ADCx;
 1862              		.loc 1 1034 0
 1863 0014 7B68     		ldr	r3, [r7, #4]
 1864 0016 FB60     		str	r3, [r7, #12]
1035:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   tmp += ADC_InjectedChannel;
 1865              		.loc 1 1035 0
 1866 0018 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1867 001a FB68     		ldr	r3, [r7, #12]
 1868 001c 1344     		add	r3, r3, r2
 1869 001e FB60     		str	r3, [r7, #12]
1036:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   
1037:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Set the selected injected channel data offset */
1038:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *(__IO uint32_t *) tmp = (uint32_t)Offset;
 1870              		.loc 1 1038 0
 1871 0020 FB68     		ldr	r3, [r7, #12]
 1872 0022 1A46     		mov	r2, r3
 1873 0024 3B88     		ldrh	r3, [r7]
 1874 0026 1360     		str	r3, [r2]
1039:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** }
 1875              		.loc 1 1039 0
 1876 0028 1437     		adds	r7, r7, #20
 1877              		.cfi_def_cfa_offset 4
 1878 002a BD46     		mov	sp, r7
 1879              		.cfi_def_cfa_register 13
 1880              		@ sp needed
 1881 002c 5DF8047B 		ldr	r7, [sp], #4
 1882              		.cfi_restore 7
 1883              		.cfi_def_cfa_offset 0
 1884 0030 7047     		bx	lr
 1885              		.cfi_endproc
 1886              	.LFE55:
 1888 0032 00BF     		.section	.text.ADC_GetInjectedConversionValue,"ax",%progbits
 1889              		.align	2
 1890              		.global	ADC_GetInjectedConversionValue
 1891              		.thumb
 1892              		.thumb_func
 1894              	ADC_GetInjectedConversionValue:
 1895              	.LFB56:
1040:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
1041:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
1042:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @brief  Returns the ADC injected channel conversion result
1043:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1044:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADC_InjectedChannel: the converted ADC injected channel.
1045:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1046:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_1: Injected Channel1 selected
1047:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_2: Injected Channel2 selected
1048:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_3: Injected Channel3 selected
1049:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_4: Injected Channel4 selected
1050:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @retval The Data conversion value.
1051:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
1052:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** uint16_t ADC_GetInjectedConversionValue(ADC_TypeDef* ADCx, uint8_t ADC_InjectedChannel)
1053:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** {
 1896              		.loc 1 1053 0
 1897              		.cfi_startproc
 1898              		@ args = 0, pretend = 0, frame = 16
 1899              		@ frame_needed = 1, uses_anonymous_args = 0
 1900              		@ link register save eliminated.
 1901 0000 80B4     		push	{r7}
 1902              		.cfi_def_cfa_offset 4
 1903              		.cfi_offset 7, -4
 1904 0002 85B0     		sub	sp, sp, #20
 1905              		.cfi_def_cfa_offset 24
 1906 0004 00AF     		add	r7, sp, #0
 1907              		.cfi_def_cfa_register 7
 1908 0006 7860     		str	r0, [r7, #4]
 1909 0008 0B46     		mov	r3, r1
 1910 000a FB70     		strb	r3, [r7, #3]
1054:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   __IO uint32_t tmp = 0;
 1911              		.loc 1 1054 0
 1912 000c 0023     		movs	r3, #0
 1913 000e FB60     		str	r3, [r7, #12]
1055:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   
1056:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the parameters */
1057:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1058:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_INJECTED_CHANNEL(ADC_InjectedChannel));
1059:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
1060:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   tmp = (uint32_t)ADCx;
 1914              		.loc 1 1060 0
 1915 0010 7B68     		ldr	r3, [r7, #4]
 1916 0012 FB60     		str	r3, [r7, #12]
1061:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   tmp += ADC_InjectedChannel + JDR_Offset;
 1917              		.loc 1 1061 0
 1918 0014 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1919 0016 FB68     		ldr	r3, [r7, #12]
 1920 0018 1344     		add	r3, r3, r2
 1921 001a 2833     		adds	r3, r3, #40
 1922 001c FB60     		str	r3, [r7, #12]
1062:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   
1063:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Returns the selected injected channel conversion data value */
1064:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   return (uint16_t) (*(__IO uint32_t*)  tmp);   
 1923              		.loc 1 1064 0
 1924 001e FB68     		ldr	r3, [r7, #12]
 1925 0020 1B68     		ldr	r3, [r3]
 1926 0022 9BB2     		uxth	r3, r3
1065:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** }
 1927              		.loc 1 1065 0
 1928 0024 1846     		mov	r0, r3
 1929 0026 1437     		adds	r7, r7, #20
 1930              		.cfi_def_cfa_offset 4
 1931 0028 BD46     		mov	sp, r7
 1932              		.cfi_def_cfa_register 13
 1933              		@ sp needed
 1934 002a 5DF8047B 		ldr	r7, [sp], #4
 1935              		.cfi_restore 7
 1936              		.cfi_def_cfa_offset 0
 1937 002e 7047     		bx	lr
 1938              		.cfi_endproc
 1939              	.LFE56:
 1941              		.section	.text.ADC_AnalogWatchdogCmd,"ax",%progbits
 1942              		.align	2
 1943              		.global	ADC_AnalogWatchdogCmd
 1944              		.thumb
 1945              		.thumb_func
 1947              	ADC_AnalogWatchdogCmd:
 1948              	.LFB57:
1066:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
1067:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
1068:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @brief  Enables or disables the analog watchdog on single/all regular
1069:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *         or injected channels
1070:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1071:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADC_AnalogWatchdog: the ADC analog watchdog configuration.
1072:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1073:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_SingleRegEnable: Analog watchdog on a single regular channel
1074:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_SingleInjecEnable: Analog watchdog on a single injected channel
1075:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_SingleRegOrInjecEnable: Analog watchdog on a single regular or inje
1076:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_AllRegEnable: Analog watchdog on  all regular channel
1077:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_AllInjecEnable: Analog watchdog on  all injected channel
1078:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_AllRegAllInjecEnable: Analog watchdog on all regular and injected c
1079:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_None: No channel guarded by the analog watchdog
1080:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @retval None	  
1081:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
1082:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** void ADC_AnalogWatchdogCmd(ADC_TypeDef* ADCx, uint32_t ADC_AnalogWatchdog)
1083:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** {
 1949              		.loc 1 1083 0
 1950              		.cfi_startproc
 1951              		@ args = 0, pretend = 0, frame = 16
 1952              		@ frame_needed = 1, uses_anonymous_args = 0
 1953              		@ link register save eliminated.
 1954 0000 80B4     		push	{r7}
 1955              		.cfi_def_cfa_offset 4
 1956              		.cfi_offset 7, -4
 1957 0002 85B0     		sub	sp, sp, #20
 1958              		.cfi_def_cfa_offset 24
 1959 0004 00AF     		add	r7, sp, #0
 1960              		.cfi_def_cfa_register 7
 1961 0006 7860     		str	r0, [r7, #4]
 1962 0008 3960     		str	r1, [r7]
1084:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   uint32_t tmpreg = 0;
 1963              		.loc 1 1084 0
 1964 000a 0023     		movs	r3, #0
 1965 000c FB60     		str	r3, [r7, #12]
1085:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the parameters */
1086:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1087:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG(ADC_AnalogWatchdog));
1088:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Get the old register value */
1089:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   tmpreg = ADCx->CR1;
 1966              		.loc 1 1089 0
 1967 000e 7B68     		ldr	r3, [r7, #4]
 1968 0010 5B68     		ldr	r3, [r3, #4]
 1969 0012 FB60     		str	r3, [r7, #12]
1090:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Clear AWDEN, AWDENJ and AWDSGL bits */
1091:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   tmpreg &= CR1_AWDMode_Reset;
 1970              		.loc 1 1091 0
 1971 0014 FB68     		ldr	r3, [r7, #12]
 1972 0016 23F44003 		bic	r3, r3, #12582912
 1973 001a 23F40073 		bic	r3, r3, #512
 1974 001e FB60     		str	r3, [r7, #12]
1092:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Set the analog watchdog enable mode */
1093:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   tmpreg |= ADC_AnalogWatchdog;
 1975              		.loc 1 1093 0
 1976 0020 FA68     		ldr	r2, [r7, #12]
 1977 0022 3B68     		ldr	r3, [r7]
 1978 0024 1343     		orrs	r3, r3, r2
 1979 0026 FB60     		str	r3, [r7, #12]
1094:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Store the new register value */
1095:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   ADCx->CR1 = tmpreg;
 1980              		.loc 1 1095 0
 1981 0028 7B68     		ldr	r3, [r7, #4]
 1982 002a FA68     		ldr	r2, [r7, #12]
 1983 002c 5A60     		str	r2, [r3, #4]
1096:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** }
 1984              		.loc 1 1096 0
 1985 002e 1437     		adds	r7, r7, #20
 1986              		.cfi_def_cfa_offset 4
 1987 0030 BD46     		mov	sp, r7
 1988              		.cfi_def_cfa_register 13
 1989              		@ sp needed
 1990 0032 5DF8047B 		ldr	r7, [sp], #4
 1991              		.cfi_restore 7
 1992              		.cfi_def_cfa_offset 0
 1993 0036 7047     		bx	lr
 1994              		.cfi_endproc
 1995              	.LFE57:
 1997              		.section	.text.ADC_AnalogWatchdogThresholdsConfig,"ax",%progbits
 1998              		.align	2
 1999              		.global	ADC_AnalogWatchdogThresholdsConfig
 2000              		.thumb
 2001              		.thumb_func
 2003              	ADC_AnalogWatchdogThresholdsConfig:
 2004              	.LFB58:
1097:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
1098:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
1099:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @brief  Configures the high and low thresholds of the analog watchdog.
1100:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1101:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  HighThreshold: the ADC analog watchdog High threshold value.
1102:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *   This parameter must be a 12bit value.
1103:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  LowThreshold: the ADC analog watchdog Low threshold value.
1104:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *   This parameter must be a 12bit value.
1105:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @retval None
1106:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
1107:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** void ADC_AnalogWatchdogThresholdsConfig(ADC_TypeDef* ADCx, uint16_t HighThreshold,
1108:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****                                         uint16_t LowThreshold)
1109:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** {
 2005              		.loc 1 1109 0
 2006              		.cfi_startproc
 2007              		@ args = 0, pretend = 0, frame = 8
 2008              		@ frame_needed = 1, uses_anonymous_args = 0
 2009              		@ link register save eliminated.
 2010 0000 80B4     		push	{r7}
 2011              		.cfi_def_cfa_offset 4
 2012              		.cfi_offset 7, -4
 2013 0002 83B0     		sub	sp, sp, #12
 2014              		.cfi_def_cfa_offset 16
 2015 0004 00AF     		add	r7, sp, #0
 2016              		.cfi_def_cfa_register 7
 2017 0006 7860     		str	r0, [r7, #4]
 2018 0008 0B46     		mov	r3, r1
 2019 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 2020 000c 1346     		mov	r3, r2	@ movhi
 2021 000e 3B80     		strh	r3, [r7]	@ movhi
1110:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the parameters */
1111:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1112:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_THRESHOLD(HighThreshold));
1113:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_THRESHOLD(LowThreshold));
1114:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Set the ADCx high threshold */
1115:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   ADCx->HTR = HighThreshold;
 2022              		.loc 1 1115 0
 2023 0010 7A88     		ldrh	r2, [r7, #2]
 2024 0012 7B68     		ldr	r3, [r7, #4]
 2025 0014 5A62     		str	r2, [r3, #36]
1116:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Set the ADCx low threshold */
1117:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   ADCx->LTR = LowThreshold;
 2026              		.loc 1 1117 0
 2027 0016 3A88     		ldrh	r2, [r7]
 2028 0018 7B68     		ldr	r3, [r7, #4]
 2029 001a 9A62     		str	r2, [r3, #40]
1118:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** }
 2030              		.loc 1 1118 0
 2031 001c 0C37     		adds	r7, r7, #12
 2032              		.cfi_def_cfa_offset 4
 2033 001e BD46     		mov	sp, r7
 2034              		.cfi_def_cfa_register 13
 2035              		@ sp needed
 2036 0020 5DF8047B 		ldr	r7, [sp], #4
 2037              		.cfi_restore 7
 2038              		.cfi_def_cfa_offset 0
 2039 0024 7047     		bx	lr
 2040              		.cfi_endproc
 2041              	.LFE58:
 2043 0026 00BF     		.section	.text.ADC_AnalogWatchdogSingleChannelConfig,"ax",%progbits
 2044              		.align	2
 2045              		.global	ADC_AnalogWatchdogSingleChannelConfig
 2046              		.thumb
 2047              		.thumb_func
 2049              	ADC_AnalogWatchdogSingleChannelConfig:
 2050              	.LFB59:
1119:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
1120:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
1121:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @brief  Configures the analog watchdog guarded single channel
1122:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1123:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADC_Channel: the ADC channel to configure for the analog watchdog. 
1124:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1125:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_0: ADC Channel0 selected
1126:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_1: ADC Channel1 selected
1127:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_2: ADC Channel2 selected
1128:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_3: ADC Channel3 selected
1129:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_4: ADC Channel4 selected
1130:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_5: ADC Channel5 selected
1131:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_6: ADC Channel6 selected
1132:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_7: ADC Channel7 selected
1133:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_8: ADC Channel8 selected
1134:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_9: ADC Channel9 selected
1135:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_10: ADC Channel10 selected
1136:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_11: ADC Channel11 selected
1137:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_12: ADC Channel12 selected
1138:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_13: ADC Channel13 selected
1139:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_14: ADC Channel14 selected
1140:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_15: ADC Channel15 selected
1141:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_16: ADC Channel16 selected
1142:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_17: ADC Channel17 selected
1143:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @retval None
1144:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
1145:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** void ADC_AnalogWatchdogSingleChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel)
1146:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** {
 2051              		.loc 1 1146 0
 2052              		.cfi_startproc
 2053              		@ args = 0, pretend = 0, frame = 16
 2054              		@ frame_needed = 1, uses_anonymous_args = 0
 2055              		@ link register save eliminated.
 2056 0000 80B4     		push	{r7}
 2057              		.cfi_def_cfa_offset 4
 2058              		.cfi_offset 7, -4
 2059 0002 85B0     		sub	sp, sp, #20
 2060              		.cfi_def_cfa_offset 24
 2061 0004 00AF     		add	r7, sp, #0
 2062              		.cfi_def_cfa_register 7
 2063 0006 7860     		str	r0, [r7, #4]
 2064 0008 0B46     		mov	r3, r1
 2065 000a FB70     		strb	r3, [r7, #3]
1147:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   uint32_t tmpreg = 0;
 2066              		.loc 1 1147 0
 2067 000c 0023     		movs	r3, #0
 2068 000e FB60     		str	r3, [r7, #12]
1148:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the parameters */
1149:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1150:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
1151:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Get the old register value */
1152:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   tmpreg = ADCx->CR1;
 2069              		.loc 1 1152 0
 2070 0010 7B68     		ldr	r3, [r7, #4]
 2071 0012 5B68     		ldr	r3, [r3, #4]
 2072 0014 FB60     		str	r3, [r7, #12]
1153:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Clear the Analog watchdog channel select bits */
1154:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   tmpreg &= CR1_AWDCH_Reset;
 2073              		.loc 1 1154 0
 2074 0016 FB68     		ldr	r3, [r7, #12]
 2075 0018 23F01F03 		bic	r3, r3, #31
 2076 001c FB60     		str	r3, [r7, #12]
1155:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Set the Analog watchdog channel */
1156:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   tmpreg |= ADC_Channel;
 2077              		.loc 1 1156 0
 2078 001e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2079 0020 FA68     		ldr	r2, [r7, #12]
 2080 0022 1343     		orrs	r3, r3, r2
 2081 0024 FB60     		str	r3, [r7, #12]
1157:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Store the new register value */
1158:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   ADCx->CR1 = tmpreg;
 2082              		.loc 1 1158 0
 2083 0026 7B68     		ldr	r3, [r7, #4]
 2084 0028 FA68     		ldr	r2, [r7, #12]
 2085 002a 5A60     		str	r2, [r3, #4]
1159:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** }
 2086              		.loc 1 1159 0
 2087 002c 1437     		adds	r7, r7, #20
 2088              		.cfi_def_cfa_offset 4
 2089 002e BD46     		mov	sp, r7
 2090              		.cfi_def_cfa_register 13
 2091              		@ sp needed
 2092 0030 5DF8047B 		ldr	r7, [sp], #4
 2093              		.cfi_restore 7
 2094              		.cfi_def_cfa_offset 0
 2095 0034 7047     		bx	lr
 2096              		.cfi_endproc
 2097              	.LFE59:
 2099 0036 00BF     		.section	.text.ADC_TempSensorVrefintCmd,"ax",%progbits
 2100              		.align	2
 2101              		.global	ADC_TempSensorVrefintCmd
 2102              		.thumb
 2103              		.thumb_func
 2105              	ADC_TempSensorVrefintCmd:
 2106              	.LFB60:
1160:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
1161:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
1162:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @brief  Enables or disables the temperature sensor and Vrefint channel.
1163:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  NewState: new state of the temperature sensor.
1164:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
1165:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @retval None
1166:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
1167:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** void ADC_TempSensorVrefintCmd(FunctionalState NewState)
1168:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** {
 2107              		.loc 1 1168 0
 2108              		.cfi_startproc
 2109              		@ args = 0, pretend = 0, frame = 8
 2110              		@ frame_needed = 1, uses_anonymous_args = 0
 2111              		@ link register save eliminated.
 2112 0000 80B4     		push	{r7}
 2113              		.cfi_def_cfa_offset 4
 2114              		.cfi_offset 7, -4
 2115 0002 83B0     		sub	sp, sp, #12
 2116              		.cfi_def_cfa_offset 16
 2117 0004 00AF     		add	r7, sp, #0
 2118              		.cfi_def_cfa_register 7
 2119 0006 0346     		mov	r3, r0
 2120 0008 FB71     		strb	r3, [r7, #7]
1169:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the parameters */
1170:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1171:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 2121              		.loc 1 1171 0
 2122 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2123 000c 002B     		cmp	r3, #0
 2124 000e 06D0     		beq	.L84
1172:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
1173:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Enable the temperature sensor and Vrefint channel*/
1174:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     ADC1->CR2 |= CR2_TSVREFE_Set;
 2125              		.loc 1 1174 0
 2126 0010 084A     		ldr	r2, .L86
 2127 0012 084B     		ldr	r3, .L86
 2128 0014 9B68     		ldr	r3, [r3, #8]
 2129 0016 43F40003 		orr	r3, r3, #8388608
 2130 001a 9360     		str	r3, [r2, #8]
 2131 001c 05E0     		b	.L83
 2132              	.L84:
1175:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
1176:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   else
1177:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
1178:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* Disable the temperature sensor and Vrefint channel*/
1179:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     ADC1->CR2 &= CR2_TSVREFE_Reset;
 2133              		.loc 1 1179 0
 2134 001e 054A     		ldr	r2, .L86
 2135 0020 044B     		ldr	r3, .L86
 2136 0022 9B68     		ldr	r3, [r3, #8]
 2137 0024 23F40003 		bic	r3, r3, #8388608
 2138 0028 9360     		str	r3, [r2, #8]
 2139              	.L83:
1180:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
1181:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** }
 2140              		.loc 1 1181 0
 2141 002a 0C37     		adds	r7, r7, #12
 2142              		.cfi_def_cfa_offset 4
 2143 002c BD46     		mov	sp, r7
 2144              		.cfi_def_cfa_register 13
 2145              		@ sp needed
 2146 002e 5DF8047B 		ldr	r7, [sp], #4
 2147              		.cfi_restore 7
 2148              		.cfi_def_cfa_offset 0
 2149 0032 7047     		bx	lr
 2150              	.L87:
 2151              		.align	2
 2152              	.L86:
 2153 0034 00240140 		.word	1073816576
 2154              		.cfi_endproc
 2155              	.LFE60:
 2157              		.section	.text.ADC_GetFlagStatus,"ax",%progbits
 2158              		.align	2
 2159              		.global	ADC_GetFlagStatus
 2160              		.thumb
 2161              		.thumb_func
 2163              	ADC_GetFlagStatus:
 2164              	.LFB61:
1182:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
1183:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
1184:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @brief  Checks whether the specified ADC flag is set or not.
1185:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1186:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADC_FLAG: specifies the flag to check. 
1187:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1188:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_AWD: Analog watchdog flag
1189:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_EOC: End of conversion flag
1190:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_JEOC: End of injected group conversion flag
1191:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_JSTRT: Start of injected group conversion flag
1192:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_STRT: Start of regular group conversion flag
1193:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @retval The new state of ADC_FLAG (SET or RESET).
1194:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
1195:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** FlagStatus ADC_GetFlagStatus(ADC_TypeDef* ADCx, uint8_t ADC_FLAG)
1196:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** {
 2165              		.loc 1 1196 0
 2166              		.cfi_startproc
 2167              		@ args = 0, pretend = 0, frame = 16
 2168              		@ frame_needed = 1, uses_anonymous_args = 0
 2169              		@ link register save eliminated.
 2170 0000 80B4     		push	{r7}
 2171              		.cfi_def_cfa_offset 4
 2172              		.cfi_offset 7, -4
 2173 0002 85B0     		sub	sp, sp, #20
 2174              		.cfi_def_cfa_offset 24
 2175 0004 00AF     		add	r7, sp, #0
 2176              		.cfi_def_cfa_register 7
 2177 0006 7860     		str	r0, [r7, #4]
 2178 0008 0B46     		mov	r3, r1
 2179 000a FB70     		strb	r3, [r7, #3]
1197:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 2180              		.loc 1 1197 0
 2181 000c 0023     		movs	r3, #0
 2182 000e FB73     		strb	r3, [r7, #15]
1198:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the parameters */
1199:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1200:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_GET_FLAG(ADC_FLAG));
1201:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the status of the specified ADC flag */
1202:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   if ((ADCx->SR & ADC_FLAG) != (uint8_t)RESET)
 2183              		.loc 1 1202 0
 2184 0010 7B68     		ldr	r3, [r7, #4]
 2185 0012 1A68     		ldr	r2, [r3]
 2186 0014 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2187 0016 1340     		ands	r3, r3, r2
 2188 0018 002B     		cmp	r3, #0
 2189 001a 02D0     		beq	.L89
1203:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
1204:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* ADC_FLAG is set */
1205:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     bitstatus = SET;
 2190              		.loc 1 1205 0
 2191 001c 0123     		movs	r3, #1
 2192 001e FB73     		strb	r3, [r7, #15]
 2193 0020 01E0     		b	.L90
 2194              	.L89:
1206:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
1207:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   else
1208:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
1209:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* ADC_FLAG is reset */
1210:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     bitstatus = RESET;
 2195              		.loc 1 1210 0
 2196 0022 0023     		movs	r3, #0
 2197 0024 FB73     		strb	r3, [r7, #15]
 2198              	.L90:
1211:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
1212:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Return the ADC_FLAG status */
1213:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   return  bitstatus;
 2199              		.loc 1 1213 0
 2200 0026 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1214:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** }
 2201              		.loc 1 1214 0
 2202 0028 1846     		mov	r0, r3
 2203 002a 1437     		adds	r7, r7, #20
 2204              		.cfi_def_cfa_offset 4
 2205 002c BD46     		mov	sp, r7
 2206              		.cfi_def_cfa_register 13
 2207              		@ sp needed
 2208 002e 5DF8047B 		ldr	r7, [sp], #4
 2209              		.cfi_restore 7
 2210              		.cfi_def_cfa_offset 0
 2211 0032 7047     		bx	lr
 2212              		.cfi_endproc
 2213              	.LFE61:
 2215              		.section	.text.ADC_ClearFlag,"ax",%progbits
 2216              		.align	2
 2217              		.global	ADC_ClearFlag
 2218              		.thumb
 2219              		.thumb_func
 2221              	ADC_ClearFlag:
 2222              	.LFB62:
1215:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
1216:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
1217:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @brief  Clears the ADCx's pending flags.
1218:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1219:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADC_FLAG: specifies the flag to clear. 
1220:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *   This parameter can be any combination of the following values:
1221:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_AWD: Analog watchdog flag
1222:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_EOC: End of conversion flag
1223:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_JEOC: End of injected group conversion flag
1224:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_JSTRT: Start of injected group conversion flag
1225:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_STRT: Start of regular group conversion flag
1226:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @retval None
1227:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
1228:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** void ADC_ClearFlag(ADC_TypeDef* ADCx, uint8_t ADC_FLAG)
1229:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** {
 2223              		.loc 1 1229 0
 2224              		.cfi_startproc
 2225              		@ args = 0, pretend = 0, frame = 8
 2226              		@ frame_needed = 1, uses_anonymous_args = 0
 2227              		@ link register save eliminated.
 2228 0000 80B4     		push	{r7}
 2229              		.cfi_def_cfa_offset 4
 2230              		.cfi_offset 7, -4
 2231 0002 83B0     		sub	sp, sp, #12
 2232              		.cfi_def_cfa_offset 16
 2233 0004 00AF     		add	r7, sp, #0
 2234              		.cfi_def_cfa_register 7
 2235 0006 7860     		str	r0, [r7, #4]
 2236 0008 0B46     		mov	r3, r1
 2237 000a FB70     		strb	r3, [r7, #3]
1230:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the parameters */
1231:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1232:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_CLEAR_FLAG(ADC_FLAG));
1233:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Clear the selected ADC flags */
1234:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   ADCx->SR = ~(uint32_t)ADC_FLAG;
 2238              		.loc 1 1234 0
 2239 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2240 000e DA43     		mvns	r2, r3
 2241 0010 7B68     		ldr	r3, [r7, #4]
 2242 0012 1A60     		str	r2, [r3]
1235:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** }
 2243              		.loc 1 1235 0
 2244 0014 0C37     		adds	r7, r7, #12
 2245              		.cfi_def_cfa_offset 4
 2246 0016 BD46     		mov	sp, r7
 2247              		.cfi_def_cfa_register 13
 2248              		@ sp needed
 2249 0018 5DF8047B 		ldr	r7, [sp], #4
 2250              		.cfi_restore 7
 2251              		.cfi_def_cfa_offset 0
 2252 001c 7047     		bx	lr
 2253              		.cfi_endproc
 2254              	.LFE62:
 2256 001e 00BF     		.section	.text.ADC_GetITStatus,"ax",%progbits
 2257              		.align	2
 2258              		.global	ADC_GetITStatus
 2259              		.thumb
 2260              		.thumb_func
 2262              	ADC_GetITStatus:
 2263              	.LFB63:
1236:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
1237:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
1238:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @brief  Checks whether the specified ADC interrupt has occurred or not.
1239:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1240:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt source to check. 
1241:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1242:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_IT_EOC: End of conversion interrupt mask
1243:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_IT_AWD: Analog watchdog interrupt mask
1244:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_IT_JEOC: End of injected conversion interrupt mask
1245:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @retval The new state of ADC_IT (SET or RESET).
1246:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
1247:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** ITStatus ADC_GetITStatus(ADC_TypeDef* ADCx, uint16_t ADC_IT)
1248:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** {
 2264              		.loc 1 1248 0
 2265              		.cfi_startproc
 2266              		@ args = 0, pretend = 0, frame = 24
 2267              		@ frame_needed = 1, uses_anonymous_args = 0
 2268              		@ link register save eliminated.
 2269 0000 80B4     		push	{r7}
 2270              		.cfi_def_cfa_offset 4
 2271              		.cfi_offset 7, -4
 2272 0002 87B0     		sub	sp, sp, #28
 2273              		.cfi_def_cfa_offset 32
 2274 0004 00AF     		add	r7, sp, #0
 2275              		.cfi_def_cfa_register 7
 2276 0006 7860     		str	r0, [r7, #4]
 2277 0008 0B46     		mov	r3, r1
 2278 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1249:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   ITStatus bitstatus = RESET;
 2279              		.loc 1 1249 0
 2280 000c 0023     		movs	r3, #0
 2281 000e FB75     		strb	r3, [r7, #23]
1250:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   uint32_t itmask = 0, enablestatus = 0;
 2282              		.loc 1 1250 0
 2283 0010 0023     		movs	r3, #0
 2284 0012 3B61     		str	r3, [r7, #16]
 2285 0014 0023     		movs	r3, #0
 2286 0016 FB60     		str	r3, [r7, #12]
1251:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the parameters */
1252:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1253:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_GET_IT(ADC_IT));
1254:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Get the ADC IT index */
1255:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   itmask = ADC_IT >> 8;
 2287              		.loc 1 1255 0
 2288 0018 7B88     		ldrh	r3, [r7, #2]
 2289 001a 1B0A     		lsrs	r3, r3, #8
 2290 001c 9BB2     		uxth	r3, r3
 2291 001e 3B61     		str	r3, [r7, #16]
1256:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Get the ADC_IT enable bit status */
1257:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   enablestatus = (ADCx->CR1 & (uint8_t)ADC_IT) ;
 2292              		.loc 1 1257 0
 2293 0020 7B68     		ldr	r3, [r7, #4]
 2294 0022 5B68     		ldr	r3, [r3, #4]
 2295 0024 7A88     		ldrh	r2, [r7, #2]	@ movhi
 2296 0026 D2B2     		uxtb	r2, r2
 2297 0028 1340     		ands	r3, r3, r2
 2298 002a FB60     		str	r3, [r7, #12]
1258:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the status of the specified ADC interrupt */
1259:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   if (((ADCx->SR & itmask) != (uint32_t)RESET) && enablestatus)
 2299              		.loc 1 1259 0
 2300 002c 7B68     		ldr	r3, [r7, #4]
 2301 002e 1A68     		ldr	r2, [r3]
 2302 0030 3B69     		ldr	r3, [r7, #16]
 2303 0032 1340     		ands	r3, r3, r2
 2304 0034 002B     		cmp	r3, #0
 2305 0036 05D0     		beq	.L94
 2306              		.loc 1 1259 0 is_stmt 0 discriminator 1
 2307 0038 FB68     		ldr	r3, [r7, #12]
 2308 003a 002B     		cmp	r3, #0
 2309 003c 02D0     		beq	.L94
1260:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
1261:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* ADC_IT is set */
1262:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     bitstatus = SET;
 2310              		.loc 1 1262 0 is_stmt 1
 2311 003e 0123     		movs	r3, #1
 2312 0040 FB75     		strb	r3, [r7, #23]
 2313 0042 01E0     		b	.L95
 2314              	.L94:
1263:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
1264:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   else
1265:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   {
1266:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     /* ADC_IT is reset */
1267:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****     bitstatus = RESET;
 2315              		.loc 1 1267 0
 2316 0044 0023     		movs	r3, #0
 2317 0046 FB75     		strb	r3, [r7, #23]
 2318              	.L95:
1268:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   }
1269:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Return the ADC_IT status */
1270:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   return  bitstatus;
 2319              		.loc 1 1270 0
 2320 0048 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1271:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** }
 2321              		.loc 1 1271 0
 2322 004a 1846     		mov	r0, r3
 2323 004c 1C37     		adds	r7, r7, #28
 2324              		.cfi_def_cfa_offset 4
 2325 004e BD46     		mov	sp, r7
 2326              		.cfi_def_cfa_register 13
 2327              		@ sp needed
 2328 0050 5DF8047B 		ldr	r7, [sp], #4
 2329              		.cfi_restore 7
 2330              		.cfi_def_cfa_offset 0
 2331 0054 7047     		bx	lr
 2332              		.cfi_endproc
 2333              	.LFE63:
 2335 0056 00BF     		.section	.text.ADC_ClearITPendingBit,"ax",%progbits
 2336              		.align	2
 2337              		.global	ADC_ClearITPendingBit
 2338              		.thumb
 2339              		.thumb_func
 2341              	ADC_ClearITPendingBit:
 2342              	.LFB64:
1272:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** 
1273:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** /**
1274:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @brief  Clears the ADCx's interrupt pending bits.
1275:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1276:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt pending bit to clear.
1277:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *   This parameter can be any combination of the following values:
1278:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_IT_EOC: End of conversion interrupt mask
1279:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_IT_AWD: Analog watchdog interrupt mask
1280:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   *     @arg ADC_IT_JEOC: End of injected conversion interrupt mask
1281:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   * @retval None
1282:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   */
1283:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** void ADC_ClearITPendingBit(ADC_TypeDef* ADCx, uint16_t ADC_IT)
1284:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** {
 2343              		.loc 1 1284 0
 2344              		.cfi_startproc
 2345              		@ args = 0, pretend = 0, frame = 16
 2346              		@ frame_needed = 1, uses_anonymous_args = 0
 2347              		@ link register save eliminated.
 2348 0000 80B4     		push	{r7}
 2349              		.cfi_def_cfa_offset 4
 2350              		.cfi_offset 7, -4
 2351 0002 85B0     		sub	sp, sp, #20
 2352              		.cfi_def_cfa_offset 24
 2353 0004 00AF     		add	r7, sp, #0
 2354              		.cfi_def_cfa_register 7
 2355 0006 7860     		str	r0, [r7, #4]
 2356 0008 0B46     		mov	r3, r1
 2357 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1285:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   uint8_t itmask = 0;
 2358              		.loc 1 1285 0
 2359 000c 0023     		movs	r3, #0
 2360 000e FB73     		strb	r3, [r7, #15]
1286:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Check the parameters */
1287:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1288:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   assert_param(IS_ADC_IT(ADC_IT));
1289:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Get the ADC IT index */
1290:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   itmask = (uint8_t)(ADC_IT >> 8);
 2361              		.loc 1 1290 0
 2362 0010 7B88     		ldrh	r3, [r7, #2]
 2363 0012 1B0A     		lsrs	r3, r3, #8
 2364 0014 9BB2     		uxth	r3, r3
 2365 0016 FB73     		strb	r3, [r7, #15]
1291:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   /* Clear the selected ADC interrupt pending bits */
1292:/home/virusv/usart/Libraries/src/stm32f10x_adc.c ****   ADCx->SR = ~(uint32_t)itmask;
 2366              		.loc 1 1292 0
 2367 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2368 001a DA43     		mvns	r2, r3
 2369 001c 7B68     		ldr	r3, [r7, #4]
 2370 001e 1A60     		str	r2, [r3]
1293:/home/virusv/usart/Libraries/src/stm32f10x_adc.c **** }
 2371              		.loc 1 1293 0
 2372 0020 1437     		adds	r7, r7, #20
 2373              		.cfi_def_cfa_offset 4
 2374 0022 BD46     		mov	sp, r7
 2375              		.cfi_def_cfa_register 13
 2376              		@ sp needed
 2377 0024 5DF8047B 		ldr	r7, [sp], #4
 2378              		.cfi_restore 7
 2379              		.cfi_def_cfa_offset 0
 2380 0028 7047     		bx	lr
 2381              		.cfi_endproc
 2382              	.LFE64:
 2384 002a 00BF     		.text
 2385              	.Letext0:
 2386              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 2387              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 2388              		.file 4 "/home/virusv/usart/CMSIS/CM3/DeviceSupport/ST/STM32F10x/stm32f10x.h"
 2389              		.file 5 "/home/virusv/usart/Libraries/inc/stm32f10x_adc.h"
 2390              		.file 6 "/home/virusv/usart/CMSIS/CM3/CoreSupport/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f10x_adc.c
     /tmp/cczEekUu.s:19     .text.ADC_DeInit:0000000000000000 $t
     /tmp/cczEekUu.s:24     .text.ADC_DeInit:0000000000000000 ADC_DeInit
     /tmp/cczEekUu.s:94     .text.ADC_DeInit:0000000000000068 $d
     /tmp/cczEekUu.s:101    .text.ADC_Init:0000000000000000 $t
     /tmp/cczEekUu.s:106    .text.ADC_Init:0000000000000000 ADC_Init
     /tmp/cczEekUu.s:218    .text.ADC_Init:00000000000000a0 $d
     /tmp/cczEekUu.s:223    .text.ADC_StructInit:0000000000000000 $t
     /tmp/cczEekUu.s:228    .text.ADC_StructInit:0000000000000000 ADC_StructInit
     /tmp/cczEekUu.s:281    .text.ADC_Cmd:0000000000000000 $t
     /tmp/cczEekUu.s:286    .text.ADC_Cmd:0000000000000000 ADC_Cmd
     /tmp/cczEekUu.s:336    .text.ADC_DMACmd:0000000000000000 $t
     /tmp/cczEekUu.s:341    .text.ADC_DMACmd:0000000000000000 ADC_DMACmd
     /tmp/cczEekUu.s:391    .text.ADC_ITConfig:0000000000000000 $t
     /tmp/cczEekUu.s:396    .text.ADC_ITConfig:0000000000000000 ADC_ITConfig
     /tmp/cczEekUu.s:457    .text.ADC_ResetCalibration:0000000000000000 $t
     /tmp/cczEekUu.s:462    .text.ADC_ResetCalibration:0000000000000000 ADC_ResetCalibration
     /tmp/cczEekUu.s:497    .text.ADC_GetResetCalibrationStatus:0000000000000000 $t
     /tmp/cczEekUu.s:502    .text.ADC_GetResetCalibrationStatus:0000000000000000 ADC_GetResetCalibrationStatus
     /tmp/cczEekUu.s:552    .text.ADC_StartCalibration:0000000000000000 $t
     /tmp/cczEekUu.s:557    .text.ADC_StartCalibration:0000000000000000 ADC_StartCalibration
     /tmp/cczEekUu.s:592    .text.ADC_GetCalibrationStatus:0000000000000000 $t
     /tmp/cczEekUu.s:597    .text.ADC_GetCalibrationStatus:0000000000000000 ADC_GetCalibrationStatus
     /tmp/cczEekUu.s:647    .text.ADC_SoftwareStartConvCmd:0000000000000000 $t
     /tmp/cczEekUu.s:652    .text.ADC_SoftwareStartConvCmd:0000000000000000 ADC_SoftwareStartConvCmd
     /tmp/cczEekUu.s:702    .text.ADC_GetSoftwareStartConvStatus:0000000000000000 $t
     /tmp/cczEekUu.s:707    .text.ADC_GetSoftwareStartConvStatus:0000000000000000 ADC_GetSoftwareStartConvStatus
     /tmp/cczEekUu.s:757    .text.ADC_DiscModeChannelCountConfig:0000000000000000 $t
     /tmp/cczEekUu.s:762    .text.ADC_DiscModeChannelCountConfig:0000000000000000 ADC_DiscModeChannelCountConfig
     /tmp/cczEekUu.s:821    .text.ADC_DiscModeCmd:0000000000000000 $t
     /tmp/cczEekUu.s:826    .text.ADC_DiscModeCmd:0000000000000000 ADC_DiscModeCmd
     /tmp/cczEekUu.s:876    .text.ADC_RegularChannelConfig:0000000000000000 $t
     /tmp/cczEekUu.s:881    .text.ADC_RegularChannelConfig:0000000000000000 ADC_RegularChannelConfig
     /tmp/cczEekUu.s:1127   .text.ADC_ExternalTrigConvCmd:0000000000000000 $t
     /tmp/cczEekUu.s:1132   .text.ADC_ExternalTrigConvCmd:0000000000000000 ADC_ExternalTrigConvCmd
     /tmp/cczEekUu.s:1182   .text.ADC_GetConversionValue:0000000000000000 $t
     /tmp/cczEekUu.s:1187   .text.ADC_GetConversionValue:0000000000000000 ADC_GetConversionValue
     /tmp/cczEekUu.s:1221   .text.ADC_GetDualModeConversionValue:0000000000000000 $t
     /tmp/cczEekUu.s:1226   .text.ADC_GetDualModeConversionValue:0000000000000000 ADC_GetDualModeConversionValue
     /tmp/cczEekUu.s:1253   .text.ADC_GetDualModeConversionValue:0000000000000014 $d
     /tmp/cczEekUu.s:1258   .text.ADC_AutoInjectedConvCmd:0000000000000000 $t
     /tmp/cczEekUu.s:1263   .text.ADC_AutoInjectedConvCmd:0000000000000000 ADC_AutoInjectedConvCmd
     /tmp/cczEekUu.s:1313   .text.ADC_InjectedDiscModeCmd:0000000000000000 $t
     /tmp/cczEekUu.s:1318   .text.ADC_InjectedDiscModeCmd:0000000000000000 ADC_InjectedDiscModeCmd
     /tmp/cczEekUu.s:1368   .text.ADC_ExternalTrigInjectedConvConfig:0000000000000000 $t
     /tmp/cczEekUu.s:1373   .text.ADC_ExternalTrigInjectedConvConfig:0000000000000000 ADC_ExternalTrigInjectedConvConfig
     /tmp/cczEekUu.s:1423   .text.ADC_ExternalTrigInjectedConvCmd:0000000000000000 $t
     /tmp/cczEekUu.s:1428   .text.ADC_ExternalTrigInjectedConvCmd:0000000000000000 ADC_ExternalTrigInjectedConvCmd
     /tmp/cczEekUu.s:1478   .text.ADC_SoftwareStartInjectedConvCmd:0000000000000000 $t
     /tmp/cczEekUu.s:1483   .text.ADC_SoftwareStartInjectedConvCmd:0000000000000000 ADC_SoftwareStartInjectedConvCmd
     /tmp/cczEekUu.s:1533   .text.ADC_GetSoftwareStartInjectedConvCmdStatus:0000000000000000 $t
     /tmp/cczEekUu.s:1538   .text.ADC_GetSoftwareStartInjectedConvCmdStatus:0000000000000000 ADC_GetSoftwareStartInjectedConvCmdStatus
     /tmp/cczEekUu.s:1588   .text.ADC_InjectedChannelConfig:0000000000000000 $t
     /tmp/cczEekUu.s:1593   .text.ADC_InjectedChannelConfig:0000000000000000 ADC_InjectedChannelConfig
     /tmp/cczEekUu.s:1771   .text.ADC_InjectedSequencerLengthConfig:0000000000000000 $t
     /tmp/cczEekUu.s:1776   .text.ADC_InjectedSequencerLengthConfig:0000000000000000 ADC_InjectedSequencerLengthConfig
     /tmp/cczEekUu.s:1835   .text.ADC_SetInjectedOffset:0000000000000000 $t
     /tmp/cczEekUu.s:1840   .text.ADC_SetInjectedOffset:0000000000000000 ADC_SetInjectedOffset
     /tmp/cczEekUu.s:1889   .text.ADC_GetInjectedConversionValue:0000000000000000 $t
     /tmp/cczEekUu.s:1894   .text.ADC_GetInjectedConversionValue:0000000000000000 ADC_GetInjectedConversionValue
     /tmp/cczEekUu.s:1942   .text.ADC_AnalogWatchdogCmd:0000000000000000 $t
     /tmp/cczEekUu.s:1947   .text.ADC_AnalogWatchdogCmd:0000000000000000 ADC_AnalogWatchdogCmd
     /tmp/cczEekUu.s:1998   .text.ADC_AnalogWatchdogThresholdsConfig:0000000000000000 $t
     /tmp/cczEekUu.s:2003   .text.ADC_AnalogWatchdogThresholdsConfig:0000000000000000 ADC_AnalogWatchdogThresholdsConfig
     /tmp/cczEekUu.s:2044   .text.ADC_AnalogWatchdogSingleChannelConfig:0000000000000000 $t
     /tmp/cczEekUu.s:2049   .text.ADC_AnalogWatchdogSingleChannelConfig:0000000000000000 ADC_AnalogWatchdogSingleChannelConfig
     /tmp/cczEekUu.s:2100   .text.ADC_TempSensorVrefintCmd:0000000000000000 $t
     /tmp/cczEekUu.s:2105   .text.ADC_TempSensorVrefintCmd:0000000000000000 ADC_TempSensorVrefintCmd
     /tmp/cczEekUu.s:2153   .text.ADC_TempSensorVrefintCmd:0000000000000034 $d
     /tmp/cczEekUu.s:2158   .text.ADC_GetFlagStatus:0000000000000000 $t
     /tmp/cczEekUu.s:2163   .text.ADC_GetFlagStatus:0000000000000000 ADC_GetFlagStatus
     /tmp/cczEekUu.s:2216   .text.ADC_ClearFlag:0000000000000000 $t
     /tmp/cczEekUu.s:2221   .text.ADC_ClearFlag:0000000000000000 ADC_ClearFlag
     /tmp/cczEekUu.s:2257   .text.ADC_GetITStatus:0000000000000000 $t
     /tmp/cczEekUu.s:2262   .text.ADC_GetITStatus:0000000000000000 ADC_GetITStatus
     /tmp/cczEekUu.s:2336   .text.ADC_ClearITPendingBit:0000000000000000 $t
     /tmp/cczEekUu.s:2341   .text.ADC_ClearITPendingBit:0000000000000000 ADC_ClearITPendingBit
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
