   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f10x_rtc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.RTC_ITConfig,"ax",%progbits
  19              		.align	2
  20              		.global	RTC_ITConfig
  21              		.thumb
  22              		.thumb_func
  24              	RTC_ITConfig:
  25              	.LFB29:
  26              		.file 1 "/home/virusv/usart/Libraries/src/stm32f10x_rtc.c"
   1:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** /**
   2:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   ******************************************************************************
   3:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @file    stm32f10x_rtc.c
   4:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @author  MCD Application Team
   5:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @version V3.5.0
   6:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @date    11-March-2011
   7:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @brief   This file provides all the RTC firmware functions.
   8:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   ******************************************************************************
   9:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @attention
  10:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   *
  11:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   *
  18:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   ******************************************************************************
  20:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   */
  21:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** 
  22:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** /* Includes ------------------------------------------------------------------*/
  23:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** #include "stm32f10x_rtc.h"
  24:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** 
  25:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  26:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @{
  27:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   */
  28:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** 
  29:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** /** @defgroup RTC 
  30:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @brief RTC driver modules
  31:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @{
  32:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   */
  33:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** 
  34:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** /** @defgroup RTC_Private_TypesDefinitions
  35:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @{
  36:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   */ 
  37:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** /**
  38:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @}
  39:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   */
  40:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** 
  41:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** /** @defgroup RTC_Private_Defines
  42:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @{
  43:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   */
  44:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** #define RTC_LSB_MASK     ((uint32_t)0x0000FFFF)  /*!< RTC LSB Mask */
  45:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** #define PRLH_MSB_MASK    ((uint32_t)0x000F0000)  /*!< RTC Prescaler MSB Mask */
  46:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** 
  47:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** /**
  48:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @}
  49:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   */
  50:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** 
  51:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** /** @defgroup RTC_Private_Macros
  52:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @{
  53:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   */
  54:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** 
  55:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** /**
  56:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @}
  57:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   */
  58:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** 
  59:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** /** @defgroup RTC_Private_Variables
  60:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @{
  61:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   */
  62:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** 
  63:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** /**
  64:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @}
  65:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   */
  66:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** 
  67:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** /** @defgroup RTC_Private_FunctionPrototypes
  68:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @{
  69:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   */
  70:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** 
  71:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** /**
  72:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @}
  73:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   */
  74:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** 
  75:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** /** @defgroup RTC_Private_Functions
  76:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @{
  77:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   */
  78:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** 
  79:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** /**
  80:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @brief  Enables or disables the specified RTC interrupts.
  81:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @param  RTC_IT: specifies the RTC interrupts sources to be enabled or disabled.
  82:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   *   This parameter can be any combination of the following values:
  83:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_OW: Overflow interrupt
  84:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_ALR: Alarm interrupt
  85:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_SEC: Second interrupt
  86:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @param  NewState: new state of the specified RTC interrupts.
  87:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   *   This parameter can be: ENABLE or DISABLE.
  88:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @retval None
  89:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   */
  90:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** void RTC_ITConfig(uint16_t RTC_IT, FunctionalState NewState)
  91:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** {
  27              		.loc 1 91 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              		.cfi_def_cfa_offset 16
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 0346     		mov	r3, r0
  40 0008 0A46     		mov	r2, r1
  41 000a FB80     		strh	r3, [r7, #6]	@ movhi
  42 000c 1346     		mov	r3, r2
  43 000e 7B71     		strb	r3, [r7, #5]
  92:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   /* Check the parameters */
  93:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   assert_param(IS_RTC_IT(RTC_IT));  
  94:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
  95:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   
  96:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   if (NewState != DISABLE)
  44              		.loc 1 96 0
  45 0010 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
  46 0012 002B     		cmp	r3, #0
  47 0014 08D0     		beq	.L2
  97:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   {
  98:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****     RTC->CRH |= RTC_IT;
  48              		.loc 1 98 0
  49 0016 0C49     		ldr	r1, .L4
  50 0018 0B4B     		ldr	r3, .L4
  51 001a 1B88     		ldrh	r3, [r3]	@ movhi
  52 001c 9AB2     		uxth	r2, r3
  53 001e FB88     		ldrh	r3, [r7, #6]	@ movhi
  54 0020 1343     		orrs	r3, r3, r2
  55 0022 9BB2     		uxth	r3, r3
  56 0024 0B80     		strh	r3, [r1]	@ movhi
  57 0026 09E0     		b	.L1
  58              	.L2:
  99:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   }
 100:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   else
 101:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   {
 102:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****     RTC->CRH &= (uint16_t)~RTC_IT;
  59              		.loc 1 102 0
  60 0028 0749     		ldr	r1, .L4
  61 002a 074B     		ldr	r3, .L4
  62 002c 1B88     		ldrh	r3, [r3]	@ movhi
  63 002e 9AB2     		uxth	r2, r3
  64 0030 FB88     		ldrh	r3, [r7, #6]	@ movhi
  65 0032 DB43     		mvns	r3, r3
  66 0034 9BB2     		uxth	r3, r3
  67 0036 1340     		ands	r3, r3, r2
  68 0038 9BB2     		uxth	r3, r3
  69 003a 0B80     		strh	r3, [r1]	@ movhi
  70              	.L1:
 103:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   }
 104:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** }
  71              		.loc 1 104 0
  72 003c 0C37     		adds	r7, r7, #12
  73              		.cfi_def_cfa_offset 4
  74 003e BD46     		mov	sp, r7
  75              		.cfi_def_cfa_register 13
  76              		@ sp needed
  77 0040 5DF8047B 		ldr	r7, [sp], #4
  78              		.cfi_restore 7
  79              		.cfi_def_cfa_offset 0
  80 0044 7047     		bx	lr
  81              	.L5:
  82 0046 00BF     		.align	2
  83              	.L4:
  84 0048 00280040 		.word	1073752064
  85              		.cfi_endproc
  86              	.LFE29:
  88              		.section	.text.RTC_EnterConfigMode,"ax",%progbits
  89              		.align	2
  90              		.global	RTC_EnterConfigMode
  91              		.thumb
  92              		.thumb_func
  94              	RTC_EnterConfigMode:
  95              	.LFB30:
 105:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** 
 106:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** /**
 107:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @brief  Enters the RTC configuration mode.
 108:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @param  None
 109:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @retval None
 110:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   */
 111:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** void RTC_EnterConfigMode(void)
 112:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** {
  96              		.loc 1 112 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 1, uses_anonymous_args = 0
 100              		@ link register save eliminated.
 101 0000 80B4     		push	{r7}
 102              		.cfi_def_cfa_offset 4
 103              		.cfi_offset 7, -4
 104 0002 00AF     		add	r7, sp, #0
 105              		.cfi_def_cfa_register 7
 113:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   /* Set the CNF flag to enter in the Configuration Mode */
 114:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   RTC->CRL |= RTC_CRL_CNF;
 106              		.loc 1 114 0
 107 0004 054A     		ldr	r2, .L7
 108 0006 054B     		ldr	r3, .L7
 109 0008 9B88     		ldrh	r3, [r3, #4]	@ movhi
 110 000a 9BB2     		uxth	r3, r3
 111 000c 43F01003 		orr	r3, r3, #16
 112 0010 9BB2     		uxth	r3, r3
 113 0012 9380     		strh	r3, [r2, #4]	@ movhi
 115:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** }
 114              		.loc 1 115 0
 115 0014 BD46     		mov	sp, r7
 116              		.cfi_def_cfa_register 13
 117              		@ sp needed
 118 0016 5DF8047B 		ldr	r7, [sp], #4
 119              		.cfi_restore 7
 120              		.cfi_def_cfa_offset 0
 121 001a 7047     		bx	lr
 122              	.L8:
 123              		.align	2
 124              	.L7:
 125 001c 00280040 		.word	1073752064
 126              		.cfi_endproc
 127              	.LFE30:
 129              		.section	.text.RTC_ExitConfigMode,"ax",%progbits
 130              		.align	2
 131              		.global	RTC_ExitConfigMode
 132              		.thumb
 133              		.thumb_func
 135              	RTC_ExitConfigMode:
 136              	.LFB31:
 116:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** 
 117:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** /**
 118:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @brief  Exits from the RTC configuration mode.
 119:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @param  None
 120:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @retval None
 121:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   */
 122:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** void RTC_ExitConfigMode(void)
 123:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** {
 137              		.loc 1 123 0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 0
 140              		@ frame_needed = 1, uses_anonymous_args = 0
 141              		@ link register save eliminated.
 142 0000 80B4     		push	{r7}
 143              		.cfi_def_cfa_offset 4
 144              		.cfi_offset 7, -4
 145 0002 00AF     		add	r7, sp, #0
 146              		.cfi_def_cfa_register 7
 124:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   /* Reset the CNF flag to exit from the Configuration Mode */
 125:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   RTC->CRL &= (uint16_t)~((uint16_t)RTC_CRL_CNF); 
 147              		.loc 1 125 0
 148 0004 054A     		ldr	r2, .L10
 149 0006 054B     		ldr	r3, .L10
 150 0008 9B88     		ldrh	r3, [r3, #4]	@ movhi
 151 000a 9BB2     		uxth	r3, r3
 152 000c 23F01003 		bic	r3, r3, #16
 153 0010 9BB2     		uxth	r3, r3
 154 0012 9380     		strh	r3, [r2, #4]	@ movhi
 126:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** }
 155              		.loc 1 126 0
 156 0014 BD46     		mov	sp, r7
 157              		.cfi_def_cfa_register 13
 158              		@ sp needed
 159 0016 5DF8047B 		ldr	r7, [sp], #4
 160              		.cfi_restore 7
 161              		.cfi_def_cfa_offset 0
 162 001a 7047     		bx	lr
 163              	.L11:
 164              		.align	2
 165              	.L10:
 166 001c 00280040 		.word	1073752064
 167              		.cfi_endproc
 168              	.LFE31:
 170              		.section	.text.RTC_GetCounter,"ax",%progbits
 171              		.align	2
 172              		.global	RTC_GetCounter
 173              		.thumb
 174              		.thumb_func
 176              	RTC_GetCounter:
 177              	.LFB32:
 127:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** 
 128:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** /**
 129:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @brief  Gets the RTC counter value.
 130:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @param  None
 131:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @retval RTC counter value.
 132:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   */
 133:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** uint32_t RTC_GetCounter(void)
 134:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** {
 178              		.loc 1 134 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 8
 181              		@ frame_needed = 1, uses_anonymous_args = 0
 182              		@ link register save eliminated.
 183 0000 80B4     		push	{r7}
 184              		.cfi_def_cfa_offset 4
 185              		.cfi_offset 7, -4
 186 0002 83B0     		sub	sp, sp, #12
 187              		.cfi_def_cfa_offset 16
 188 0004 00AF     		add	r7, sp, #0
 189              		.cfi_def_cfa_register 7
 135:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   uint16_t tmp = 0;
 190              		.loc 1 135 0
 191 0006 0023     		movs	r3, #0
 192 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 136:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   tmp = RTC->CNTL;
 193              		.loc 1 136 0
 194 000a 074B     		ldr	r3, .L14
 195 000c 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 196 000e FB80     		strh	r3, [r7, #6]	@ movhi
 137:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   return (((uint32_t)RTC->CNTH << 16 ) | tmp) ;
 197              		.loc 1 137 0
 198 0010 054B     		ldr	r3, .L14
 199 0012 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 200 0014 9BB2     		uxth	r3, r3
 201 0016 1A04     		lsls	r2, r3, #16
 202 0018 FB88     		ldrh	r3, [r7, #6]
 203 001a 1343     		orrs	r3, r3, r2
 138:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** }
 204              		.loc 1 138 0
 205 001c 1846     		mov	r0, r3
 206 001e 0C37     		adds	r7, r7, #12
 207              		.cfi_def_cfa_offset 4
 208 0020 BD46     		mov	sp, r7
 209              		.cfi_def_cfa_register 13
 210              		@ sp needed
 211 0022 5DF8047B 		ldr	r7, [sp], #4
 212              		.cfi_restore 7
 213              		.cfi_def_cfa_offset 0
 214 0026 7047     		bx	lr
 215              	.L15:
 216              		.align	2
 217              	.L14:
 218 0028 00280040 		.word	1073752064
 219              		.cfi_endproc
 220              	.LFE32:
 222              		.section	.text.RTC_SetCounter,"ax",%progbits
 223              		.align	2
 224              		.global	RTC_SetCounter
 225              		.thumb
 226              		.thumb_func
 228              	RTC_SetCounter:
 229              	.LFB33:
 139:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** 
 140:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** /**
 141:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @brief  Sets the RTC counter value.
 142:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @param  CounterValue: RTC counter new value.
 143:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @retval None
 144:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   */
 145:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** void RTC_SetCounter(uint32_t CounterValue)
 146:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** { 
 230              		.loc 1 146 0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 8
 233              		@ frame_needed = 1, uses_anonymous_args = 0
 234 0000 80B5     		push	{r7, lr}
 235              		.cfi_def_cfa_offset 8
 236              		.cfi_offset 7, -8
 237              		.cfi_offset 14, -4
 238 0002 82B0     		sub	sp, sp, #8
 239              		.cfi_def_cfa_offset 16
 240 0004 00AF     		add	r7, sp, #0
 241              		.cfi_def_cfa_register 7
 242 0006 7860     		str	r0, [r7, #4]
 147:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   RTC_EnterConfigMode();
 243              		.loc 1 147 0
 244 0008 FFF7FEFF 		bl	RTC_EnterConfigMode
 148:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   /* Set RTC COUNTER MSB word */
 149:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   RTC->CNTH = CounterValue >> 16;
 245              		.loc 1 149 0
 246 000c 064A     		ldr	r2, .L17
 247 000e 7B68     		ldr	r3, [r7, #4]
 248 0010 1B0C     		lsrs	r3, r3, #16
 249 0012 9BB2     		uxth	r3, r3
 250 0014 1383     		strh	r3, [r2, #24]	@ movhi
 150:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   /* Set RTC COUNTER LSB word */
 151:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   RTC->CNTL = (CounterValue & RTC_LSB_MASK);
 251              		.loc 1 151 0
 252 0016 044B     		ldr	r3, .L17
 253 0018 7A68     		ldr	r2, [r7, #4]
 254 001a 92B2     		uxth	r2, r2
 255 001c 9A83     		strh	r2, [r3, #28]	@ movhi
 152:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   RTC_ExitConfigMode();
 256              		.loc 1 152 0
 257 001e FFF7FEFF 		bl	RTC_ExitConfigMode
 153:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** }
 258              		.loc 1 153 0
 259 0022 0837     		adds	r7, r7, #8
 260              		.cfi_def_cfa_offset 8
 261 0024 BD46     		mov	sp, r7
 262              		.cfi_def_cfa_register 13
 263              		@ sp needed
 264 0026 80BD     		pop	{r7, pc}
 265              	.L18:
 266              		.align	2
 267              	.L17:
 268 0028 00280040 		.word	1073752064
 269              		.cfi_endproc
 270              	.LFE33:
 272              		.section	.text.RTC_SetPrescaler,"ax",%progbits
 273              		.align	2
 274              		.global	RTC_SetPrescaler
 275              		.thumb
 276              		.thumb_func
 278              	RTC_SetPrescaler:
 279              	.LFB34:
 154:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** 
 155:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** /**
 156:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @brief  Sets the RTC prescaler value.
 157:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @param  PrescalerValue: RTC prescaler new value.
 158:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @retval None
 159:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   */
 160:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** void RTC_SetPrescaler(uint32_t PrescalerValue)
 161:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** {
 280              		.loc 1 161 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 8
 283              		@ frame_needed = 1, uses_anonymous_args = 0
 284 0000 80B5     		push	{r7, lr}
 285              		.cfi_def_cfa_offset 8
 286              		.cfi_offset 7, -8
 287              		.cfi_offset 14, -4
 288 0002 82B0     		sub	sp, sp, #8
 289              		.cfi_def_cfa_offset 16
 290 0004 00AF     		add	r7, sp, #0
 291              		.cfi_def_cfa_register 7
 292 0006 7860     		str	r0, [r7, #4]
 162:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   /* Check the parameters */
 163:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   assert_param(IS_RTC_PRESCALER(PrescalerValue));
 164:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   
 165:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   RTC_EnterConfigMode();
 293              		.loc 1 165 0
 294 0008 FFF7FEFF 		bl	RTC_EnterConfigMode
 166:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   /* Set RTC PRESCALER MSB word */
 167:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   RTC->PRLH = (PrescalerValue & PRLH_MSB_MASK) >> 16;
 295              		.loc 1 167 0
 296 000c 074A     		ldr	r2, .L20
 297 000e 7B68     		ldr	r3, [r7, #4]
 298 0010 03F47023 		and	r3, r3, #983040
 299 0014 1B0C     		lsrs	r3, r3, #16
 300 0016 9BB2     		uxth	r3, r3
 301 0018 1381     		strh	r3, [r2, #8]	@ movhi
 168:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   /* Set RTC PRESCALER LSB word */
 169:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   RTC->PRLL = (PrescalerValue & RTC_LSB_MASK);
 302              		.loc 1 169 0
 303 001a 044B     		ldr	r3, .L20
 304 001c 7A68     		ldr	r2, [r7, #4]
 305 001e 92B2     		uxth	r2, r2
 306 0020 9A81     		strh	r2, [r3, #12]	@ movhi
 170:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   RTC_ExitConfigMode();
 307              		.loc 1 170 0
 308 0022 FFF7FEFF 		bl	RTC_ExitConfigMode
 171:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** }
 309              		.loc 1 171 0
 310 0026 0837     		adds	r7, r7, #8
 311              		.cfi_def_cfa_offset 8
 312 0028 BD46     		mov	sp, r7
 313              		.cfi_def_cfa_register 13
 314              		@ sp needed
 315 002a 80BD     		pop	{r7, pc}
 316              	.L21:
 317              		.align	2
 318              	.L20:
 319 002c 00280040 		.word	1073752064
 320              		.cfi_endproc
 321              	.LFE34:
 323              		.section	.text.RTC_SetAlarm,"ax",%progbits
 324              		.align	2
 325              		.global	RTC_SetAlarm
 326              		.thumb
 327              		.thumb_func
 329              	RTC_SetAlarm:
 330              	.LFB35:
 172:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** 
 173:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** /**
 174:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @brief  Sets the RTC alarm value.
 175:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @param  AlarmValue: RTC alarm new value.
 176:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @retval None
 177:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   */
 178:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** void RTC_SetAlarm(uint32_t AlarmValue)
 179:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** {  
 331              		.loc 1 179 0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 8
 334              		@ frame_needed = 1, uses_anonymous_args = 0
 335 0000 80B5     		push	{r7, lr}
 336              		.cfi_def_cfa_offset 8
 337              		.cfi_offset 7, -8
 338              		.cfi_offset 14, -4
 339 0002 82B0     		sub	sp, sp, #8
 340              		.cfi_def_cfa_offset 16
 341 0004 00AF     		add	r7, sp, #0
 342              		.cfi_def_cfa_register 7
 343 0006 7860     		str	r0, [r7, #4]
 180:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   RTC_EnterConfigMode();
 344              		.loc 1 180 0
 345 0008 FFF7FEFF 		bl	RTC_EnterConfigMode
 181:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   /* Set the ALARM MSB word */
 182:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   RTC->ALRH = AlarmValue >> 16;
 346              		.loc 1 182 0
 347 000c 064A     		ldr	r2, .L23
 348 000e 7B68     		ldr	r3, [r7, #4]
 349 0010 1B0C     		lsrs	r3, r3, #16
 350 0012 9BB2     		uxth	r3, r3
 351 0014 1384     		strh	r3, [r2, #32]	@ movhi
 183:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   /* Set the ALARM LSB word */
 184:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   RTC->ALRL = (AlarmValue & RTC_LSB_MASK);
 352              		.loc 1 184 0
 353 0016 044B     		ldr	r3, .L23
 354 0018 7A68     		ldr	r2, [r7, #4]
 355 001a 92B2     		uxth	r2, r2
 356 001c 9A84     		strh	r2, [r3, #36]	@ movhi
 185:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   RTC_ExitConfigMode();
 357              		.loc 1 185 0
 358 001e FFF7FEFF 		bl	RTC_ExitConfigMode
 186:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** }
 359              		.loc 1 186 0
 360 0022 0837     		adds	r7, r7, #8
 361              		.cfi_def_cfa_offset 8
 362 0024 BD46     		mov	sp, r7
 363              		.cfi_def_cfa_register 13
 364              		@ sp needed
 365 0026 80BD     		pop	{r7, pc}
 366              	.L24:
 367              		.align	2
 368              	.L23:
 369 0028 00280040 		.word	1073752064
 370              		.cfi_endproc
 371              	.LFE35:
 373              		.section	.text.RTC_GetDivider,"ax",%progbits
 374              		.align	2
 375              		.global	RTC_GetDivider
 376              		.thumb
 377              		.thumb_func
 379              	RTC_GetDivider:
 380              	.LFB36:
 187:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** 
 188:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** /**
 189:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @brief  Gets the RTC divider value.
 190:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @param  None
 191:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @retval RTC Divider value.
 192:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   */
 193:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** uint32_t RTC_GetDivider(void)
 194:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** {
 381              		.loc 1 194 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 8
 384              		@ frame_needed = 1, uses_anonymous_args = 0
 385              		@ link register save eliminated.
 386 0000 80B4     		push	{r7}
 387              		.cfi_def_cfa_offset 4
 388              		.cfi_offset 7, -4
 389 0002 83B0     		sub	sp, sp, #12
 390              		.cfi_def_cfa_offset 16
 391 0004 00AF     		add	r7, sp, #0
 392              		.cfi_def_cfa_register 7
 195:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   uint32_t tmp = 0x00;
 393              		.loc 1 195 0
 394 0006 0023     		movs	r3, #0
 395 0008 7B60     		str	r3, [r7, #4]
 196:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   tmp = ((uint32_t)RTC->DIVH & (uint32_t)0x000F) << 16;
 396              		.loc 1 196 0
 397 000a 0A4B     		ldr	r3, .L27
 398 000c 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 399 000e 9BB2     		uxth	r3, r3
 400 0010 03F00F03 		and	r3, r3, #15
 401 0014 1B04     		lsls	r3, r3, #16
 402 0016 7B60     		str	r3, [r7, #4]
 197:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   tmp |= RTC->DIVL;
 403              		.loc 1 197 0
 404 0018 064B     		ldr	r3, .L27
 405 001a 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 406 001c 9BB2     		uxth	r3, r3
 407 001e 1A46     		mov	r2, r3
 408 0020 7B68     		ldr	r3, [r7, #4]
 409 0022 1343     		orrs	r3, r3, r2
 410 0024 7B60     		str	r3, [r7, #4]
 198:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   return tmp;
 411              		.loc 1 198 0
 412 0026 7B68     		ldr	r3, [r7, #4]
 199:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** }
 413              		.loc 1 199 0
 414 0028 1846     		mov	r0, r3
 415 002a 0C37     		adds	r7, r7, #12
 416              		.cfi_def_cfa_offset 4
 417 002c BD46     		mov	sp, r7
 418              		.cfi_def_cfa_register 13
 419              		@ sp needed
 420 002e 5DF8047B 		ldr	r7, [sp], #4
 421              		.cfi_restore 7
 422              		.cfi_def_cfa_offset 0
 423 0032 7047     		bx	lr
 424              	.L28:
 425              		.align	2
 426              	.L27:
 427 0034 00280040 		.word	1073752064
 428              		.cfi_endproc
 429              	.LFE36:
 431              		.section	.text.RTC_WaitForLastTask,"ax",%progbits
 432              		.align	2
 433              		.global	RTC_WaitForLastTask
 434              		.thumb
 435              		.thumb_func
 437              	RTC_WaitForLastTask:
 438              	.LFB37:
 200:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** 
 201:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** /**
 202:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @brief  Waits until last write operation on RTC registers has finished.
 203:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @note   This function must be called before any write to RTC registers.
 204:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @param  None
 205:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @retval None
 206:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   */
 207:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** void RTC_WaitForLastTask(void)
 208:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** {
 439              		.loc 1 208 0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 0
 442              		@ frame_needed = 1, uses_anonymous_args = 0
 443              		@ link register save eliminated.
 444 0000 80B4     		push	{r7}
 445              		.cfi_def_cfa_offset 4
 446              		.cfi_offset 7, -4
 447 0002 00AF     		add	r7, sp, #0
 448              		.cfi_def_cfa_register 7
 209:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   /* Loop until RTOFF flag is set */
 210:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   while ((RTC->CRL & RTC_FLAG_RTOFF) == (uint16_t)RESET)
 449              		.loc 1 210 0
 450 0004 00BF     		nop
 451              	.L30:
 452              		.loc 1 210 0 is_stmt 0 discriminator 1
 453 0006 054B     		ldr	r3, .L31
 454 0008 9B88     		ldrh	r3, [r3, #4]	@ movhi
 455 000a 9BB2     		uxth	r3, r3
 456 000c 03F02003 		and	r3, r3, #32
 457 0010 002B     		cmp	r3, #0
 458 0012 F8D0     		beq	.L30
 211:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   {
 212:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   }
 213:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** }
 459              		.loc 1 213 0 is_stmt 1
 460 0014 BD46     		mov	sp, r7
 461              		.cfi_def_cfa_register 13
 462              		@ sp needed
 463 0016 5DF8047B 		ldr	r7, [sp], #4
 464              		.cfi_restore 7
 465              		.cfi_def_cfa_offset 0
 466 001a 7047     		bx	lr
 467              	.L32:
 468              		.align	2
 469              	.L31:
 470 001c 00280040 		.word	1073752064
 471              		.cfi_endproc
 472              	.LFE37:
 474              		.section	.text.RTC_WaitForSynchro,"ax",%progbits
 475              		.align	2
 476              		.global	RTC_WaitForSynchro
 477              		.thumb
 478              		.thumb_func
 480              	RTC_WaitForSynchro:
 481              	.LFB38:
 214:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** 
 215:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** /**
 216:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @brief  Waits until the RTC registers (RTC_CNT, RTC_ALR and RTC_PRL)
 217:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   *   are synchronized with RTC APB clock.
 218:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @note   This function must be called before any read operation after an APB reset
 219:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   *   or an APB clock stop.
 220:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @param  None
 221:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @retval None
 222:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   */
 223:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** void RTC_WaitForSynchro(void)
 224:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** {
 482              		.loc 1 224 0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 0
 485              		@ frame_needed = 1, uses_anonymous_args = 0
 486              		@ link register save eliminated.
 487 0000 80B4     		push	{r7}
 488              		.cfi_def_cfa_offset 4
 489              		.cfi_offset 7, -4
 490 0002 00AF     		add	r7, sp, #0
 491              		.cfi_def_cfa_register 7
 225:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   /* Clear RSF flag */
 226:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   RTC->CRL &= (uint16_t)~RTC_FLAG_RSF;
 492              		.loc 1 226 0
 493 0004 094A     		ldr	r2, .L35
 494 0006 094B     		ldr	r3, .L35
 495 0008 9B88     		ldrh	r3, [r3, #4]	@ movhi
 496 000a 9BB2     		uxth	r3, r3
 497 000c 23F00803 		bic	r3, r3, #8
 498 0010 9BB2     		uxth	r3, r3
 499 0012 9380     		strh	r3, [r2, #4]	@ movhi
 227:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   /* Loop until RSF flag is set */
 228:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   while ((RTC->CRL & RTC_FLAG_RSF) == (uint16_t)RESET)
 500              		.loc 1 228 0
 501 0014 00BF     		nop
 502              	.L34:
 503              		.loc 1 228 0 is_stmt 0 discriminator 1
 504 0016 054B     		ldr	r3, .L35
 505 0018 9B88     		ldrh	r3, [r3, #4]	@ movhi
 506 001a 9BB2     		uxth	r3, r3
 507 001c 03F00803 		and	r3, r3, #8
 508 0020 002B     		cmp	r3, #0
 509 0022 F8D0     		beq	.L34
 229:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   {
 230:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   }
 231:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** }
 510              		.loc 1 231 0 is_stmt 1
 511 0024 BD46     		mov	sp, r7
 512              		.cfi_def_cfa_register 13
 513              		@ sp needed
 514 0026 5DF8047B 		ldr	r7, [sp], #4
 515              		.cfi_restore 7
 516              		.cfi_def_cfa_offset 0
 517 002a 7047     		bx	lr
 518              	.L36:
 519              		.align	2
 520              	.L35:
 521 002c 00280040 		.word	1073752064
 522              		.cfi_endproc
 523              	.LFE38:
 525              		.section	.text.RTC_GetFlagStatus,"ax",%progbits
 526              		.align	2
 527              		.global	RTC_GetFlagStatus
 528              		.thumb
 529              		.thumb_func
 531              	RTC_GetFlagStatus:
 532              	.LFB39:
 232:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** 
 233:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** /**
 234:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @brief  Checks whether the specified RTC flag is set or not.
 235:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @param  RTC_FLAG: specifies the flag to check.
 236:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   *   This parameter can be one the following values:
 237:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_RTOFF: RTC Operation OFF flag
 238:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_RSF: Registers Synchronized flag
 239:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_OW: Overflow flag
 240:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_ALR: Alarm flag
 241:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_SEC: Second flag
 242:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @retval The new state of RTC_FLAG (SET or RESET).
 243:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   */
 244:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** FlagStatus RTC_GetFlagStatus(uint16_t RTC_FLAG)
 245:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** {
 533              		.loc 1 245 0
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 16
 536              		@ frame_needed = 1, uses_anonymous_args = 0
 537              		@ link register save eliminated.
 538 0000 80B4     		push	{r7}
 539              		.cfi_def_cfa_offset 4
 540              		.cfi_offset 7, -4
 541 0002 85B0     		sub	sp, sp, #20
 542              		.cfi_def_cfa_offset 24
 543 0004 00AF     		add	r7, sp, #0
 544              		.cfi_def_cfa_register 7
 545 0006 0346     		mov	r3, r0
 546 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 246:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   FlagStatus bitstatus = RESET;
 547              		.loc 1 246 0
 548 000a 0023     		movs	r3, #0
 549 000c FB73     		strb	r3, [r7, #15]
 247:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   
 248:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   /* Check the parameters */
 249:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   assert_param(IS_RTC_GET_FLAG(RTC_FLAG)); 
 250:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   
 251:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   if ((RTC->CRL & RTC_FLAG) != (uint16_t)RESET)
 550              		.loc 1 251 0
 551 000e 0A4B     		ldr	r3, .L41
 552 0010 9B88     		ldrh	r3, [r3, #4]	@ movhi
 553 0012 9AB2     		uxth	r2, r3
 554 0014 FB88     		ldrh	r3, [r7, #6]	@ movhi
 555 0016 1340     		ands	r3, r3, r2
 556 0018 9BB2     		uxth	r3, r3
 557 001a 002B     		cmp	r3, #0
 558 001c 02D0     		beq	.L38
 252:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   {
 253:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****     bitstatus = SET;
 559              		.loc 1 253 0
 560 001e 0123     		movs	r3, #1
 561 0020 FB73     		strb	r3, [r7, #15]
 562 0022 01E0     		b	.L39
 563              	.L38:
 254:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   }
 255:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   else
 256:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   {
 257:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****     bitstatus = RESET;
 564              		.loc 1 257 0
 565 0024 0023     		movs	r3, #0
 566 0026 FB73     		strb	r3, [r7, #15]
 567              	.L39:
 258:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   }
 259:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   return bitstatus;
 568              		.loc 1 259 0
 569 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 260:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** }
 570              		.loc 1 260 0
 571 002a 1846     		mov	r0, r3
 572 002c 1437     		adds	r7, r7, #20
 573              		.cfi_def_cfa_offset 4
 574 002e BD46     		mov	sp, r7
 575              		.cfi_def_cfa_register 13
 576              		@ sp needed
 577 0030 5DF8047B 		ldr	r7, [sp], #4
 578              		.cfi_restore 7
 579              		.cfi_def_cfa_offset 0
 580 0034 7047     		bx	lr
 581              	.L42:
 582 0036 00BF     		.align	2
 583              	.L41:
 584 0038 00280040 		.word	1073752064
 585              		.cfi_endproc
 586              	.LFE39:
 588              		.section	.text.RTC_ClearFlag,"ax",%progbits
 589              		.align	2
 590              		.global	RTC_ClearFlag
 591              		.thumb
 592              		.thumb_func
 594              	RTC_ClearFlag:
 595              	.LFB40:
 261:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** 
 262:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** /**
 263:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @brief  Clears the RTC's pending flags.
 264:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @param  RTC_FLAG: specifies the flag to clear.
 265:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   *   This parameter can be any combination of the following values:
 266:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_RSF: Registers Synchronized flag. This flag is cleared only after
 267:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   *                        an APB reset or an APB Clock stop.
 268:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_OW: Overflow flag
 269:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_ALR: Alarm flag
 270:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_SEC: Second flag
 271:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @retval None
 272:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   */
 273:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** void RTC_ClearFlag(uint16_t RTC_FLAG)
 274:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** {
 596              		.loc 1 274 0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 8
 599              		@ frame_needed = 1, uses_anonymous_args = 0
 600              		@ link register save eliminated.
 601 0000 80B4     		push	{r7}
 602              		.cfi_def_cfa_offset 4
 603              		.cfi_offset 7, -4
 604 0002 83B0     		sub	sp, sp, #12
 605              		.cfi_def_cfa_offset 16
 606 0004 00AF     		add	r7, sp, #0
 607              		.cfi_def_cfa_register 7
 608 0006 0346     		mov	r3, r0
 609 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 275:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   /* Check the parameters */
 276:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   assert_param(IS_RTC_CLEAR_FLAG(RTC_FLAG)); 
 277:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****     
 278:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   /* Clear the corresponding RTC flag */
 279:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   RTC->CRL &= (uint16_t)~RTC_FLAG;
 610              		.loc 1 279 0
 611 000a 0749     		ldr	r1, .L44
 612 000c 064B     		ldr	r3, .L44
 613 000e 9B88     		ldrh	r3, [r3, #4]	@ movhi
 614 0010 9AB2     		uxth	r2, r3
 615 0012 FB88     		ldrh	r3, [r7, #6]	@ movhi
 616 0014 DB43     		mvns	r3, r3
 617 0016 9BB2     		uxth	r3, r3
 618 0018 1340     		ands	r3, r3, r2
 619 001a 9BB2     		uxth	r3, r3
 620 001c 8B80     		strh	r3, [r1, #4]	@ movhi
 280:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** }
 621              		.loc 1 280 0
 622 001e 0C37     		adds	r7, r7, #12
 623              		.cfi_def_cfa_offset 4
 624 0020 BD46     		mov	sp, r7
 625              		.cfi_def_cfa_register 13
 626              		@ sp needed
 627 0022 5DF8047B 		ldr	r7, [sp], #4
 628              		.cfi_restore 7
 629              		.cfi_def_cfa_offset 0
 630 0026 7047     		bx	lr
 631              	.L45:
 632              		.align	2
 633              	.L44:
 634 0028 00280040 		.word	1073752064
 635              		.cfi_endproc
 636              	.LFE40:
 638              		.section	.text.RTC_GetITStatus,"ax",%progbits
 639              		.align	2
 640              		.global	RTC_GetITStatus
 641              		.thumb
 642              		.thumb_func
 644              	RTC_GetITStatus:
 645              	.LFB41:
 281:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** 
 282:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** /**
 283:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @brief  Checks whether the specified RTC interrupt has occurred or not.
 284:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @param  RTC_IT: specifies the RTC interrupts sources to check.
 285:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   *   This parameter can be one of the following values:
 286:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_OW: Overflow interrupt
 287:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_ALR: Alarm interrupt
 288:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_SEC: Second interrupt
 289:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @retval The new state of the RTC_IT (SET or RESET).
 290:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   */
 291:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** ITStatus RTC_GetITStatus(uint16_t RTC_IT)
 292:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** {
 646              		.loc 1 292 0
 647              		.cfi_startproc
 648              		@ args = 0, pretend = 0, frame = 16
 649              		@ frame_needed = 1, uses_anonymous_args = 0
 650              		@ link register save eliminated.
 651 0000 80B4     		push	{r7}
 652              		.cfi_def_cfa_offset 4
 653              		.cfi_offset 7, -4
 654 0002 85B0     		sub	sp, sp, #20
 655              		.cfi_def_cfa_offset 24
 656 0004 00AF     		add	r7, sp, #0
 657              		.cfi_def_cfa_register 7
 658 0006 0346     		mov	r3, r0
 659 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 293:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   ITStatus bitstatus = RESET;
 660              		.loc 1 293 0
 661 000a 0023     		movs	r3, #0
 662 000c FB73     		strb	r3, [r7, #15]
 294:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   /* Check the parameters */
 295:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   assert_param(IS_RTC_GET_IT(RTC_IT)); 
 296:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   
 297:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   bitstatus = (ITStatus)(RTC->CRL & RTC_IT);
 663              		.loc 1 297 0
 664 000e 0F4B     		ldr	r3, .L50
 665 0010 9B88     		ldrh	r3, [r3, #4]	@ movhi
 666 0012 9BB2     		uxth	r3, r3
 667 0014 DAB2     		uxtb	r2, r3
 668 0016 FB88     		ldrh	r3, [r7, #6]	@ movhi
 669 0018 DBB2     		uxtb	r3, r3
 670 001a 1340     		ands	r3, r3, r2
 671 001c FB73     		strb	r3, [r7, #15]
 298:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   if (((RTC->CRH & RTC_IT) != (uint16_t)RESET) && (bitstatus != (uint16_t)RESET))
 672              		.loc 1 298 0
 673 001e 0B4B     		ldr	r3, .L50
 674 0020 1B88     		ldrh	r3, [r3]	@ movhi
 675 0022 9AB2     		uxth	r2, r3
 676 0024 FB88     		ldrh	r3, [r7, #6]	@ movhi
 677 0026 1340     		ands	r3, r3, r2
 678 0028 9BB2     		uxth	r3, r3
 679 002a 002B     		cmp	r3, #0
 680 002c 05D0     		beq	.L47
 681              		.loc 1 298 0 is_stmt 0 discriminator 1
 682 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 683 0030 002B     		cmp	r3, #0
 684 0032 02D0     		beq	.L47
 299:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   {
 300:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****     bitstatus = SET;
 685              		.loc 1 300 0 is_stmt 1
 686 0034 0123     		movs	r3, #1
 687 0036 FB73     		strb	r3, [r7, #15]
 688 0038 01E0     		b	.L48
 689              	.L47:
 301:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   }
 302:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   else
 303:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   {
 304:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****     bitstatus = RESET;
 690              		.loc 1 304 0
 691 003a 0023     		movs	r3, #0
 692 003c FB73     		strb	r3, [r7, #15]
 693              	.L48:
 305:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   }
 306:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   return bitstatus;
 694              		.loc 1 306 0
 695 003e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 307:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** }
 696              		.loc 1 307 0
 697 0040 1846     		mov	r0, r3
 698 0042 1437     		adds	r7, r7, #20
 699              		.cfi_def_cfa_offset 4
 700 0044 BD46     		mov	sp, r7
 701              		.cfi_def_cfa_register 13
 702              		@ sp needed
 703 0046 5DF8047B 		ldr	r7, [sp], #4
 704              		.cfi_restore 7
 705              		.cfi_def_cfa_offset 0
 706 004a 7047     		bx	lr
 707              	.L51:
 708              		.align	2
 709              	.L50:
 710 004c 00280040 		.word	1073752064
 711              		.cfi_endproc
 712              	.LFE41:
 714              		.section	.text.RTC_ClearITPendingBit,"ax",%progbits
 715              		.align	2
 716              		.global	RTC_ClearITPendingBit
 717              		.thumb
 718              		.thumb_func
 720              	RTC_ClearITPendingBit:
 721              	.LFB42:
 308:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** 
 309:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** /**
 310:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @brief  Clears the RTC's interrupt pending bits.
 311:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @param  RTC_IT: specifies the interrupt pending bit to clear.
 312:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   *   This parameter can be any combination of the following values:
 313:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_OW: Overflow interrupt
 314:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_ALR: Alarm interrupt
 315:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_SEC: Second interrupt
 316:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   * @retval None
 317:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   */
 318:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** void RTC_ClearITPendingBit(uint16_t RTC_IT)
 319:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** {
 722              		.loc 1 319 0
 723              		.cfi_startproc
 724              		@ args = 0, pretend = 0, frame = 8
 725              		@ frame_needed = 1, uses_anonymous_args = 0
 726              		@ link register save eliminated.
 727 0000 80B4     		push	{r7}
 728              		.cfi_def_cfa_offset 4
 729              		.cfi_offset 7, -4
 730 0002 83B0     		sub	sp, sp, #12
 731              		.cfi_def_cfa_offset 16
 732 0004 00AF     		add	r7, sp, #0
 733              		.cfi_def_cfa_register 7
 734 0006 0346     		mov	r3, r0
 735 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 320:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   /* Check the parameters */
 321:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   assert_param(IS_RTC_IT(RTC_IT));  
 322:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   
 323:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   /* Clear the corresponding RTC pending bit */
 324:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c ****   RTC->CRL &= (uint16_t)~RTC_IT;
 736              		.loc 1 324 0
 737 000a 0749     		ldr	r1, .L53
 738 000c 064B     		ldr	r3, .L53
 739 000e 9B88     		ldrh	r3, [r3, #4]	@ movhi
 740 0010 9AB2     		uxth	r2, r3
 741 0012 FB88     		ldrh	r3, [r7, #6]	@ movhi
 742 0014 DB43     		mvns	r3, r3
 743 0016 9BB2     		uxth	r3, r3
 744 0018 1340     		ands	r3, r3, r2
 745 001a 9BB2     		uxth	r3, r3
 746 001c 8B80     		strh	r3, [r1, #4]	@ movhi
 325:/home/virusv/usart/Libraries/src/stm32f10x_rtc.c **** }
 747              		.loc 1 325 0
 748 001e 0C37     		adds	r7, r7, #12
 749              		.cfi_def_cfa_offset 4
 750 0020 BD46     		mov	sp, r7
 751              		.cfi_def_cfa_register 13
 752              		@ sp needed
 753 0022 5DF8047B 		ldr	r7, [sp], #4
 754              		.cfi_restore 7
 755              		.cfi_def_cfa_offset 0
 756 0026 7047     		bx	lr
 757              	.L54:
 758              		.align	2
 759              	.L53:
 760 0028 00280040 		.word	1073752064
 761              		.cfi_endproc
 762              	.LFE42:
 764              		.text
 765              	.Letext0:
 766              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 767              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 768              		.file 4 "/home/virusv/usart/CMSIS/CM3/DeviceSupport/ST/STM32F10x/stm32f10x.h"
 769              		.file 5 "/home/virusv/usart/CMSIS/CM3/CoreSupport/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f10x_rtc.c
     /tmp/ccgWpcDv.s:19     .text.RTC_ITConfig:0000000000000000 $t
     /tmp/ccgWpcDv.s:24     .text.RTC_ITConfig:0000000000000000 RTC_ITConfig
     /tmp/ccgWpcDv.s:84     .text.RTC_ITConfig:0000000000000048 $d
     /tmp/ccgWpcDv.s:89     .text.RTC_EnterConfigMode:0000000000000000 $t
     /tmp/ccgWpcDv.s:94     .text.RTC_EnterConfigMode:0000000000000000 RTC_EnterConfigMode
     /tmp/ccgWpcDv.s:125    .text.RTC_EnterConfigMode:000000000000001c $d
     /tmp/ccgWpcDv.s:130    .text.RTC_ExitConfigMode:0000000000000000 $t
     /tmp/ccgWpcDv.s:135    .text.RTC_ExitConfigMode:0000000000000000 RTC_ExitConfigMode
     /tmp/ccgWpcDv.s:166    .text.RTC_ExitConfigMode:000000000000001c $d
     /tmp/ccgWpcDv.s:171    .text.RTC_GetCounter:0000000000000000 $t
     /tmp/ccgWpcDv.s:176    .text.RTC_GetCounter:0000000000000000 RTC_GetCounter
     /tmp/ccgWpcDv.s:218    .text.RTC_GetCounter:0000000000000028 $d
     /tmp/ccgWpcDv.s:223    .text.RTC_SetCounter:0000000000000000 $t
     /tmp/ccgWpcDv.s:228    .text.RTC_SetCounter:0000000000000000 RTC_SetCounter
     /tmp/ccgWpcDv.s:268    .text.RTC_SetCounter:0000000000000028 $d
     /tmp/ccgWpcDv.s:273    .text.RTC_SetPrescaler:0000000000000000 $t
     /tmp/ccgWpcDv.s:278    .text.RTC_SetPrescaler:0000000000000000 RTC_SetPrescaler
     /tmp/ccgWpcDv.s:319    .text.RTC_SetPrescaler:000000000000002c $d
     /tmp/ccgWpcDv.s:324    .text.RTC_SetAlarm:0000000000000000 $t
     /tmp/ccgWpcDv.s:329    .text.RTC_SetAlarm:0000000000000000 RTC_SetAlarm
     /tmp/ccgWpcDv.s:369    .text.RTC_SetAlarm:0000000000000028 $d
     /tmp/ccgWpcDv.s:374    .text.RTC_GetDivider:0000000000000000 $t
     /tmp/ccgWpcDv.s:379    .text.RTC_GetDivider:0000000000000000 RTC_GetDivider
     /tmp/ccgWpcDv.s:427    .text.RTC_GetDivider:0000000000000034 $d
     /tmp/ccgWpcDv.s:432    .text.RTC_WaitForLastTask:0000000000000000 $t
     /tmp/ccgWpcDv.s:437    .text.RTC_WaitForLastTask:0000000000000000 RTC_WaitForLastTask
     /tmp/ccgWpcDv.s:470    .text.RTC_WaitForLastTask:000000000000001c $d
     /tmp/ccgWpcDv.s:475    .text.RTC_WaitForSynchro:0000000000000000 $t
     /tmp/ccgWpcDv.s:480    .text.RTC_WaitForSynchro:0000000000000000 RTC_WaitForSynchro
     /tmp/ccgWpcDv.s:521    .text.RTC_WaitForSynchro:000000000000002c $d
     /tmp/ccgWpcDv.s:526    .text.RTC_GetFlagStatus:0000000000000000 $t
     /tmp/ccgWpcDv.s:531    .text.RTC_GetFlagStatus:0000000000000000 RTC_GetFlagStatus
     /tmp/ccgWpcDv.s:584    .text.RTC_GetFlagStatus:0000000000000038 $d
     /tmp/ccgWpcDv.s:589    .text.RTC_ClearFlag:0000000000000000 $t
     /tmp/ccgWpcDv.s:594    .text.RTC_ClearFlag:0000000000000000 RTC_ClearFlag
     /tmp/ccgWpcDv.s:634    .text.RTC_ClearFlag:0000000000000028 $d
     /tmp/ccgWpcDv.s:639    .text.RTC_GetITStatus:0000000000000000 $t
     /tmp/ccgWpcDv.s:644    .text.RTC_GetITStatus:0000000000000000 RTC_GetITStatus
     /tmp/ccgWpcDv.s:710    .text.RTC_GetITStatus:000000000000004c $d
     /tmp/ccgWpcDv.s:715    .text.RTC_ClearITPendingBit:0000000000000000 $t
     /tmp/ccgWpcDv.s:720    .text.RTC_ClearITPendingBit:0000000000000000 RTC_ClearITPendingBit
     /tmp/ccgWpcDv.s:760    .text.RTC_ClearITPendingBit:0000000000000028 $d
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
